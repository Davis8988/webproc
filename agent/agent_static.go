// Code generated by go-bindata.
// sources:
// static/css/app.css
// static/index.html
// static/js/app.js
// DO NOT EDIT!

package agent

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cssAppCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x6d\x8b\xe3\x36\x10\xfe\x1c\xff\x0a\x95\xe3\xe0\x2e\xac\x1d\x65\xb3\xbb\x77\x75\x28\x74\x5b\x8e\x5e\xa1\xa5\x9f\xfa\x03\x14\x6b\xec\x88\xc8\x1a\x23\xc9\x9b\xa4\x25\xff\xbd\xe8\xc5\xaf\x49\xe8\x1e\x07\x6b\x47\x8f\xe6\xed\x79\x66\xc6\x7b\x5b\xcb\x07\xb2\x43\x7e\x26\xff\x26\x8b\x12\x95\x4d\x4b\x56\x0b\x79\xce\xc9\xaf\xd8\x6a\x01\xfa\x81\xd4\xa8\xd0\x34\xac\x80\x6d\xb2\x68\x18\xe7\x42\x55\x39\xa1\xdb\x64\x51\x33\x5d\x09\x15\x9e\x27\x57\xbf\x83\x7c\x03\x2b\x0a\xb6\x4d\x16\xf8\x06\xba\x94\x78\x4c\xcf\x39\xd9\x0b\xce\x41\x6d\x93\x4b\x92\x74\x2e\xb9\x30\x8d\x64\xe7\x9c\x94\x12\x4e\xce\xa6\x50\xe9\x1e\x44\xb5\xb7\x39\x59\x53\xfa\xb6\xf7\x68\x03\x12\x0a\xeb\xf0\xe9\x11\x76\x07\x61\x53\xd6\x34\xc0\x34\x53\x05\xe4\x44\xa1\x02\x87\xca\x5a\x91\xed\x5a\x6b\x51\x39\xe4\x51\x70\xbb\xcf\xc9\x57\xda\x9c\x86\xc0\x53\x09\xa5\xb3\xfc\xec\x7e\xbc\x24\xc9\x6a\xf9\xd3\xff\xff\x5b\xae\x92\x9a\x09\x75\x2b\x5c\xf7\x27\xe5\x42\x43\x61\x05\xaa\x9c\x68\x3c\x6e\x7b\xd7\x6b\x4a\x3f\x7a\x2f\x59\x81\xca\x82\xb2\xef\xb1\x50\xa0\x6c\x6b\x15\x0f\x72\xf2\x32\x98\x7b\x0e\xd6\xde\x1b\x72\xf0\xaa\x51\x1a\x4f\xad\xb7\xb6\x8e\x15\xee\x02\x5c\x87\xe2\x58\x38\xd9\x94\x49\x51\x39\xff\xa0\x2c\xe8\x31\xd5\x11\xb4\x43\xcd\x41\xa7\x3a\x72\xd3\x9c\x88\x41\x29\x38\xf9\xf0\xfa\xfa\x3a\xe3\x99\xb5\x16\x5d\xa8\x43\x04\x59\xb1\x87\xe2\x50\x33\x7d\xc8\x44\x11\xf8\x19\xa9\x67\x82\x14\xaa\x69\xad\xe9\x61\x7d\xbd\x1c\xcb\x21\xff\x01\x6c\x1a\xa6\xdc\x9b\x82\xc2\x02\xef\x25\x6c\xc4\x3f\xe0\xb2\x0b\x24\xcf\xe0\x5c\x98\xbb\x37\x7c\xa6\x97\xe5\x6a\x1c\x8f\x15\x56\x42\x26\x54\x89\x59\x29\x40\xfa\x3b\xbe\x60\x1c\x0a\xd4\x2c\xb0\xd6\x2a\x0e\x5a\x8a\x10\xe1\x24\x99\xab\x6b\xb1\xce\x4e\x88\xf7\xc1\x4e\xca\xbe\x64\x3b\x3c\x8d\xc4\xdc\x29\x6a\x96\x92\xa9\x99\x94\xa0\x67\xd9\xd0\xec\x47\xa8\x67\x2e\x74\xab\x52\x63\x99\x35\xb7\xb1\xb3\x36\x79\xa4\xb1\x4d\xb2\x12\xa5\xc4\x63\x4f\x8a\xd5\x4c\x19\x11\x52\xc7\x86\x15\xc2\x9e\x09\x30\x03\x84\x66\x1b\x13\x6e\xd4\x60\x0c\xab\xc0\x3b\xea\xac\x5a\x6c\x72\xb2\x89\x46\x5d\x8a\x11\x34\xaf\x4d\xa7\xc1\x00\xea\xeb\x20\xd9\x0e\xa4\xc3\x16\xad\x36\xa8\x73\xd2\xa0\xe8\x80\xef\x6e\x0b\x5f\x0c\x26\x54\x28\x57\x83\x5d\x1a\x1a\x24\xb3\xe2\x0d\xb6\xa3\x5e\xb9\x8c\xd0\x19\x70\x61\xd1\x5f\x1a\xcf\xa8\x47\x1a\xd3\xf9\x30\x9c\x4f\x66\x61\x3f\x3d\x7f\x10\x75\x83\xda\x32\x65\xb7\x63\xbf\x6c\x67\x50\xb6\xd6\xf9\xf5\xe5\x71\xc3\x34\xf6\x18\xf5\x5d\x67\x2d\xd6\xe1\x39\x90\xe2\x9e\x46\x13\xf2\xe3\x2c\x4c\x89\xd5\x95\x60\x26\x93\x7a\xde\xd7\x37\xb2\xe9\x7a\xdd\x07\x74\xb7\xd3\x67\x7d\x3e\xb8\x77\x9a\xbc\xd9\xba\x53\x5c\x86\xad\x0d\xfa\xc5\xd6\x3e\xcc\x0f\x41\xeb\x70\x08\x5a\x5f\x1d\xb2\xca\x4d\x53\x7f\x1c\x1e\xc7\xde\x84\x9a\x34\xe2\x34\x2e\xef\xd4\x49\x08\xa5\x53\xd0\x07\x4a\x1f\xe9\x17\x7e\x0f\xec\x82\x18\x81\xbf\xbe\xac\x9f\x28\xbd\x07\xee\x23\x89\xf0\x4a\xc3\xd9\x63\x67\xcd\x73\x93\xfb\x48\xf9\xa6\xab\x7f\x60\xbd\x7b\x65\xc5\xa1\xd2\xd8\x2a\x9e\x13\x5d\xed\xd8\x27\xfa\x40\xe2\xff\x6c\xfd\x79\xcc\xe9\xc6\xe3\x7b\x3a\xc3\x6b\xd4\xc2\xe3\x7a\x32\xc7\x19\x17\xad\xc9\xc9\xb0\x09\xff\xfc\xeb\x97\xdf\xff\xf8\x96\xfc\x5c\x03\x17\x8c\x7c\xaa\xd9\xa9\xdb\x13\x5f\x36\x2f\xcd\xe9\xb3\x8b\xbd\x5b\xdb\xf7\xd7\xd6\x25\x59\x4c\x16\xcf\x62\x64\x27\xaa\xf1\xf6\xbe\x99\x2d\x98\xa0\x99\xfe\xd7\xae\x22\x57\x6a\x9c\xf8\x0b\xc3\x3a\xba\x1d\x24\x3f\xc5\xcc\x16\xcc\x5c\x38\xe9\x4e\x62\x71\x70\xae\x27\xf3\xf1\xd9\xcf\xc7\xeb\xd1\x73\xdb\x78\x89\xba\x9e\x1a\x8f\xf9\x4c\xd1\x66\x8f\x47\x75\xff\x4e\x17\xc9\xdc\xc5\x78\xa7\xdc\x2e\xe6\x25\xb9\x24\xcb\x55\xb2\x5a\x7e\xff\xfb\xb7\x6f\xcb\xd5\x40\xea\x68\xf9\x3f\x3d\xd1\xc8\xea\xf8\xfb\xe4\xce\x27\x4d\x17\xc2\x64\xc8\x4c\xe6\xc4\x8c\xb0\xf8\xa1\x75\x4d\xd7\x25\xf9\x2f\x00\x00\xff\xff\x61\x86\x78\x18\x75\x0a\x00\x00")

func cssAppCssBytes() ([]byte, error) {
	return bindataRead(
		_cssAppCss,
		"css/app.css",
	)
}

func cssAppCss() (*asset, error) {
	bytes, err := cssAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "css/app.css", size: 2677, mode: os.FileMode(436), modTime: time.Unix(1504568188, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4d\x8b\x1b\x39\x10\x3d\xf7\xfc\x0a\x8d\x2e\x4e\x60\xdc\x9d\x19\x76\x21\x98\x76\x87\x90\xcd\xc2\xc2\x42\x86\xcc\x5e\x96\x90\x83\x2c\x55\xcb\xb2\x65\xa9\x91\xd4\x9e\x31\x8e\xff\xfb\x22\xf5\x77\xfb\x63\x9c\xc0\x9e\x2c\xab\xea\x95\xaa\x9e\x4a\xaf\xa5\xf4\xf6\x8f\x2f\x9f\xfe\xf9\xf7\xf1\x33\x5a\xba\x8d\xcc\x6e\x52\xff\x83\x14\x9f\x92\xa2\x98\xe3\x67\x58\x14\x46\x53\x9c\xdd\x44\xe9\x12\x08\xcb\x6e\xa2\x28\x75\xc2\x49\xf0\x2e\x0b\xa1\xd8\x1c\x33\xe2\x48\xfc\x49\xab\x5c\xf0\xf8\xd1\x68\x6e\xc8\xe6\xa3\xe1\xf6\xdb\xbb\xef\x38\xab\xf1\x69\x12\x30\x01\x2d\x85\x5a\x23\x03\x72\x8e\xad\xdb\x49\xb0\x4b\x00\x87\xd1\xd2\x40\x3e\xc7\x49\x42\x99\x5a\xd9\x98\x4a\x5d\xb2\x5c\x12\x03\x31\xd5\x9b\x84\xac\xc8\x4b\x22\xc5\xc2\x26\x16\x36\x44\x39\x41\xa7\xa5\x48\x1e\xe2\x87\xf8\xa1\x9d\x89\x37\x42\xc5\xd4\x5a\xfc\xea\x22\xd4\xda\x84\x14\x45\xe7\x1c\x5c\x32\xf4\x4d\xf1\x29\x95\x9a\xac\xbf\xa3\x3d\x62\xc2\x16\x92\xec\x66\x48\x69\x05\xe8\x90\x26\x95\xd3\x4d\x94\x26\x35\x0f\xe9\x42\xb3\x1d\x6a\x30\x21\x90\x40\x54\x12\x6b\xe7\x58\x6a\xba\x46\xb9\x96\x52\x3f\x23\x41\xb5\xc2\x59\x9a\x88\xe0\xb2\x21\x42\xf9\x41\x94\x5a\xa0\x4e\x68\xd5\x40\xa8\x56\xce\x68\x59\xa5\x14\x45\xe9\xf2\xbe\xb1\x04\xea\xea\xe9\x28\xb5\x05\x51\x3f\xc9\xbd\x87\x34\xf0\x36\x45\xa1\x8a\xd2\x59\xe4\x97\x05\xe5\xaa\x2c\xab\x6a\x04\x5d\xcf\xb1\x5d\xea\xe7\xbf\x2a\x97\x39\xba\xed\xfe\xb5\x95\x44\x9e\x89\xfb\x7a\xc4\xc4\xb6\x89\x5b\x0a\x54\x87\xce\xb5\xd9\xd4\x21\x83\x65\xef\xa3\xa8\x19\xea\x82\x1d\xda\xaa\x86\x01\xaa\x06\x13\x2a\xd7\x28\x17\x20\x59\xe3\x16\x3d\x39\xe2\x4a\x5b\x63\x12\x26\xb6\xa7\xf1\x01\x69\x83\xef\x28\x40\x57\x3f\x5d\x02\x5d\x6f\x88\x59\xf7\x4b\x6f\x76\x42\x01\x75\xc0\xd0\x07\x34\xe1\x06\x40\x4d\xd0\x0c\x4d\x0c\xb0\x49\xaf\xfa\xde\x56\x9c\xc2\xb5\x7f\x02\x96\x09\xdb\x4d\xe0\x1a\x1f\xb5\xbb\x38\x40\x7e\x51\x52\x28\x08\xb0\x2f\x79\x1e\xc6\x7d\x44\xbd\x3f\x06\x6a\xd0\x9b\xb7\x38\xab\xfd\x06\x3b\x5d\x71\xa2\xf8\xd4\xd3\xdd\x5b\xa2\xa5\xe2\x2a\x2e\x42\x7f\x7d\x2d\x95\x12\x8a\xbf\x42\xc7\xc9\xd6\xec\x41\xeb\x61\x00\x7f\x7e\x11\x81\x89\xac\x1a\x8c\x12\xef\x6d\xec\x60\x67\x4d\xa9\xa6\x7e\x57\x2d\xbe\x5c\x97\x87\xa7\x8b\x2c\xd7\x26\x4d\x16\x19\xaa\xf2\x22\x5c\x37\xc7\x65\x49\x14\x07\xf6\xd1\xf9\xf4\xc3\xc2\x83\x15\x47\xc4\xf5\xcb\xc0\x3e\x6c\x21\x58\x08\xbb\xdf\xa3\x60\x7b\x14\x0c\x1d\x0e\x97\x42\xdc\x1e\xc5\xa0\x9a\xc1\x20\x88\xe7\xe1\x93\x66\x30\x8e\x34\x68\xf2\x71\xc3\xb7\x0b\xe4\x42\x82\x8d\x25\x28\xee\x96\x28\x43\xf7\xf8\x14\x7b\x97\xce\x55\xf4\xa7\x8f\xf0\x1a\xff\xa5\x18\xc3\x52\x0b\x12\xa8\xeb\x39\x2c\x4a\xe7\xea\x16\xd2\x85\xd7\x37\x3b\xc7\xb9\x97\x02\x94\x23\xa1\x50\xc8\x34\x58\x37\x9a\x79\x79\xae\xb4\x22\xf6\xf3\x61\x3b\x42\xbc\xab\xaa\xbf\xa2\xac\xbf\x35\xe7\x42\xf1\xeb\xf4\x62\x24\x14\x43\x8f\x70\x42\x16\xfa\xa5\x7f\x7a\x7c\xe6\xc8\xed\x0a\xa8\x0f\x90\x37\x23\xc1\xbc\xfa\x73\x5d\xba\x13\x55\xfa\xdd\x8a\xbd\xa9\x8b\x22\xc9\x02\xa4\xe7\xa7\x85\x65\xd6\x31\x5d\xba\x34\x09\xa6\x57\x0f\xc5\x2f\x24\x07\xc6\x9c\x4b\xce\x9b\xce\x25\x17\x6c\xd6\x31\x30\xe6\x7f\x4c\x8e\x70\x50\x67\xb9\xab\x8c\xe7\x12\xac\xad\xe1\xe7\x42\x86\x17\x1a\x61\xd4\x03\x55\x33\x9f\xee\xee\xe6\x3b\xe9\x88\xf1\x1a\x3c\x50\xe8\xea\x73\xd7\x4c\x45\x52\x13\x26\x14\x9f\xa1\xe0\x1c\x0b\xc5\xef\xfc\xfd\x82\x2c\x24\xb0\x19\xba\xb5\x64\x0b\x0c\xfd\xf8\x51\x9b\xab\xf1\x6d\x2b\x6c\x77\x6d\x9c\xc2\x88\x0d\x31\x3b\x0f\xa9\x3d\xef\x50\x10\xe4\x19\x42\x2d\xb8\xf1\x3e\xe0\x6c\xbf\x1f\x84\x7c\x73\xa4\xc8\x10\xcc\x41\x91\x9f\xc2\xe8\xad\x97\x9f\xaa\xc8\x57\x45\x67\x70\x72\xaf\x53\x8b\x6b\xf8\x24\x5b\x78\xf3\x76\x70\x6d\x68\xeb\xef\x11\x49\xb6\x30\xe6\xb1\xa3\xd1\x1b\xcf\xb3\xd8\xa7\xb1\xf2\xec\xb3\x58\xcd\xb4\xce\x07\x9c\x3d\x91\x2d\xec\xf7\xb5\xe1\xc3\x84\x4d\x66\x93\xc9\x11\x4d\x3f\x25\x9a\x47\x34\x70\x03\xbb\x86\x8b\x76\x69\xc5\xa7\x4d\x71\x15\x2d\x6c\x60\x6b\xef\x01\x5b\x08\x0d\x98\x7d\x0d\xa3\x4b\x79\x1d\xed\xa5\x3f\x72\x41\x0c\xba\x54\x14\x70\xe2\xc4\x16\xd0\x06\xac\x25\x1c\x7a\x9f\xda\xba\x97\x8c\xe9\x48\xee\xa9\x45\xd7\x6c\x43\x07\x74\x38\x1c\xad\xde\x0d\xbd\xe2\x87\x6b\xf0\xd9\x3b\x71\x77\xe0\xfb\xac\x02\x13\x4e\x9b\x70\x7b\x25\x42\x81\xc1\x67\x3f\x86\xef\xf0\x51\xc5\x01\x8b\xb3\x93\x09\x45\x69\x61\xa0\xbb\xc6\xf3\xd1\x12\x4d\x4f\xea\xd2\xcd\x46\xa2\x7e\x87\xc0\x98\xd9\x48\x4c\xef\x50\x50\xa3\xd9\x91\x88\x1d\xfc\xfa\x85\x81\x63\x16\xd2\xa4\x79\x23\xa4\x96\x1a\x51\x38\x64\x0d\xbd\xe2\x69\x44\x14\x2f\x25\x31\xf1\xca\x26\xf7\xf1\xef\xf1\xfb\x76\xc2\x3f\x8c\x56\xe1\xe2\x5e\xc5\xfb\x85\xd0\x14\x92\xfb\xf8\x21\xfe\xcd\x8f\x7c\x2c\x44\x97\xc4\x58\x70\x73\x5c\xba\xfc\xfd\x85\xd0\x2b\x9b\x6c\x41\xea\x97\xcb\x09\xac\xaa\x07\xd9\xc8\x27\x4d\xfc\x0b\x2b\xbb\x49\x93\xea\x65\xfa\x5f\x00\x00\x00\xff\xff\x7e\x9e\xaa\x74\xaa\x0e\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 3754, mode: os.FileMode(436), modTime: time.Unix(1504579413, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsAppJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x6d\x6f\xe4\xb6\x11\xfe\xee\x5f\x31\x11\x8c\x5b\x29\xd6\x51\x76\x52\x14\xa8\xb7\xea\x21\xb8\x5c\xd0\x2b\x72\x49\x11\x1f\xf2\xc5\x71\x01\x5a\x9a\x95\x78\xa6\x48\x95\xa4\xd6\xde\xdc\xee\x7f\x2f\xf8\x22\x89\x5a\xaf\xaf\x89\x3f\x78\x29\x72\x38\x7c\xf8\xcc\xab\x54\x7c\x0d\x0d\x97\xf7\x94\xc3\x79\x4e\x2b\x84\xaf\x8b\xb3\xb3\x2d\x55\x80\x35\x33\x52\x41\x09\xb4\x42\x62\x1f\xd2\xc4\x4f\x25\xd9\xfa\xcc\x8f\x88\x46\x73\xd3\xca\xc7\x7f\x2b\x26\xcc\x07\xaa\x1a\x26\xd2\x0d\xe5\x1a\x67\x89\xf3\x7b\x2e\xab\x87\x9b\x4a\x49\xce\x99\x68\xa0\x84\xf7\x62\xc3\x04\x33\xbb\x58\xc9\xc7\x16\x3b\x4c\x13\x5a\x61\x61\xec\xb0\x68\x98\x69\x87\xfb\xe5\x49\xdf\x0d\x46\x7a\x45\xef\xdc\xdc\x7b\x61\xe4\xaf\x0c\x1f\x53\xa3\x06\x7b\x62\x84\xfa\x06\xcd\xaf\x94\x0f\x08\x25\x6c\x06\x51\x19\x26\x45\xba\xa5\x3c\x83\xcf\x67\x00\x56\x8c\x41\x09\x93\x66\xad\x99\x14\xa4\x96\x15\xe9\xa5\x66\x56\xf8\xa3\x7c\x2f\x6a\x7c\x4a\x27\x11\x8e\x4e\x09\x69\xd0\xbc\x1d\x94\x96\x2a\xcd\xb2\xf5\x19\xcc\x3a\xfc\x79\xf6\x90\x1c\x18\xec\xf7\xf0\xfa\x2a\x5b\x9f\x1d\x3c\x28\xda\xf7\x96\x47\xd1\x0c\x9c\x2a\xd2\xc9\x7a\xe0\x98\xae\x1e\xf1\xbe\x57\xb2\x5a\xe5\x70\x7b\x37\xc2\xd7\x4c\x54\x16\x75\x3a\xc1\x9e\x31\xeb\x8a\x72\xbb\x76\x7b\x9b\x74\x3a\xc9\xaf\x2e\x2f\x2f\xef\x72\xb8\x4d\x74\x92\xff\xd5\x8f\xba\x69\xd4\x26\xf9\x37\x7f\x71\xa3\x3a\xc9\xbf\xbd\xf2\xab\xa6\x4d\xf2\xab\x6f\xee\xee\x2c\x70\x85\x66\x50\x62\x66\xa7\xa6\x06\xfd\x51\xfe\xb0\x2d\x94\x70\x21\xf0\x11\xbe\xa7\x06\xd3\xec\xb5\x5d\x5f\xbb\xd5\x8d\x54\xe9\x48\xe1\xe5\x1a\x18\xfc\xdd\x23\x23\x1c\x45\x63\xda\x35\xb0\x8b\x8b\x51\x53\x00\x0e\xa5\x17\xb9\x65\x77\xeb\x30\xcf\x36\xe9\xd6\xee\xbc\xbd\xba\xcb\x46\x30\x5b\xb8\x00\x7d\x7b\x39\xc9\x58\x0c\x1f\xa8\x69\x89\x92\x83\xa8\xd3\x6d\xe1\xa4\xfd\xea\xc1\xfd\x0f\x1b\x93\xd7\x89\x9d\x3d\xac\xcf\x0e\xce\x2e\x67\xb4\xef\x49\xcd\x94\x35\xda\xd6\xfa\x55\x23\x93\x1c\x8e\x28\x0d\x7b\x3f\x07\x45\xda\x28\x56\x99\x6b\x48\xbe\x4b\x72\x37\xc5\x99\x78\xb8\x9e\x37\xe9\x1c\x30\x07\x6a\x8c\xd2\xcb\xdb\xd5\x39\x98\x75\xf4\x5c\xb5\x58\x3d\xc4\x8e\x37\x8b\x03\x54\x1c\xa9\xfa\xc8\x3a\x94\x83\x49\x4d\xb6\x9e\x16\xd8\x26\xad\x33\x40\x62\xf0\xc9\xa4\xce\x0b\xd2\x3a\x8b\xd6\x8d\xe5\x10\xcd\xb8\xd5\x1d\x92\x83\xf5\x81\x49\xe8\x10\x7e\x35\x39\x7f\xa4\xa6\x6a\x53\x07\x96\xd0\x46\x46\x77\xd7\x31\x9a\x1a\x4a\x98\x6c\xac\xa3\xd3\x9c\xfa\x74\xd6\x1c\x91\x7e\x38\x3b\x9c\x60\x98\xcb\xe6\x0f\x33\xbc\x7a\xbb\x3a\xcd\x70\x25\x7b\xcc\x01\x39\x76\x27\x89\xb6\xbe\xff\xc8\x44\x2d\x1f\x89\x1d\x5a\xb9\xd8\x59\xa8\x02\xe1\x5c\x32\xf6\x3c\x97\x2e\xe2\x59\x77\x08\xd9\x48\xce\xe5\x23\x94\x60\x53\xc7\xb8\x64\x15\x12\x29\xd2\x95\xdf\xb5\x8a\xee\x83\x5b\x14\x26\x66\x6e\x56\xfe\x3d\xdb\x6c\x6c\xc0\x22\xf1\xcf\xff\x44\xd6\xb4\x06\x5e\x03\x92\x8a\x33\x14\xc6\x4f\x44\xe4\xda\xbd\x3d\xaa\x0a\x85\x33\x6a\xa4\xa5\x84\x4b\x78\x63\x8d\x0a\xd7\xb3\xc2\x8f\xb2\x2f\x66\xa1\xec\xeb\xab\xcb\xcb\xa5\xae\xe9\x32\x93\xd2\xb2\x84\x85\x14\xdb\xa4\xa3\x50\x59\x2e\x28\x18\x63\x6f\x96\x3d\x22\xc8\x0f\xe6\xe5\x5a\x56\x43\x87\xc2\x90\xff\x0e\xa8\x76\x37\x2e\x31\x4a\x95\x26\x61\x07\x61\x95\x14\x49\x46\xb4\xd9\x71\x24\xb2\xa7\x15\x33\xbb\x49\x8d\xbd\x1c\x5c\xcf\xc6\x38\x4c\xac\x8c\x4c\x07\xc1\x1f\x65\xb3\x08\x1b\xb6\x49\x97\xa8\x23\x72\xa0\x84\xbf\x85\xbf\xe3\x48\x18\x33\xae\xb5\x2c\x0a\x93\x7a\xef\xc9\x9c\x91\x15\x6a\xf6\x3b\x5a\x23\x8f\x27\x66\x4b\x1f\x39\x0f\x52\x68\x9e\x79\x42\x0e\x35\x35\x34\x06\xb8\xf0\x3c\x00\x5c\xd2\xf3\x1d\xe7\x69\xa2\x7b\x6a\x99\xd9\x48\xf5\x8e\x56\xed\x9c\xe0\xed\x7c\xac\x0a\xc0\xce\x10\x85\x9d\xdc\x62\x1a\xf9\xcd\xe1\x59\x3c\x2e\xa0\x6a\xba\xc5\x3f\x80\xb4\x28\xee\x6d\x36\x85\x6a\x50\xca\x3a\x0b\xb3\x85\x0e\xee\x77\xd0\x31\x01\x5c\x36\x80\xc2\xa8\xdd\xe2\x62\x2e\x07\x77\xf4\x29\x15\x5e\x1d\xf9\x51\x36\x3f\x6f\x36\x1a\xcd\xeb\xf1\xf1\x03\x7d\xba\x61\xbf\x63\x84\xf6\xb1\x65\x1c\x7d\x69\x5e\x5c\xce\x7a\x6c\x07\xe5\xa4\xe8\x56\xdc\xad\xa3\x65\xb6\x49\xbf\xea\x32\xb8\x57\x48\x1f\xe2\x79\x71\x71\xb1\x3e\xd2\x62\x69\xb2\x8a\x46\x8f\xac\x14\x52\x83\xef\x82\xad\x03\xdf\xeb\x63\x5e\x6d\x82\x7d\x2b\x85\xf1\xd1\xd7\x91\xfb\x67\x12\x15\xa7\x5a\xff\x44\x3b\x74\xeb\x7d\xbc\x8e\x84\xf6\x3d\x8a\xfa\x6d\xcb\x78\xed\x2d\x17\xd9\x67\x1a\x45\x4e\xfc\x7f\x52\xa8\x46\xb5\x65\x15\xa6\x89\xde\x89\xea\xc5\x0c\x7a\x9c\x22\x1f\x70\xb7\xa8\xd5\xd4\xa6\x38\x2e\x2b\xca\x6f\x8c\x54\xb4\x41\xdb\xa7\xbc\x37\xd8\xa5\x56\xd2\x1f\x6c\x0b\xee\xd8\x01\x45\x9e\x83\x5b\xca\xad\x14\x5c\x40\x52\x26\x70\x61\x95\x65\x6b\x28\x0a\xaa\xf5\xd0\x21\xfc\xeb\xe6\xe7\x9f\xa2\x82\x1b\x76\xf9\xfa\xf2\x80\xbb\xfc\x44\x7f\x35\xd9\xc7\xd8\xee\xd1\x2a\x20\x36\xf5\x8b\x86\x6d\x76\x4e\x6a\xe4\x64\x81\x58\xcf\x88\x73\xbb\x75\xe4\x2b\x87\xd0\xde\xf9\xfa\x3e\x12\xa7\x06\x31\x87\xd0\xb9\x92\xd2\xdc\x78\x6e\xce\x5b\x63\xfa\x1c\xce\x8d\xaf\x94\x39\x58\x66\xa3\x26\x6a\x2e\x22\x76\x13\x94\x30\x6f\x5e\x8f\xcd\xa1\xe8\x07\xe3\x9a\x16\x32\x0d\xfd\xc5\x74\x2b\x1f\xaf\xa7\x4b\xca\xc1\x5c\x3b\x74\xf9\x58\x41\x94\x5a\x4e\xd0\x06\x45\x90\x09\xb7\xf1\x2d\x14\xe3\x78\x0d\xab\xd5\xfc\xa4\xaf\x41\x0c\x9c\xfb\x4b\x82\xc3\xbc\xb8\x55\xe2\x81\x10\x0b\xc0\x3b\x75\x51\x58\xdf\x41\xe5\x02\x29\x00\x1f\xd4\xe8\x08\xae\x59\xed\xa9\x69\x05\xed\x90\x28\xec\x39\xad\x30\x2d\x6e\xff\xf3\x5b\x71\x77\x71\x5e\xe4\x49\x92\x59\x8b\x3b\xaf\x1b\xaf\x6d\x15\xb9\x4b\x87\xc1\xe7\xc3\xb8\xb2\x75\xd3\xf6\xff\x16\xb9\x7c\x22\x5a\x63\x3a\x28\x1e\x92\x8b\x03\x4c\x14\x56\x52\x08\xac\xcc\xa9\xd6\x67\x4b\x14\x1a\xb5\x4b\x47\x33\x06\x9e\x6d\xff\x91\xf8\xf3\x89\x14\x43\x6f\x9b\xcc\x53\xdb\xad\xef\x12\x56\xc3\x57\x65\x09\xac\x9e\xbd\xcc\x29\xb0\x2b\xeb\xb9\xf5\xc1\x8e\x99\x31\x6f\x2f\x7a\xc5\x69\x2d\x24\xca\x09\xbb\x5b\xa2\x7d\xcf\x17\xf8\x88\x14\x55\x4b\x45\xb3\x00\x14\xae\x88\x13\x06\x4d\xa6\x29\x28\x61\x1a\xbf\xa8\xb6\x28\x1c\x59\x16\x42\x1d\xb5\x1f\x53\xdf\x78\x13\x16\x4e\x51\xf0\x55\xf0\x01\xeb\x2f\xf6\x0d\x23\x7e\x8e\x5a\xa5\xe7\xda\x61\xea\x94\x63\x3e\xdc\x99\xae\x43\x81\x12\x62\x55\xf0\xea\xd5\xe2\xf9\x36\x7a\x08\xb9\xda\x45\x92\x77\xbf\x90\xc9\x7f\x78\x41\x72\x46\x33\x9e\x65\x3b\x10\xb7\x35\x22\x25\xbc\x6b\x7a\xc2\xf5\xfc\x5e\x25\x45\xea\x3d\xff\x79\x6a\xb4\xdb\x2a\x5a\xb5\x38\x56\x32\x4f\xd3\x4b\xb8\xe7\xf7\xbd\x66\x7c\x57\x0b\xc6\x9f\x79\x4f\x4f\xbb\x43\xe6\x20\xb6\x54\xd4\x1c\x23\x88\x53\x9b\x9d\x38\x02\xde\x4a\xb1\x61\x4d\xf8\x19\x94\x8b\x40\x47\x4a\x0c\x7d\x61\xaa\x91\xee\xd2\x67\x00\x6b\xd2\xdb\xbb\x29\x59\x87\xd5\xf0\x56\xe5\x7b\x3a\x2b\x72\xbc\xf0\x0f\x3b\xff\xea\xd5\xc2\x1b\xb2\x28\x44\x22\x9f\x29\xc7\x23\xa7\xb6\xd9\x55\xa3\x28\xc3\x1e\xdd\xe9\xcb\xf8\x8b\xc2\xb1\x04\x4c\x18\x46\xb9\xbb\x44\x38\x6e\xbc\xc3\xe4\x4e\x4b\x57\x7d\x0e\x4d\x47\xaf\xc7\x95\xec\x77\xe1\xa0\xd3\x06\x3a\x0d\x38\xd2\x76\x8c\x38\x8e\x21\xff\x1c\x47\x43\x51\xe0\x93\x41\xa1\x99\x14\x1a\xd2\xaa\x95\x52\x23\x6c\x94\xec\xc0\x56\x12\x7d\x5d\x84\x8f\x11\xa4\x92\x5d\x41\x3f\xd1\x27\xa9\x9a\xc2\x7d\xa9\x50\x88\x45\x47\xb5\x41\x55\x70\x76\xef\xe6\x3a\x59\x63\x36\x85\x88\x7d\x82\x12\x8a\xdf\x48\x6a\x64\xc7\xf7\x9f\xb4\x14\xfb\x4f\x7a\x5f\x69\xbd\x6f\x4d\xc7\xf7\x8d\xdc\xef\xe8\x9b\x8e\xef\x75\xbb\x7f\xea\x78\x76\x5e\x10\x83\xda\x04\xd4\x6f\xe0\x17\x6c\xde\x3d\xf5\xe4\xdc\x76\xcd\x2b\x26\xd8\x6a\x84\x5c\x49\xa5\xfc\x27\x89\x89\x6c\x7f\x58\x59\xc2\x6a\xd7\xf1\x55\x36\x1e\xbe\xda\xd1\x8e\xaf\xd6\xcf\xa5\x1a\x19\x09\x35\x92\x53\xd1\x04\xb1\x39\x50\x6e\xfc\xb7\x91\x34\xb3\xe5\xf9\x83\xac\xc3\x37\x1a\xbb\xab\x48\x2e\xdc\x65\x47\x44\x5c\xd2\xda\xfb\x80\xe3\xce\x85\xe6\xe2\x6b\xc2\xcb\xa1\xb9\xdf\x87\x2a\x10\x92\xd2\xa0\xd4\xcb\xe1\xca\x36\xa9\x13\xb0\xb5\x60\x3b\xba\xd2\xf2\xab\x4f\xba\x9d\x50\xf9\x97\x71\xb6\x01\x97\x85\x4e\xbb\xd3\x58\x4e\x0d\x55\xa6\xb0\xaf\xa9\x54\x19\x9f\xa5\xed\xe8\x64\x39\xa3\x0a\x28\x57\x48\xeb\xdd\x2f\x83\x10\xfe\xbb\x96\x8b\x98\xf0\x38\xe5\x3e\xab\x81\xf8\xf5\x39\x1b\x8f\xf3\xe8\xee\x69\xeb\xbe\x9f\x77\xad\x0b\xe9\x07\x5f\xbf\xac\xc8\x2a\x23\xa6\x45\x71\xfc\x35\x68\xa1\xc4\xe6\xd6\x23\x30\x6f\x60\xf5\x8b\x57\x80\xf5\xca\xba\xce\x4d\x18\x8f\xd5\x60\xec\x8e\x16\x8a\x97\x2a\xdd\x77\xbc\xb5\x0d\xb6\x6f\xe7\x8f\x0c\x87\x28\xb2\x14\xea\xfe\x04\x1c\x77\x27\xbb\xe6\xda\x88\xb0\x2d\x23\x1b\x26\x28\xe7\xbb\x2f\xdd\xc4\xd3\xe4\xcf\x3d\x9b\x7b\xe6\x50\x22\x2a\xd9\x75\xcc\x84\xfc\x3b\x15\xd1\x53\xd6\xf1\x2b\xa7\x58\xb7\xd3\xc7\xa4\x87\xea\xf1\x83\x4f\x90\x9f\x0f\xc7\x93\xc7\x55\xe4\x45\x37\x8e\x4d\x28\xf5\xdc\x67\x44\xba\xbe\x68\x4d\x07\xee\xb8\x6c\xbf\x68\xa8\x49\xfa\xcf\xdb\x69\x66\xe1\xcf\x9a\x69\xa6\xf5\x94\x95\x42\x1b\xb8\xc5\xd3\x41\x73\x14\xa3\x2f\x74\x0d\x2f\xe5\x7c\xdf\xfa\xff\x2f\x00\x00\xff\xff\x3b\x48\x5c\x8a\xac\x16\x00\x00")

func jsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_jsAppJs,
		"js/app.js",
	)
}

func jsAppJs() (*asset, error) {
	bytes, err := jsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js/app.js", size: 5804, mode: os.FileMode(436), modTime: time.Unix(1504579428, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"css/app.css": cssAppCss,
	"index.html": indexHtml,
	"js/app.js": jsAppJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"css": &bintree{nil, map[string]*bintree{
		"app.css": &bintree{cssAppCss, map[string]*bintree{}},
	}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"js": &bintree{nil, map[string]*bintree{
		"app.js": &bintree{jsAppJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

