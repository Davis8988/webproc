// Code generated by go-bindata.
// sources:
// static/css/app.css
// static/index.html
// static/js/app.js
// DO NOT EDIT!

package agent

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cssAppCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x6d\x8b\xe3\x36\x10\xfe\x1c\xff\x0a\x95\xe3\xe0\x2e\xac\x1d\x65\xb3\xbb\x77\x75\x28\x74\x5b\x8e\x5e\xa1\xa5\x9f\xfa\x03\x14\x6b\xec\x88\xc8\x1a\x23\xc9\x9b\xa4\x25\xff\xbd\xe8\xc5\xaf\x49\xe8\x1e\x07\x6b\x47\x8f\xe6\xed\x79\x66\xc6\x7b\x5b\xcb\x07\xb2\x43\x7e\x26\xff\x26\x8b\x12\x95\x4d\x4b\x56\x0b\x79\xce\xc9\xaf\xd8\x6a\x01\xfa\x81\xd4\xa8\xd0\x34\xac\x80\x6d\xb2\x68\x18\xe7\x42\x55\x39\xa1\xdb\x64\x51\x33\x5d\x09\x15\x9e\x27\x57\xbf\x83\x7c\x03\x2b\x0a\xb6\x4d\x16\xf8\x06\xba\x94\x78\x4c\xcf\x39\xd9\x0b\xce\x41\x6d\x93\x4b\x92\x74\x2e\xb9\x30\x8d\x64\xe7\x9c\x94\x12\x4e\xce\xa6\x50\xe9\x1e\x44\xb5\xb7\x39\x59\x53\xfa\xb6\xf7\x68\x03\x12\x0a\xeb\xf0\xe9\x11\x76\x07\x61\x53\xd6\x34\xc0\x34\x53\x05\xe4\x44\xa1\x02\x87\xca\x5a\x91\xed\x5a\x6b\x51\x39\xe4\x51\x70\xbb\xcf\xc9\x57\xda\x9c\x86\xc0\x53\x09\xa5\xb3\xfc\xec\x7e\xbc\x24\xc9\x6a\xf9\xd3\xff\xff\x5b\xae\x92\x9a\x09\x75\x2b\x5c\xf7\x27\xe5\x42\x43\x61\x05\xaa\x9c\x68\x3c\x6e\x7b\xd7\x6b\x4a\x3f\x7a\x2f\x59\x81\xca\x82\xb2\xef\xb1\x50\xa0\x6c\x6b\x15\x0f\x72\xf2\x32\x98\x7b\x0e\xd6\xde\x1b\x72\xf0\xaa\x51\x1a\x4f\xad\xb7\xb6\x8e\x15\xee\x02\x5c\x87\xe2\x58\x38\xd9\x94\x49\x51\x39\xff\xa0\x2c\xe8\x31\xd5\x11\xb4\x43\xcd\x41\xa7\x3a\x72\xd3\x9c\x88\x41\x29\x38\xf9\xf0\xfa\xfa\x3a\xe3\x99\xb5\x16\x5d\xa8\x43\x04\x59\xb1\x87\xe2\x50\x33\x7d\xc8\x44\x11\xf8\x19\xa9\x67\x82\x14\xaa\x69\xad\xe9\x61\x7d\xbd\x1c\xcb\x21\xff\x01\x6c\x1a\xa6\xdc\x9b\x82\xc2\x02\xef\x25\x6c\xc4\x3f\xe0\xb2\x0b\x24\xcf\xe0\x5c\x98\xbb\x37\x7c\xa6\x97\xe5\x6a\x1c\x8f\x15\x56\x42\x26\x54\x89\x59\x29\x40\xfa\x3b\xbe\x60\x1c\x0a\xd4\x2c\xb0\xd6\x2a\x0e\x5a\x8a\x10\xe1\x24\x99\xab\x6b\xb1\xce\x4e\x88\xf7\xc1\x4e\xca\xbe\x64\x3b\x3c\x8d\xc4\xdc\x29\x6a\x96\x92\xa9\x99\x94\xa0\x67\xd9\xd0\xec\x47\xa8\x67\x2e\x74\xab\x52\x63\x99\x35\xb7\xb1\xb3\x36\x79\xa4\xb1\x4d\xb2\x12\xa5\xc4\x63\x4f\x8a\xd5\x4c\x19\x11\x52\xc7\x86\x15\xc2\x9e\x09\x30\x03\x84\x66\x1b\x13\x6e\xd4\x60\x0c\xab\xc0\x3b\xea\xac\x5a\x6c\x72\xb2\x89\x46\x5d\x8a\x11\x34\xaf\x4d\xa7\xc1\x00\xea\xeb\x20\xd9\x0e\xa4\xc3\x16\xad\x36\xa8\x73\xd2\xa0\xe8\x80\xef\x6e\x0b\x5f\x0c\x26\x54\x28\x57\x83\x5d\x1a\x1a\x24\xb3\xe2\x0d\xb6\xa3\x5e\xb9\x8c\xd0\x19\x70\x61\xd1\x5f\x1a\xcf\xa8\x47\x1a\xd3\xf9\x30\x9c\x4f\x66\x61\x3f\x3d\x7f\x10\x75\x83\xda\x32\x65\xb7\x63\xbf\x6c\x67\x50\xb6\xd6\xf9\xf5\xe5\x71\xc3\x34\xf6\x18\xf5\x5d\x67\x2d\xd6\xe1\x39\x90\xe2\x9e\x46\x13\xf2\xe3\x2c\x4c\x89\xd5\x95\x60\x26\x93\x7a\xde\xd7\x37\xb2\xe9\x7a\xdd\x07\x74\xb7\xd3\x67\x7d\x3e\xb8\x77\x9a\xbc\xd9\xba\x53\x5c\x86\xad\x0d\xfa\xc5\xd6\x3e\xcc\x0f\x41\xeb\x70\x08\x5a\x5f\x1d\xb2\xca\x4d\x53\x7f\x1c\x1e\xc7\xde\x84\x9a\x34\xe2\x34\x2e\xef\xd4\x49\x08\xa5\x53\xd0\x07\x4a\x1f\xe9\x17\x7e\x0f\xec\x82\x18\x81\xbf\xbe\xac\x9f\x28\xbd\x07\xee\x23\x89\xf0\x4a\xc3\xd9\x63\x67\xcd\x73\x93\xfb\x48\xf9\xa6\xab\x7f\x60\xbd\x7b\x65\xc5\xa1\xd2\xd8\x2a\x9e\x13\x5d\xed\xd8\x27\xfa\x40\xe2\xff\x6c\xfd\x79\xcc\xe9\xc6\xe3\x7b\x3a\xc3\x6b\xd4\xc2\xe3\x7a\x32\xc7\x19\x17\xad\xc9\xc9\xb0\x09\xff\xfc\xeb\x97\xdf\xff\xf8\x96\xfc\x5c\x03\x17\x8c\x7c\xaa\xd9\xa9\xdb\x13\x5f\x36\x2f\xcd\xe9\xb3\x8b\xbd\x5b\xdb\xf7\xd7\xd6\x25\x59\x4c\x16\xcf\x62\x64\x27\xaa\xf1\xf6\xbe\x99\x2d\x98\xa0\x99\xfe\xd7\xae\x22\x57\x6a\x9c\xf8\x0b\xc3\x3a\xba\x1d\x24\x3f\xc5\xcc\x16\xcc\x5c\x38\xe9\x4e\x62\x71\x70\xae\x27\xf3\xf1\xd9\xcf\xc7\xeb\xd1\x73\xdb\x78\x89\xba\x9e\x1a\x8f\xf9\x4c\xd1\x66\x8f\x47\x75\xff\x4e\x17\xc9\xdc\xc5\x78\xa7\xdc\x2e\xe6\x25\xb9\x24\xcb\x55\xb2\x5a\x7e\xff\xfb\xb7\x6f\xcb\xd5\x40\xea\x68\xf9\x3f\x3d\xd1\xc8\xea\xf8\xfb\xe4\xce\x27\x4d\x17\xc2\x64\xc8\x4c\xe6\xc4\x8c\xb0\xf8\xa1\x75\x4d\xd7\x25\xf9\x2f\x00\x00\xff\xff\x61\x86\x78\x18\x75\x0a\x00\x00")

func cssAppCssBytes() ([]byte, error) {
	return bindataRead(
		_cssAppCss,
		"css/app.css",
	)
}

func cssAppCss() (*asset, error) {
	bytes, err := cssAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "css/app.css", size: 2677, mode: os.FileMode(420), modTime: time.Unix(1474469783, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x4d\x8b\x1b\x39\x10\x3d\xf7\xfc\x0a\x8d\x2e\x4e\x60\xdc\x9d\x19\x76\x21\x98\x76\x87\x90\xcd\xc2\xc2\x42\x86\xcc\x5e\x96\x90\x83\x2c\x55\xcb\xb2\x65\xa9\x91\xd4\x9e\x31\x8e\xff\xfb\x22\xf5\x77\xfb\x63\x9c\xc0\x9e\x2c\xab\xea\x95\xaa\x9e\x4a\xaf\xa5\xf4\xf6\x8f\x2f\x9f\xfe\xf9\xf7\xf1\x33\x5a\xba\x8d\xcc\x6e\x52\xff\x83\x14\x9f\x92\xa2\x98\xe3\x67\x58\x14\x46\x53\x9c\xdd\x44\xe9\x12\x08\xcb\x6e\xa2\x28\x75\xc2\x49\xf0\x2e\x0b\xa1\xd8\x1c\x33\xe2\x48\xfc\x49\xab\x5c\xf0\xf8\xd1\x68\x6e\xc8\xe6\xa3\xe1\xf6\xdb\xbb\xef\x38\xab\xf1\x69\x12\x30\x01\x2d\x85\x5a\x23\x03\x72\x8e\xad\xdb\x49\xb0\x4b\x00\x87\xd1\xd2\x40\x3e\xc7\x49\x42\x99\x5a\xd9\x98\x4a\x5d\xb2\x5c\x12\x03\x31\xd5\x9b\x84\xac\xc8\x4b\x22\xc5\xc2\x26\x16\x36\x44\x39\x41\xa7\xa5\x48\x1e\xe2\x87\xf8\xa1\x9d\x89\x37\x42\xc5\xd4\x5a\xfc\xea\x22\xd4\xda\x84\x14\x45\xe7\x1c\x5c\x32\xf4\x4d\xf1\x29\x95\x9a\xac\xbf\xa3\x3d\x62\xc2\x16\x92\xec\x66\x48\x69\x05\xe8\x90\x26\x95\xd3\x4d\x94\x26\x35\x0f\xe9\x42\xb3\x1d\x6a\x30\x21\x90\x40\x54\x12\x6b\xe7\x58\x6a\xba\x46\xb9\x96\x52\x3f\x23\x41\xb5\xc2\x59\x9a\x88\xe0\xb2\x21\x42\xf9\x41\x94\x5a\xa0\x4e\x68\xd5\x40\xa8\x56\xce\x68\x59\xa5\x14\x45\xe9\xf2\xbe\xb1\x04\xea\xea\xe9\x28\xb5\x05\x51\x3f\xc9\xbd\x87\x34\xf0\x36\x45\xa1\x8a\xd2\x59\xe4\x97\x05\xe5\xaa\x2c\xab\x6a\x04\x5d\xcf\xb1\x5d\xea\xe7\xbf\x2a\x97\x39\xba\xed\xfe\xb5\x95\x44\x9e\x89\xfb\x7a\xc4\xc4\xb6\x89\x5b\x0a\x54\x87\xce\xb5\xd9\xd4\x21\x83\x65\xef\xa3\xa8\x19\xea\x82\x1d\xda\xaa\x86\x01\xaa\x06\x13\x2a\xd7\x28\x17\x20\x59\xe3\x16\x3d\x39\xe2\x4a\x5b\x63\x12\x26\xb6\xa7\xf1\x01\x69\x83\xef\x28\x40\x57\x3f\x5d\x02\x5d\x6f\x88\x59\xf7\x4b\x6f\x76\x42\x01\x75\xc0\xd0\x07\x34\xe1\x06\x40\x4d\xd0\x0c\x4d\x0c\xb0\x49\xaf\xfa\xde\x56\x9c\xc2\xb5\x7f\x02\x96\x09\xdb\x4d\xe0\x1a\x1f\xb5\xbb\x38\x40\x7e\x51\x52\x28\x08\xb0\x2f\x79\x1e\xc6\x7d\x44\xbd\x3f\x06\x6a\xd0\x9b\xb7\x38\xab\xfd\x06\x3b\x5d\x71\xa2\xf8\xd4\xd3\xdd\x5b\xa2\xa5\xe2\x2a\x2e\x42\x7f\x7d\x2d\x95\x12\x8a\xbf\x42\xc7\xc9\xd6\xec\x41\xeb\x61\x00\x7f\x7e\x11\x81\x89\xac\x1a\x8c\x12\xef\x6d\xec\x60\x67\x4d\xa9\xa6\x7e\x57\x2d\xbe\x5c\x97\x87\xa7\x8b\x2c\xd7\x26\x4d\x16\x19\xaa\xf2\x22\x5c\x37\xc7\x65\x49\x14\x07\xf6\xd1\xf9\xf4\xc3\xc2\x83\x15\x47\xc4\xf5\xcb\xc0\x3e\x6c\x21\x58\x08\xbb\xdf\xa3\x60\x7b\x14\x0c\x1d\x0e\x97\x42\xdc\x1e\xc5\xa0\x9a\xc1\x20\x88\xe7\xe1\x93\x66\x30\x8e\x34\x68\xf2\x71\xc3\xb7\x0b\xe4\x42\x82\x8d\x25\x28\xee\x96\x28\x43\xf7\xf8\x14\x7b\x97\xce\x55\xf4\xa7\x8f\xf0\x1a\xff\xa5\x18\xc3\x52\x0b\x12\xa8\xeb\x39\x2c\x4a\xe7\xea\x16\xd2\x85\xd7\x37\x3b\xc7\xb9\x97\x02\x94\x23\xa1\x50\xc8\x34\x58\x37\x9a\x79\x79\xae\xb4\x22\xf6\xf3\x61\x3b\x42\xbc\xab\xaa\xbf\xa2\xac\xbf\x35\xe7\x42\xf1\xeb\xf4\x62\x24\x14\x43\x8f\x70\x42\x16\xfa\xa5\x7f\x7a\x7c\xe6\xc8\xed\x0a\xa8\x0f\x90\x37\x23\xc1\xbc\xfa\x73\x5d\xba\x13\x55\xfa\xdd\x8a\xbd\xa9\x8b\x22\xc9\x02\xa4\xe7\xa7\x85\x65\xd6\x31\x5d\xba\x34\x09\xa6\x57\x0f\xc5\x2f\x24\x07\xc6\x9c\x4b\xce\x9b\xce\x25\x17\x6c\xd6\x31\x30\xe6\x7f\x4c\x8e\x70\x50\x67\xb9\xab\x8c\xe7\x12\xac\xad\xe1\xe7\x42\x86\x17\x1a\x61\xd4\x03\x55\x33\x9f\xee\xee\xe6\x3b\xe9\x88\xf1\x1a\x3c\x50\xe8\xea\x73\xd7\x4c\x45\x52\x13\x26\x14\x9f\xa1\xe0\x1c\x0b\xc5\xef\xfc\xfd\x82\x2c\x24\xb0\x19\xba\xb5\x64\x0b\x0c\xfd\xf8\x51\x9b\xab\xf1\x6d\x2b\x6c\x77\x6d\x9c\xc2\x88\x0d\x31\x3b\x0f\xa9\x3d\xef\x50\x10\xe4\x19\x42\x2d\xb8\xf1\x3e\xe0\x6c\xbf\x1f\x84\x7c\x73\xa4\xc8\x10\xcc\x41\x91\x9f\xc2\xe8\xad\x97\x9f\xaa\xc8\x57\x45\x67\x70\x72\xaf\x53\x8b\x6b\xf8\x24\x5b\x78\xf3\x76\x70\x6d\x68\xeb\xef\x11\x49\xb6\x30\xe6\xb1\xa3\xd1\x1b\xcf\xb3\xd8\xa7\xb1\xf2\xec\xb3\x58\xcd\xb4\xce\x07\x9c\x3d\x91\x2d\xec\xf7\xb5\xe1\xc3\x84\x4d\x66\x93\xc9\x11\x4d\x3f\x25\x9a\x47\x34\x70\x03\xbb\x86\x8b\x76\x69\xc5\xa7\x4d\x71\x15\x2d\x6c\x60\x6b\xef\x01\x5b\x08\x0d\x98\x7d\x0d\xa3\x4b\x79\x1d\xed\xa5\x3f\x72\x41\x0c\xba\x54\x14\x70\xe2\xc4\x16\xd0\x06\xac\x25\x1c\x7a\x9f\xda\xba\x97\x8c\xe9\x48\xee\xa9\x45\xd7\x6c\x43\x07\x74\x38\x1c\xad\xde\x0d\xbd\xe2\x87\x6b\xf0\xd9\x3b\x71\x77\xe0\xfb\xac\x02\x13\x4e\x9b\x70\x7b\x25\x42\x81\xc1\x67\x3f\x86\xef\xf0\x51\xc5\x01\x8b\xb3\x93\x09\x45\x69\x61\xa0\xbb\xc6\xf3\xd1\x12\x4d\x4f\xea\xd2\xcd\x46\xa2\x7e\x87\xc0\x98\xd9\x48\x4c\xef\x50\x50\xa3\xd9\x91\x88\x1d\xfc\xfa\x85\x81\x63\x16\xd2\xa4\x79\x23\xa4\x96\x1a\x51\x38\x64\x0d\xbd\xe2\x69\x44\x14\x2f\x25\x31\xf1\xca\x26\xf7\xf1\xef\xf1\xfb\x76\xc2\x3f\x8c\x56\xe1\xe2\x5e\xc5\xfb\x85\xd0\x14\x92\xfb\xf8\x21\xfe\xcd\x8f\x7c\x2c\x44\x97\xc4\x58\x70\x73\x5c\xba\xfc\xfd\x85\xd0\x2b\x9b\x6c\x41\xea\x97\xcb\x09\xac\xaa\x07\xd9\xc8\x27\x4d\xfc\x0b\x2b\xbb\x49\x93\xea\x65\xfa\x5f\x00\x00\x00\xff\xff\x7e\x9e\xaa\x74\xaa\x0e\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 3754, mode: os.FileMode(420), modTime: time.Unix(1474469864, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsAppJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x58\x5d\x8f\xdb\x36\xd6\xbe\x9f\x5f\x71\x2a\x18\xb1\x94\x51\xa8\x99\xf6\xc5\x0b\xec\x78\xb5\x41\x90\x66\xb1\x59\x34\xed\x22\x0e\x7a\xe3\xce\x02\xb4\x74\x2c\x31\xa1\x48\x2d\x49\x79\xc6\x8d\xfd\xdf\x17\x24\xf5\x41\x79\x3c\xd9\x76\x2e\xc6\x14\x79\x78\xf8\x9c\x87\xe7\x4b\xca\x5e\x42\xc5\xe5\x96\x72\x58\xa4\xb4\x40\x78\x99\x5d\x5d\xed\xa9\x02\x2c\x99\x91\x0a\x72\xa0\x05\x12\xfb\x10\x47\x7e\x2a\x4a\x56\x57\x7e\x44\x34\x9a\x75\x2d\x1f\xfe\xa5\x98\x30\x1f\xa8\xaa\x98\x88\x77\x94\x6b\x9c\x24\x16\x5b\x2e\x8b\x2f\xeb\x42\x49\xce\x99\xa8\x20\x87\xf7\x62\xc7\x04\x33\x87\x50\xc9\xa7\x1a\x1b\x8c\x23\x5a\x60\x66\xec\x30\xab\x98\xa9\xbb\xed\xfc\xa4\x37\x9d\x91\x5e\xd1\x3b\x37\xf7\x5e\x18\xf9\x2b\xc3\x87\xd8\xa8\xce\x9e\x18\xa0\x5e\xa3\xf9\x95\xf2\x0e\x21\x87\x5d\x27\x0a\xc3\xa4\x88\xf7\x94\x27\xf0\xf5\x0a\xc0\x8a\x31\xc8\x61\xd4\xac\x35\x93\x82\x94\xb2\x20\xad\xd4\xcc\x0a\x7f\x92\xef\x45\x89\x8f\xf1\x28\xc2\xd1\x29\x21\x15\x9a\xb7\x9d\xd2\x52\xc5\x49\xb2\xba\x82\x49\x87\x3f\xcf\x1e\x92\x02\x83\xe3\x11\x5e\xdd\x26\xab\xab\x93\x07\x45\xdb\xd6\xf2\x28\xaa\x8e\x53\x45\x1a\x59\x76\x1c\xe3\xe5\x03\x6e\x5b\x25\x8b\x65\x0a\x9b\xfb\x01\xbe\x66\xa2\xb0\xa8\xe3\x11\xf6\x84\x59\x17\x94\xdb\xb5\xcd\x26\x6a\x74\x94\xde\xde\xdc\xdc\xdc\xa7\xb0\x89\x74\x94\xfe\xbf\x1f\x35\xe3\xa8\x8e\xd2\xef\xff\xcf\x8d\xca\x28\xfd\xe1\xd6\xaf\x9a\x3a\x4a\x6f\xbf\xbf\xbf\xb7\xc0\x15\x9a\x4e\x89\x89\x9d\x92\x1a\xf4\x47\xf9\xc3\xf6\x90\xc3\xb5\xc0\x07\xf8\x91\x1a\x8c\x93\x57\x76\x7d\xe5\x56\x77\x52\xc5\x03\x85\x37\x2b\x60\xf0\x57\x8f\x8c\x70\x14\x95\xa9\x57\xc0\xae\xaf\x07\x4d\x3d\x70\xc8\xbd\xc8\x86\xdd\xaf\xfa\x79\xb6\x8b\xf7\x76\xe7\xe6\xf6\x3e\x19\xc0\xec\xe1\x1a\xf4\xe6\x66\x94\xb1\x18\x3e\x50\x53\x13\x25\x3b\x51\xc6\xfb\xcc\x49\xfb\xd5\x93\xfb\xdf\x6f\x8c\x5e\x45\x76\xf6\xb4\xba\x3a\xb9\x7b\xb9\xa2\x6d\x4b\x4a\xa6\xec\xa5\xed\xad\x5f\x55\x32\x4a\xe1\x8c\xd2\x7e\xef\xd7\x5e\x91\x36\x8a\x15\xe6\x0e\xa2\x37\x51\xea\xa6\x38\x13\x5f\xee\xa6\x4d\x3a\x05\x4c\x81\x1a\xa3\xf4\xdc\xba\x32\x05\xb3\x0a\x9e\x8b\x1a\x8b\x2f\xa1\xe3\x4d\xe2\x00\x05\x47\xaa\x3e\xb1\x06\x65\x67\x62\x93\xac\xc6\x05\xb6\x8b\xcb\x04\x90\x18\x7c\x34\xb1\xf3\x82\xb8\x4c\x82\x75\x63\x39\x44\x33\x6c\x75\x87\xa4\x60\x7d\x60\x14\x3a\xf5\xbf\x9a\x2c\x1e\xa8\x29\xea\xd8\x81\x25\xb4\x92\x81\xed\x3a\x44\x53\x42\x0e\xe3\x1d\xeb\xe0\x34\xa7\x3e\x9e\x34\x07\xa4\x9f\xae\x4e\x17\x18\xe6\xb2\xfa\xc3\x0c\x2f\xdf\x2e\x2f\x33\x5c\xc8\x16\x53\x40\x8e\xcd\x45\xa2\xad\xef\x3f\x30\x51\xca\x07\x62\x87\x56\x2e\x74\x16\xaa\x40\x38\x97\x0c\x3d\xcf\xa5\x8b\x70\xd6\x1d\x42\x76\x92\x73\xf9\x00\x39\xd8\xd4\x31\x2c\x59\x85\x44\x8a\x78\xe9\x77\x2d\x03\x7b\x70\x8f\xc2\x84\xcc\x4d\xca\x7f\x64\xbb\x9d\x0d\x58\x24\xfe\xf9\x1f\xc8\xaa\xda\xc0\x2b\x40\x52\x70\x86\xc2\xf8\x89\x80\x5c\xbb\xb7\x45\x55\xa0\x70\x97\x1a\x68\xc9\xe1\x06\x5e\xdb\x4b\x85\xbb\x49\xe1\x27\xd9\x66\x93\x50\xf2\xf2\xf6\xe6\x66\xae\x6b\x34\x66\x54\x9a\xe7\x30\x93\x62\xbb\x78\x10\xca\xf3\x19\x05\x43\xec\x4d\xb2\x67\x04\xf9\xc1\xb4\x5c\xca\xa2\x6b\x50\x18\xf2\x9f\x0e\xd5\x61\xed\x12\xa3\x54\x71\xd4\xef\x20\xac\x90\x22\x4a\x88\x36\x07\x8e\x44\xb6\xb4\x60\xe6\x30\xaa\xb1\xc6\xc1\xdd\x74\x19\xa7\x91\x95\x81\xe9\x5e\xf0\x27\x59\xcd\xc2\x86\xed\xe2\x39\xea\x80\x1c\xc8\xe1\x2f\xfd\xdf\x79\x24\x0c\x19\xd7\xde\x2c\x0a\x13\x7b\xef\x49\xdc\x25\x2b\xd4\xec\x77\xb4\x97\x3c\x9c\x98\xcc\x7d\x64\xd1\x4b\xa1\x79\xe2\x09\x29\x94\xd4\xd0\x10\xe0\xcc\xf3\x00\x70\x4e\xcf\x1b\xce\xe3\x48\xb7\xd4\x32\xb3\x93\xea\x1d\x2d\xea\x29\xc1\xdb\xf9\x50\x15\x80\x9d\x21\x0a\x1b\xb9\xc7\x38\xf0\x9b\xd3\x93\x78\x9c\x41\xd5\x74\x8f\x7f\x00\x69\x96\x6d\x6d\x36\x85\xa2\x53\xca\x3a\x0b\xb3\x85\x0e\xb6\x07\x68\x98\x00\x2e\x2b\x40\x61\xd4\x61\x66\x98\xcb\xc1\x0d\x7d\x8c\x85\x57\x47\x7e\x92\xd5\x2f\xbb\x9d\x46\xf3\x6a\x78\xfc\x40\x1f\xd7\xec\x77\x0c\xd0\x3e\xd4\x8c\xa3\x2f\xcd\x33\xe3\xac\xc7\x36\x90\x8f\x8a\x36\xe2\x7e\x15\x2c\xb3\x5d\xfc\x5d\x93\xc0\x56\x21\xfd\x12\xce\x8b\xeb\xeb\xd5\x99\x16\x4b\x93\x55\x34\x78\x64\xa1\x90\x1a\x7c\xd7\xdf\x75\xcf\xf7\xea\x9c\x57\x9b\x60\xdf\x4a\x61\x7c\xf4\x35\x64\xfb\x44\xa2\xe0\x54\xeb\x9f\x69\x83\x6e\xbd\x0d\xd7\x91\xd0\xb6\x45\x51\xbe\xad\x19\x2f\xfd\xcd\x85\xcb\x0d\x59\x28\x14\x25\x2a\x2c\xcf\x72\xcb\xe4\x93\x10\xba\xf8\xff\x48\xb0\x1a\xd5\x9e\x15\x18\x47\xfa\x20\x8a\x67\xf3\xeb\x38\x2b\xb7\x9f\x53\xf8\x82\x87\x59\x1d\xa7\x36\xfd\x71\x59\x50\xbe\x36\x52\xd1\x0a\x6d\x0f\xf3\xde\x60\x13\x5b\x49\x7f\xac\x2d\xc6\x43\x77\x64\xff\x0a\x29\xb4\xb4\x15\x5d\x56\x36\xb5\xd3\x32\x72\x7a\x53\xab\x6d\xc4\x2c\xb7\x9f\xc9\x02\xf7\x94\x5b\x45\x70\x0d\x51\x1e\xc1\x75\x20\xe1\x0d\x76\x52\xbe\x1c\x39\x0d\x4f\xdb\xb1\xf1\x3a\x8d\x6d\x36\xff\xb9\xfe\xe5\x67\x62\x2b\x85\xa8\xd8\xee\x10\x87\x07\xce\x50\x69\x34\x03\x28\x6d\xd4\x28\x33\x33\x54\x4f\x86\x86\x52\xa7\x14\xfa\x8e\xd1\xb7\x0c\x03\xdb\xaa\x13\x53\x54\x2e\x94\x94\x66\xed\x2b\xd2\xa2\x36\xa6\x4d\x61\x61\x7c\xf1\x4d\xc1\x5e\x47\xd0\x97\x4d\x75\xc9\x6e\x82\x1c\xa6\xcd\xab\xa1\xdf\x14\x6d\x67\x5c\x1f\x44\xc6\xa1\x37\x5e\xd7\xf2\xe1\x6e\x24\x42\x76\xe6\xce\xa1\x4b\x87\xa2\xa4\xd4\x7c\x82\x56\x28\xcc\x1d\xb8\x36\xbb\x37\xc7\xb7\x65\x8c\xe3\x1d\x2c\x97\xd3\x93\xbe\x03\xd1\x71\xee\xad\x04\x07\x7a\x66\x56\xe4\x91\x10\x8b\xc0\x07\x4a\x96\x59\x8f\x43\xe5\x82\xb3\x47\xde\xa9\xc1\x81\x5c\x03\xdc\x52\x53\x0b\xda\x20\x51\xd8\x72\x5a\x60\x9c\x6d\xfe\xfd\x5b\x76\x7f\xbd\xc8\xd2\x28\x4a\xac\x1b\x38\x5f\x1d\xec\xb6\x8a\x9c\xd5\xfd\xe0\xeb\x69\x58\xd9\xbb\x69\xfb\x7f\x8f\x5c\x3e\x12\xad\x31\xee\x14\xef\x13\x96\x03\x4c\x14\x16\x52\x08\x2c\xcc\xa5\x76\x6a\x4f\x14\x1a\x75\x88\x87\x7b\xec\x89\xb6\x91\x17\xf9\xf3\x89\x14\x5d\x6b\x1b\xd7\x4b\xdb\xad\xcf\x13\x56\xc2\x77\x79\x0e\xac\x9c\x5c\xd1\x29\xb0\x2b\xab\xa9\x9d\xc2\x86\x99\xa1\x16\xcc\xbc\x7b\x5c\xeb\x93\xef\x88\xdd\x2d\xd1\xb6\xe5\x33\x7c\x44\x8a\xa2\xa6\xa2\x9a\x01\xea\x4d\xc4\x11\x83\x26\xe3\x14\xe4\x30\x8e\x9f\x55\x9b\x65\x8e\x2c\x0b\x21\x4c\x3b\x63\x2f\xba\xee\x17\x2e\x51\xf0\x5d\xef\x03\xd6\x5f\xec\x5b\x4b\xf8\x1c\xb4\x5f\x4f\xb5\xc3\xd8\x7d\x87\x7c\xb8\x33\x5d\xd7\x03\x39\x84\xaa\xe0\xc5\x8b\xd9\xf3\x26\x78\xe8\xf3\xbf\x0b\x25\xef\x7e\x7d\x75\xf8\xfb\x33\x92\x13\x9a\xe1\x2c\xdb\xd5\xb8\xad\x01\x29\xfd\xfb\xab\x27\x5c\x4f\xef\x6a\x52\xc4\xde\xf3\x9f\x26\x54\xbb\xad\xa0\x45\x8d\x43\x75\xf4\x34\x3d\x87\x7b\x7a\x87\xac\x86\xf7\xbf\xfe\xf2\x27\xde\xe3\xcb\xee\x90\x38\x88\x35\x15\x25\xc7\x00\xe2\xd8\xba\x47\x8e\x80\xb7\x52\xec\x58\xd5\xff\x74\xca\x45\xa0\x23\x25\x84\x3e\xbb\xaa\x81\xee\xdc\x67\x00\x7b\xa5\x9b\xfb\x31\xc9\xf7\xab\xfd\x9b\x9a\xef\x13\xad\xc8\xf9\xc2\xdf\xec\xfc\x8b\x17\x33\x6f\x48\x82\x10\x09\x7c\x26\x1f\x8e\x1c\x5b\x71\x57\xc3\x82\x14\x7b\x66\xd3\xb7\xf1\x67\x99\x63\x09\x98\x30\x8c\x72\x67\x44\x7f\xdc\x60\xc3\xe8\x4e\x73\x57\x7d\x0a\x4d\x07\xaf\xdc\x85\x6c\x0f\xfd\x41\x97\x2f\xe8\x32\xe0\x40\xdb\x39\xe2\x30\x86\xfc\x73\x18\x0d\x59\x86\x8f\x06\x85\x66\x52\x68\x88\x8b\x5a\x4a\x8d\xb0\x53\xb2\x01\x5b\x4a\xf4\x5d\xd6\x7f\xe0\x20\x85\x6c\x32\xfa\x99\x3e\x4a\x55\x65\xee\xeb\x87\x42\xcc\x1a\xaa\x0d\xaa\x8c\xb3\xad\x9b\x6b\x64\x89\xc9\x18\x22\xf6\x09\x72\xc8\x7e\x23\xb1\x91\x0d\x3f\x7e\xd6\x52\x1c\x3f\xeb\x63\xa1\xf5\xb1\x36\x0d\x3f\x56\xf2\x78\xa0\xaf\x1b\x7e\xd4\xf5\xf1\xb1\xe1\xc9\x22\x23\x06\xb5\xe9\x51\xbf\x86\x8f\x58\xbd\x7b\x6c\xc9\xc2\x76\xe2\x4b\x26\xd8\x72\x80\x5c\x48\xa5\xfc\x67\x8e\x91\x6c\x7f\x58\x9e\xc3\xf2\xd0\xf0\x65\x32\x1c\xbe\x3c\xd0\x86\x2f\x57\x4f\xa5\x2a\x19\x08\x55\x92\x53\x51\xf5\x62\x53\xa0\xac\xfd\xf7\x96\x38\xb1\xf5\xf9\x83\x2c\xfb\xef\x3e\x76\x57\x16\x5d\x3b\x63\x07\x44\xb6\xf5\xf0\x3e\xe0\xb8\x73\xa1\x39\xfb\x42\xf1\x7c\x68\x1e\x8f\x7d\x15\xe8\x93\x52\xa7\xd4\xf3\xe1\xca\x76\xb1\x13\xb0\xb5\x60\x3f\xb8\xd2\xfc\x4b\x52\xbc\x1f\x51\xf9\x17\x7c\xb6\x03\x97\x85\x2e\xbb\xd3\x50\x4e\x0d\x55\x26\xb3\xaf\xbe\x54\x19\x9f\xa5\xed\xe8\x62\x39\xa3\x0a\x28\x57\x48\xcb\xc3\xc7\x4e\x08\xff\xad\xcc\x45\x4c\xff\x38\xe6\x3e\xab\x81\xf8\xf5\x29\x1b\x0f\xf3\xe8\xec\xb4\x75\xdf\xcf\xbb\xde\x85\xb4\x9d\xaf\x5f\x56\x64\x99\x10\x53\xa3\x38\xff\xc2\x34\x53\x62\x73\xeb\x19\x98\xd7\xb0\xfc\xe8\x15\x60\xb9\xb4\xae\xb3\xee\xc7\x43\x35\x18\xda\xa3\x99\xe2\xb9\x4a\xd7\xb4\xac\x6c\xb0\xfd\x30\x7d\xb8\x38\x05\x91\xa5\x50\xb7\x17\xe0\x38\x9b\xec\x9a\x6b\x23\xfa\x6d\x09\xd9\x31\x41\x39\x3f\x7c\xcb\x12\x4f\x93\x3f\xf7\x6a\xea\xb4\xfb\x12\x51\xc8\xa6\x61\xa6\xcf\xbf\x63\x11\xbd\x74\x3b\x7e\xe5\x12\xeb\x76\xfa\x19\xd2\xa5\x9e\x3a\x83\x59\xb2\xfa\xd6\x05\x38\x7d\xe7\x95\xf6\x59\x6e\x47\xe9\x3f\x4f\xed\x04\xfc\xcf\x32\x3b\x31\x71\x89\xd8\xbe\x73\xdb\xe3\x65\x3f\x3f\x0b\xab\x67\x0a\xfd\x73\x69\xda\xb7\xeb\xff\x0d\x00\x00\xff\xff\x82\x2a\xca\xf1\xb3\x16\x00\x00")

func jsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_jsAppJs,
		"js/app.js",
	)
}

func jsAppJs() (*asset, error) {
	bytes, err := jsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js/app.js", size: 5811, mode: os.FileMode(420), modTime: time.Unix(1474467924, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"css/app.css": cssAppCss,
	"index.html": indexHtml,
	"js/app.js": jsAppJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"css": &bintree{nil, map[string]*bintree{
		"app.css": &bintree{cssAppCss, map[string]*bintree{}},
	}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"js": &bintree{nil, map[string]*bintree{
		"app.js": &bintree{jsAppJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

