// Code generated by go-bindata.
// sources:
// static/app.css
// static/app.js
// static/index.html
// DO NOT EDIT!

package agent

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _appCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\xed\x8a\xe3\x36\x14\xfd\x6d\x3f\x85\xca\xb0\xb0\x1b\xc6\x8e\x33\x5f\xbb\x75\x28\x74\x5a\x96\x6e\xa1\xa5\xbf\xfa\x00\xb2\x75\xed\x88\xc8\xba\x46\x92\x27\x49\x97\xbc\x7b\xb1\x24\xc7\x96\x13\xb3\xb3\x2c\x4c\x64\x1d\xdd\xcf\x73\x8f\xb4\x33\x8d\xb8\x8f\x0b\x64\x27\xf2\x3d\x26\xa4\x42\x69\x92\x8a\x36\x5c\x9c\x72\xf2\x3b\x76\x8a\x83\xba\x27\x0d\x4a\xd4\x2d\x2d\x61\x1b\x13\xd2\x52\xc6\xb8\xac\x73\x92\xf5\xab\x86\xaa\x9a\x4b\xbf\x08\x4e\x7f\x03\xf1\x06\x86\x97\xb4\xdf\xc1\x37\x50\x95\xc0\x43\x72\xca\xc9\x8e\x33\x06\x72\x1b\x9f\xe3\xd1\x2f\xe3\xba\x15\xf4\x94\x93\x4a\xc0\xd1\xda\xe5\x32\xd9\x01\xaf\x77\x26\x27\x9b\x2c\x7b\xdb\x59\xbc\x06\x01\xa5\xb1\x27\x92\x03\x14\x7b\x6e\x12\xda\xb6\x40\x15\x95\x25\xe4\x44\xa2\x04\x8b\x4b\x3b\x9e\x16\x9d\x31\x28\x2d\xf6\xc0\x99\xd9\xe5\xe4\x4b\xd6\x1e\x27\x19\x24\x02\xaa\xde\xfa\x73\xff\xf5\x1c\xc7\xeb\xd5\x2f\x3f\xfe\xb7\x5a\xc7\x0d\xe5\xf2\x76\xd0\xfd\xdf\x84\x71\x05\xa5\xe1\x28\x73\xa2\xf0\xb0\x1d\xdd\x6f\xb2\xec\x83\x8b\xae\x44\x69\x40\x9a\xf7\x19\x29\x51\x74\x8d\x1c\x76\x72\xf2\x32\x31\xf9\xec\x2c\xbe\x37\x72\xe7\x59\xa1\xd0\xae\xd9\xd6\xde\x66\x28\xf7\x10\xe6\xc6\x97\xc9\xc0\xd1\x24\x54\xf0\xba\x0f\x02\xa4\x01\x15\xb4\x7f\x80\x15\xa8\x18\xa8\x44\xf9\x5e\xb5\x47\xa2\x51\x70\x46\xee\x28\xbd\x6a\x3d\xed\x0c\x8e\x25\xb0\x81\xa4\x15\x17\xe0\xe2\x71\x5c\x4a\x0a\x34\x06\x9b\x9c\x3c\x64\xbe\x31\x13\x70\xb9\x83\x72\xdf\x50\xb5\x4f\x79\xe9\x9b\x3b\x61\xe0\x79\x0a\xe5\xb2\xed\x8c\x1e\x71\x97\x42\x0f\x2c\x59\xaf\x46\xb4\x6e\xa9\xec\x57\x12\x4a\x03\x8c\x7c\x8f\x23\xcb\x65\xcd\xff\x83\xbe\x22\x2e\x90\x19\x9c\x71\xbd\x78\xc2\x85\xbe\x5a\x4f\x03\x32\xdc\x08\x48\xb9\xac\x30\xad\x38\x08\x66\xa3\xb2\x45\x66\x50\xa2\xa2\xae\xdd\x9d\x64\xa0\x04\x77\x21\x06\xe9\x5c\x9f\xf3\xcd\xe9\x79\xbc\x8c\xee\x67\xc1\x96\xad\xc0\xe3\x74\x1a\x06\x3a\xce\xb2\xd2\x0d\x15\x02\xd4\xa8\x06\x2e\xa3\x2c\xfd\x19\x9a\x99\x13\xd5\xc9\x44\x1b\x6a\xf4\x02\x78\x3e\x69\x63\x43\x2b\x14\x02\x0f\x63\x6f\x8c\xa2\x52\x73\x57\x00\x6c\x69\xc9\xcd\x89\x00\xd5\x40\xb2\xf4\x51\xbb\x23\x0d\x68\x4d\x6b\xcf\x94\xc1\xae\xc1\x36\x27\x8f\xde\x6c\x9f\xa8\x47\x5d\x95\x68\xe0\xaf\x43\x5d\xca\x21\x68\x01\xc2\x82\xcb\x4e\x69\x54\x39\x69\x91\x0f\xc8\x77\x8f\x95\x2d\x09\xe5\xd2\x57\xad\xc5\x21\x15\x05\x82\x1a\xfe\x06\xdb\xe9\xb0\x9d\x27\xf8\x14\x18\x37\xe8\x8e\x4d\x15\xef\x21\xf3\x39\xdd\x4d\x00\x81\xba\x5e\x24\x99\xfc\xc4\x9b\x16\x95\xa1\xd2\x6c\x03\xe7\xb4\xd0\x28\x3a\x63\x9d\xdb\x3a\x59\x89\xf6\x63\x9a\xb9\xc9\x75\x83\x66\x17\xae\x45\xf6\xe7\x44\x77\x3f\xcc\xe2\x15\x58\x5f\x73\x68\x76\x0b\x5c\x29\xc4\x8d\xcc\x2e\xb2\x61\x23\x5b\x16\x8d\x51\x32\x66\x41\xf4\x5c\xbd\x3d\xd6\x21\x30\xc5\xce\x38\x62\x63\x67\xee\xe7\x9b\xa0\x94\xdb\x04\xa5\xae\x36\x69\xdd\x6b\xb4\xdd\x76\x3f\x03\x77\x5c\x06\x43\x1a\x46\x66\xbd\x5a\x5a\xa1\xe8\x59\x75\x97\x65\x0f\xd9\x67\xb6\x84\xee\xc3\x98\xa2\xbf\xbc\x6c\x9e\xb2\x6c\x09\x3d\x06\xe3\xf1\xb5\x82\x93\x05\xcf\xc7\xea\x36\x19\x3c\x05\x1e\x2f\x8d\x70\x2c\xb8\xac\x69\xb9\xaf\x15\x76\x92\xe5\x44\xd5\x05\xfd\x98\xdd\x13\xff\x3f\xdd\x7c\x0a\x1a\xfc\xe8\x4e\x5c\x7a\xeb\xd7\x9e\x1c\x0f\x9b\xf0\x82\xa0\x8c\x77\x3a\x27\xe3\x75\xfb\xf7\x3f\xbf\xfd\xf9\xd7\xd7\xf8\xd7\x06\x18\xa7\xe4\x63\x43\x8f\xc3\x1d\xf4\xf9\xf1\xa5\x3d\x7e\xea\x45\xd5\xbf\x10\xa2\x68\xe9\x5a\x8c\xce\x71\x34\xbd\xd6\xa2\x68\x62\xc7\xf1\x33\x8a\x6e\x49\x41\x14\x85\x37\x97\xe3\xcf\xe5\xeb\x50\x96\x09\x37\x5f\x5f\x5f\xe7\xfe\x9c\xa8\x7b\xb7\x97\x19\x98\x61\xc2\x9b\x28\x8a\x66\x1c\x4a\x0a\x81\xe5\xbe\x77\x1d\x48\xe8\x73\x2f\xa1\x51\x74\x25\x4c\xb7\x8d\x57\xa8\x9a\xd0\xb8\xcf\x27\x44\xeb\x1d\x1e\xe4\xf2\x99\x21\x92\xb9\x8b\xc9\xd5\xb3\x50\xcc\x73\x7c\x8e\x57\xeb\x78\xbd\xfa\xf6\xef\x1f\x5f\x57\xeb\xb1\xa9\x93\x87\xc5\xd3\x53\xe6\xba\x4a\x48\xf0\x04\x5a\x7c\x38\x9d\x07\x64\x28\x3e\xa1\x78\xb8\x3c\x27\x5f\xfd\xb3\xee\x4a\x53\xfa\x10\xff\x0f\x00\x00\xff\xff\x89\xd3\x78\xc3\xef\x0a\x00\x00")

func appCssBytes() ([]byte, error) {
	return bindataRead(
		_appCss,
		"app.css",
	)
}

func appCss() (*asset, error) {
	bytes, err := appCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.css", size: 2799, mode: os.FileMode(420), modTime: time.Unix(1507178697, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _appJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x58\x61\x6f\xdc\x36\xd2\xfe\xee\x5f\x31\x15\x8c\x40\x8a\x37\x92\xdd\xbe\x78\x81\xf3\x9e\x2e\x08\xd2\x14\x97\x43\xd3\x16\x71\xd0\x2f\xae\x0f\xa0\xa5\x59\x89\x31\x45\xea\x48\x6a\xed\x6d\xd6\xff\xfd\x30\x24\x25\x51\xeb\x75\x9b\x03\xea\x0f\x5e\x91\x1c\x0e\x67\x1e\x3e\x9c\x19\xb2\x78\x09\x8d\x50\xb7\x4c\xc0\xe9\x8a\x55\x08\x2f\x8b\x93\x93\x2d\xd3\x80\x35\xb7\x4a\x43\x09\xac\xc2\x9c\x1a\x69\xe2\xbb\x92\x6c\x7d\xe2\xbf\x72\x83\xf6\xaa\x55\xf7\xbf\x68\x2e\xed\x07\xa6\x1b\x2e\xd3\x0d\x13\x06\x67\x89\xd3\x5b\xa1\xaa\xbb\xab\x4a\x2b\x21\xb8\x6c\xa0\x84\xf7\x72\xc3\x25\xb7\xbb\x58\xc9\xa7\x16\x3b\x4c\x13\x56\x61\x61\xe9\xb3\x68\xb8\x6d\x87\xdb\xe5\x4a\x6f\x06\xab\xbc\xa2\x77\xae\xef\xbd\xb4\xea\x57\x8e\xf7\xa9\xd5\x03\xad\x18\x59\x7d\x85\xf6\x57\x26\x06\x84\x12\x36\x83\xac\x2c\x57\x32\xdd\x32\x91\xc1\x97\x13\x00\x12\xe3\x50\xc2\xa4\xd9\x18\xae\x64\x5e\xab\x2a\xef\x95\xe1\x24\xfc\x49\xbd\x97\x35\x3e\xa4\x93\x88\x40\xa7\x24\x6f\xd0\xbe\x1d\xb4\x51\x3a\xcd\xb2\xf5\x09\xcc\x3a\xfc\x7a\xb4\xc8\x0a\x38\xec\xf7\xf0\xea\x22\x5b\x9f\x3c\x06\xab\x58\xdf\x13\x90\xb2\x19\x04\xd3\x79\xa7\xea\x41\x60\x9a\xdc\xe3\x6d\xaf\x55\x95\xac\xe0\xfa\x66\xb4\xdf\x70\x59\x91\xd9\xe9\x64\xf7\x6c\xb4\xa9\x98\xa0\xb1\xeb\x13\x00\x80\xeb\xa4\x33\xc9\x0a\x2e\xce\xcf\xcf\x6f\x56\xa1\x87\x3a\xfe\x7f\x6e\x76\xcb\x66\x9b\xac\xe0\xdb\xff\x9b\x9a\x75\xb2\x82\xef\x2e\x66\x61\x4b\xe3\x17\xdf\xde\x9c\x00\xdc\x90\x6f\x1a\xed\xa0\xe5\x0c\x60\xcd\x2c\x7a\x63\xbc\x39\x5b\x28\xe1\x4c\xe2\x3d\x7c\xcf\x2c\xa6\x19\xbc\x02\x92\x58\xbb\xf1\x8d\xd2\x90\x8e\x40\x9f\xaf\x81\xc3\xdf\xbd\xf9\xb9\x40\xd9\xd8\x76\x0d\xfc\xec\x6c\x54\x16\xbc\x83\xd2\x8b\x5c\xf3\x9b\x75\xe8\xe7\x1b\x48\xb7\x34\xf5\xfa\xe2\x26\x1b\x0d\xda\xc2\x19\x98\xeb\xf3\x49\x88\xec\xf8\xc0\x6c\x9b\x6b\x35\xc8\x3a\xdd\x42\xe1\xe5\xfd\xf8\xa3\xfb\x1f\xa6\x26\xaf\x12\xea\x7d\x5c\x9f\x3c\x66\x29\x41\xce\xfa\x3e\xaf\xb9\xa6\xdd\xdd\x12\x01\x1b\x95\xac\xe0\x00\xfa\x30\xf7\x4b\x50\x64\xac\xe6\x95\xbd\x84\xe4\x4d\xe2\xa1\x13\x5c\xde\x5d\xce\x93\xcc\x0a\x70\x05\xcc\x5a\x6d\x96\x0e\xd6\x2b\xb0\xeb\xa8\x5d\xb5\x58\xdd\xc5\x0c\x9d\xc5\x01\x2a\x81\x4c\x7f\xe2\x1d\xaa\xc1\xa6\x36\x5b\x4f\x03\x04\x49\x9d\x01\xe6\x16\x1f\x6c\xea\xe8\x92\xd6\x59\x24\x60\x09\x47\xb4\xe3\x5c\xb7\x8a\xa7\xc9\x24\xf4\x38\x7e\x98\xfc\xf4\x9e\xd9\xaa\x4d\x9d\xb9\x39\x6b\x54\xe4\xbd\x89\xed\xa9\xa1\x84\x69\xaf\x4d\xb4\x9c\xd3\x9f\xce\xaa\x23\xd8\x1d\xcc\x4f\x41\x16\xaa\xf9\x7a\x90\xdf\x3e\x03\x72\xa5\x7a\x5c\x01\x0a\xec\x8e\x62\xed\x8e\xd0\x3d\x97\xb5\xba\xcf\xe9\x9b\x04\xaf\xcf\x6f\xb2\x18\x7f\xe9\xa8\x19\x33\xd0\x05\x97\xb8\xd7\x2d\x93\x6f\x94\x10\xea\x1e\x4a\xa0\x40\x33\x0e\x91\xc6\x5c\xc9\x34\xf1\xb3\x62\x8f\x70\x8b\xd2\xc6\xe0\xcd\xca\xbf\xe7\x9b\x0d\x99\x93\xfb\xe6\x3f\x91\x37\xad\x85\x57\x80\x79\x25\x38\x4a\xeb\x3b\xd6\x8b\x99\x3d\xea\x0a\xa5\xdb\xd6\x48\x47\x09\xe7\xf0\x9a\xb6\x15\x2e\x27\x75\x9f\x54\x4f\xe4\x9f\xa5\x5e\x92\xc0\x52\xdb\xe4\xcc\xa4\xb6\x2c\x97\x52\xc4\xb0\x51\xaa\x2c\x17\x18\x8c\x67\x70\x16\x3e\x40\xc8\x7f\xcc\xc3\xb5\xaa\x86\x0e\xa5\xcd\xff\x33\xa0\xde\x5d\xb9\x38\xaa\x74\x9a\x84\x19\x39\xaf\x94\x4c\xb2\xdc\xd8\x9d\xc0\x5c\xf5\xac\xe2\x76\x37\xa9\x21\xff\xe0\x72\xde\x8d\xc7\x69\xfb\x46\xa8\x83\xe0\x8f\xaa\x59\x1c\x1e\xf2\x60\x69\x76\x8c\x50\x09\x7f\x0b\x7f\x93\xe2\xf0\x3b\x06\x68\xda\x5b\x94\x36\x10\x28\x73\xdb\xac\xd1\xf0\xdf\x91\xb6\x79\x5c\x32\x5b\xb2\xe4\x34\x48\xa1\x7d\xc2\x85\x15\x45\x46\x16\x5b\xb8\xe0\x1e\x00\x2e\xf1\x79\x23\x44\x9a\x98\x9e\x11\x34\x1b\xa5\xdf\xb1\xaa\x9d\xf3\x01\xf5\xc7\xaa\x00\xa8\x27\xd7\xd8\xa9\x2d\xa6\xd1\xc9\x7c\x7c\x72\x28\x17\xa6\x1a\xb6\xc5\xaf\xb0\xb4\x28\x6e\x29\xac\x42\x35\x68\x4d\x74\xe1\x94\x18\xe1\x76\x07\x1d\x97\x20\x54\x03\x28\xad\xde\x2d\x1c\x73\xc1\xb8\x63\x0f\xa9\xf4\xea\xf2\x1f\x55\xf3\xf3\x66\x63\xd0\xfa\x1c\xe1\x3a\x3e\xb0\x87\x2b\xfe\x3b\x46\xf6\xde\xb7\x5c\x20\xf8\x6c\xbe\xf0\x8f\x68\xdb\x41\x39\x4d\xbd\x96\x37\xeb\x68\x98\x76\xfb\x9b\x2e\x83\x5b\x8d\xec\x2e\x1e\x90\x67\x67\xeb\x03\x35\x04\x15\x69\x1a\x69\x59\x69\x64\x16\xdf\x85\xfd\x0e\x98\xaf\x0f\xb1\xa5\x50\xfb\x56\x49\xeb\x4f\x61\x97\xdf\x3e\x91\xa8\x04\x33\xe6\x27\xd6\xa1\x1b\xef\xe3\x71\xcc\x59\xdf\xa3\xac\xdf\xb6\x5c\xd4\x7e\xf7\xa2\x3d\x9a\xbe\x22\x26\xff\x59\x2c\x35\xa8\xb7\xbc\xc2\x34\x31\x3b\x59\x3d\x1b\x4a\x0f\x63\xe5\x1d\xee\x16\xd9\x9b\x51\xa4\x13\xaa\x62\xe2\xca\x2a\xcd\x1a\xa4\xe2\xe6\xbd\xc5\x2e\x25\x49\xbf\xb2\xcb\xbf\x63\xdd\x14\xf1\x07\xb7\x4c\x90\x18\x9c\x41\x52\x26\x70\x46\xda\xb2\x35\x14\x05\x33\x66\xe8\x10\xfe\x75\xf5\xf3\x4f\x51\xf6\x0d\xb3\x7c\xaa\x09\x9a\xee\x70\xb7\x3a\x38\xcd\xcb\xa5\xc2\x86\x59\x2a\x41\x49\x5f\x4e\x39\x41\x36\x7c\xb3\x73\x72\x33\x86\x0b\x1f\xcc\xec\xc3\x8a\x26\xcf\x60\x8e\xab\x11\xbf\xdc\x67\xb6\x3e\xc0\x55\x0f\x72\x3e\x66\xa7\x5a\x29\x7b\xe5\xa1\x3b\x6d\xad\xed\x57\x70\x6a\x7d\x4e\x5d\x01\x01\x1f\xd5\x65\x51\xb2\xa1\x59\x50\xc2\x3c\xdb\xad\x62\x72\xcb\xad\xab\xdd\xa6\xa2\x6f\x3d\x56\xa2\xb2\x1f\xac\xd3\x60\xf2\xe9\xdb\x63\x60\x5a\x75\x7f\x39\xe1\xa1\x06\x7b\xe9\x8c\x1f\x1d\x41\xad\x97\x1d\xac\x41\x19\x64\x4e\x22\x97\x37\x5c\xe0\x25\x24\xc9\xdc\x32\x97\x20\x07\x21\x4e\x46\x8a\x91\x3b\x0b\x87\x13\x6f\x49\x4e\x16\xf8\xf3\x50\x14\xc4\x3a\xd4\xee\x10\x06\xd3\x07\x3d\x52\xc8\xd5\xc6\x3d\xb3\xad\x64\x1d\xe6\x1a\x7b\xc1\x2a\x4c\x8b\xeb\x7f\xff\x56\xdc\x9c\x9d\x16\x2b\x48\x92\x8c\xb8\xe2\x08\x3b\x7a\x4e\x9a\xbc\xdf\xe1\xeb\x8b\xb7\x66\xac\x2d\x53\x93\xd3\xcf\x16\x85\x7a\xc8\x8d\xc1\x74\xd0\x22\xc4\xa7\x00\xaa\xc6\x4a\x49\x89\x95\x3d\x56\x45\x6d\x73\x8d\x56\xef\xd2\x71\x9b\x03\xdc\x54\xc8\x24\xde\x86\x5c\xc9\xa1\xa7\x9a\xf5\xd8\x74\x47\xfd\x9c\xd7\xf0\x4d\x59\x02\xaf\x67\x5e\x3a\x0d\x34\x12\x15\x51\xd8\xd1\xf5\xc8\x07\xff\x45\xdd\x39\x8d\x85\x68\xeb\xac\x5f\x8f\x43\xac\xef\xc5\xc2\xc0\x5c\xc9\xaa\x65\xb2\x59\x58\x14\x7c\xc4\xc9\x06\x93\x4f\x5d\x50\xc2\xf4\xfd\xac\xda\xa2\x70\x68\x91\x09\x75\x54\xc5\x4c\x35\xe8\x55\x18\x38\x8a\xc1\x37\x81\x0a\xc4\x1b\xba\xd7\xc4\xed\xa8\xe8\x7a\xaa\x1e\xa6\xb2\x3b\x06\xc4\x2d\xea\x4a\x1d\x28\x21\x56\x05\x2f\x5e\x2c\xda\xd7\x51\x23\x84\x7b\x77\xd6\x3c\x0b\x43\x32\xf8\xe1\x19\xc9\xd9\x9a\x71\x2d\x2a\x64\xdc\xd4\x08\x95\x70\xc3\xf5\x88\x9b\xf9\x36\x47\xd9\xd1\xe9\x7c\x1a\x5b\x69\x5a\xc5\xaa\x16\xc7\x7c\xe8\x71\x7a\xce\xee\xf9\x96\xd9\x8c\x37\xc4\xb0\xfb\x33\xf0\xe9\x71\x3e\x84\x53\xd7\x32\x59\x0b\x8c\x6c\x9c\x4a\xf6\xc4\x21\xf0\x56\xc9\x0d\x6f\xf2\x5f\xb4\x6a\x34\xeb\xde\xe8\xc6\xc4\x46\x33\xdd\x98\xc5\x66\xc6\x1d\xcf\x6d\x4f\xaf\x15\xdd\xd3\x49\x74\xba\x65\xb9\xc9\x34\xf0\x47\x93\x49\xa8\x48\xfd\xa1\xcf\x4e\x8b\xdc\xa2\xb1\xa9\x9b\x34\xcf\x0a\xca\x3f\x62\xf3\xee\xa1\xcf\x4f\x2f\x96\x87\x65\x8c\x92\x24\x35\xa2\x10\xfb\xec\xc4\x16\x8e\xfb\x9f\x41\xbb\x10\xe4\xe8\x30\xc6\xb9\x11\x83\x27\x44\xf5\x74\x2b\x7d\x24\x24\x4a\x5f\x2f\xee\x9b\x41\x20\x5c\x54\x7d\x79\x4c\x52\x87\x03\xff\xa0\xfe\x17\x2f\x16\x07\x22\x5b\x54\xa1\xd1\xc1\x29\xc7\x75\xa3\x7b\xeb\x63\x1c\xa4\x43\xd0\x0e\x81\xed\xa9\xbb\x5f\xe3\x5a\x51\x38\x02\x01\x97\x96\x33\xe1\xfc\x0b\x46\x44\xee\x4d\x87\xed\xe0\x20\x2f\xce\xe2\xfc\x56\x51\xa9\x7e\x17\xd6\x19\xed\x7e\x4a\xdd\x3f\xf2\x21\x89\x14\xc7\xd4\x74\x70\xc5\xd4\xf4\x1d\x31\xab\x8a\x02\x1f\x2c\x4a\xc3\x95\x34\x90\x56\xad\x52\x06\x61\xa3\x55\x07\x94\x8f\xcd\x65\x11\x9e\x89\xf2\x4a\x75\x05\xfb\xcc\x1e\x94\x6e\x0a\xf7\x86\xa4\x11\x8b\x8e\x19\x8b\xba\x10\xfc\xd6\xf5\x75\xaa\xc6\x6c\xe2\x38\xb5\xa0\x84\xe2\xb7\x3c\xb5\xaa\x13\xfb\xcf\x46\xc9\xfd\x67\xb3\xaf\x8c\xd9\xb7\xb6\x13\xfb\x46\xed\x77\xec\x75\x27\xf6\xa6\xdd\x3f\x74\x62\xa2\xb3\xb3\x32\x00\xf1\x7a\xa6\x71\xe8\xb9\xa4\xcc\xc9\x93\xd1\xfc\x4a\x69\xed\x1f\x8e\xcc\xe4\xa7\x5f\xb9\x2c\x21\xd9\x75\x22\xc9\x46\x4b\x92\x1d\xeb\x44\xb2\x3e\x22\xd6\xa8\x48\xaa\x51\x82\xc9\x26\xc8\xcd\xa1\xe5\xca\xbf\x61\xa5\x19\xd5\x3f\x1f\x54\x1d\xde\xd2\x68\x56\x41\xe5\x99\x73\x7e\xb4\x4a\x28\x56\x7b\x72\x38\x2c\x5d\x38\x9b\xcb\xc2\x83\xb0\xbc\x0c\x67\xfb\x7d\xc8\x9d\x21\x90\x0f\x5a\x3f\x1f\xe2\xc8\x0d\x27\x41\x19\x74\x9b\x1d\x3c\xcd\xa5\xdb\xc9\x20\xff\x10\xc2\x37\xe0\x82\xf6\xd1\xf0\x38\x86\x43\x63\x99\xb6\x85\x46\xf7\xeb\xb3\x1a\x7d\x1d\xcd\xff\x4c\x03\x13\x1a\x59\xbd\xfb\x38\x48\xe9\x1f\x1f\xdd\x59\x0a\xcd\x29\x55\x90\x86\xdc\x8f\xcf\xc9\x6b\xec\x47\xe7\x22\x95\x4b\xbe\xdf\xd5\x82\x61\xbb\xf3\x7e\xf0\x69\x9f\x24\x93\x91\x16\xb9\x6d\x51\xa6\x73\x61\x7f\xec\x79\x27\xd2\x4f\x59\xea\xc0\xce\xd7\x90\x7c\xf4\x4a\xb1\x4e\x88\x54\x57\xe1\x3b\xbe\x57\x8c\xd5\xe8\xe1\x4b\xe1\x33\x4b\xb8\x77\xd9\x78\xfe\xe3\x0a\xbe\x8b\x1f\x85\xa2\x12\x39\x32\x5a\xa3\xe9\x9f\x31\xdc\x01\x43\xe3\xae\x7e\x7b\x7a\xa7\x99\xf0\xd8\x70\xc9\x84\xd8\x1d\x37\x74\x89\xff\xc2\xca\xc7\xb8\x84\xa9\x54\xd7\x71\x1b\x12\xe1\x54\xcf\x1c\xdb\x78\x3f\x72\x6c\x43\xa9\xfb\x70\x3f\x43\x1e\xff\xc1\x47\xe9\x2f\x8f\x4f\x7a\x0f\x13\xfa\x9f\x14\x29\x4b\x7e\x28\x33\xd7\x7e\x91\xce\xff\x99\x2a\xce\xf2\xc3\xea\xea\xab\x59\x30\xcd\xfe\x2b\x49\x30\x83\xf9\x57\x70\x60\xde\xb1\xe3\x14\x08\xf5\xfe\x16\x8f\x1f\xf6\x83\xd8\xf2\x4c\x71\xf8\x4c\xed\x15\xee\x80\xff\x0d\x00\x00\xff\xff\xd1\xe7\x36\x7a\x09\x19\x00\x00")

func appJsBytes() ([]byte, error) {
	return bindataRead(
		_appJs,
		"app.js",
	)
}

func appJs() (*asset, error) {
	bytes, err := appJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.js", size: 6409, mode: os.FileMode(420), modTime: time.Unix(1507178611, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x4d\x8f\xdb\x36\x10\x3d\xcb\xbf\x82\xcb\x8b\x13\x60\x57\xea\x2e\x5a\x20\x30\x68\x05\x45\x9a\x02\x05\x0a\x24\xc8\xf6\x52\x14\x3d\xd0\xe4\x48\xe2\x9a\x26\x05\x92\xf2\xae\xe1\xf8\xbf\x17\xa4\xbe\xb5\x96\xe3\x3d\xf4\x24\x4a\x33\xf3\xf8\xe6\x0d\x39\x22\xc9\xcd\x6f\x5f\x3e\xfd\xf5\xf7\xd7\xcf\xa8\x70\x3b\x99\x2e\x88\x7f\x20\x95\xdf\xd1\xb2\x5c\xe3\x67\xd8\x94\x46\x33\x9c\x2e\x16\xa4\x00\xca\xd3\x45\x44\x9c\x70\x12\xbc\xc7\x46\x28\xbe\xc6\xe1\x15\xa7\x8d\x27\x49\xc2\xbb\xf7\x93\x42\x6d\x91\x01\xb9\xc6\xd6\x1d\x24\xd8\x02\xc0\x61\x54\x18\xc8\xd6\x38\x49\x18\x57\x4f\x36\x66\x52\x57\x3c\x93\xd4\x40\xcc\xf4\x2e\xa1\x4f\xf4\x25\x91\x62\x63\x13\x0b\x3b\xaa\x9c\x60\x77\x95\x48\x1e\xe2\x87\xf8\xa1\xfb\x12\xef\x84\x8a\x99\xb5\xf8\x47\x73\xd0\xb2\xec\xfc\x82\x35\x5d\x44\xd1\x3f\x2a\xbf\x63\x52\xd3\xed\xbf\xe8\xb8\x88\xa2\x88\x0b\x5b\x4a\x7a\x58\x21\xa5\x15\x2c\xa2\xe8\xb4\x88\x48\xd2\x78\x93\xa4\x4e\x79\x41\x36\x9a\x1f\x50\x1b\xe9\xf1\x04\x62\x92\x5a\xbb\xc6\x52\xb3\x2d\xca\xb4\x94\xfa\x19\x09\xa6\x15\x4e\x49\x22\xbc\xc7\x8e\x0a\xe5\x27\x24\x16\x98\x13\x5a\xb5\x01\x4c\x2b\x67\xb4\x0c\xb4\xa2\x88\x14\xf7\xad\xa1\xd1\xd1\x7f\x8d\x88\x2d\xa9\x9a\x97\xd8\x5b\x1b\xc7\x8e\x88\x50\x65\xe5\x2c\xf2\xf0\xa0\x5c\xcd\xa5\xa6\x2c\xd8\x76\x8d\x6d\xa1\x9f\xff\xa8\x5d\xd6\xe8\xa6\x7f\x6b\xf9\x46\x11\x49\x8a\xfb\x7a\xc0\xc5\xbe\x45\xad\x04\x6a\x80\x33\x6d\x76\x0d\x60\xb0\x1c\x3d\x86\x5a\xa1\x1e\xea\xd4\x92\x1f\xc7\xd7\xcb\x45\xa8\x4c\xa3\x4c\x80\xe4\x8d\x57\xf4\xe8\xa8\xab\x6c\x1d\x91\x70\xb1\x3f\x1b\x1c\xc2\x6c\xf0\x1c\x47\xf7\x89\xb3\x02\xd8\x76\x47\xcd\x76\x98\x73\x2b\xb5\x02\xe6\x80\xa3\x8f\x68\x99\x1b\x00\xb5\x44\x2b\xb4\x34\xc0\x97\x7d\xda\x03\xb1\xcf\x85\x75\x2f\x21\x94\x0b\xdb\x7f\xc0\x7d\x81\x46\x21\x5f\x94\x14\x0a\x82\xff\x97\x2c\x0b\x63\x5c\xcf\x34\xa8\x87\x81\x26\xe6\xdd\x7b\x9c\x36\x6e\xc3\xc2\xd6\x42\xa8\xfc\xce\xeb\x3b\x98\xa0\xcd\xff\x2a\x01\x38\x75\x34\xfe\x56\x29\x25\x54\x7e\x59\x83\xe9\x8a\x9b\x46\x36\xc3\x10\xfb\xf9\x45\x84\xf4\xd3\x7a\x30\x66\xdd\x57\x72\x54\x4a\x53\xa9\x3b\x5f\x46\x8b\x2f\xe6\xe4\x83\xc9\x26\xcd\xb4\x21\xc9\x26\x45\x35\x29\x9a\xeb\x86\xd0\xa7\x82\xaa\x1c\xf8\xaf\xce\x53\x0f\xb3\x0e\xe7\x9b\x48\x36\x4c\x01\x7b\xd4\x52\xf0\x80\x7a\x3c\xa2\x60\xfb\x2a\x38\x3a\x9d\x2e\x20\xdc\xbc\x82\x60\x9a\xc3\x08\xc3\x4b\xf0\x49\x73\x98\x00\x0d\x17\xf4\xf9\xb5\x9d\x09\x09\x43\x31\xc2\x7b\x2c\x41\xe5\xae\x40\x29\xba\xc7\x67\x44\xbc\xb0\x99\xa2\xdf\x7d\xfc\xe5\x1a\x54\x62\x12\x43\x2c\x48\x60\x6e\x60\xdf\x54\xce\x35\x4b\x48\x97\xbe\x6b\x79\xa6\x7e\xeb\xa3\x0c\x09\x85\x7a\xd2\x3b\xcd\x7d\xd3\xad\x7b\x43\xec\xbf\x87\x92\x04\xbc\xab\x35\xb8\x90\xcf\x9f\x3a\xcf\x85\xca\xaf\xe9\x0e\xe3\xb6\x30\x76\x08\x5b\x63\xa3\x5f\x06\xbb\xc6\x33\x46\xee\x50\x42\xb3\x71\xbc\x15\x09\xee\x3b\x79\xae\x2b\x77\x26\x3b\x5f\xa0\xd8\x9b\x3a\x10\x49\x37\x20\xbd\x2c\x5d\x54\x6a\x1d\xd7\x95\x23\x49\x30\xfd\x60\x33\xbc\x9d\x18\x18\x33\x47\xcc\x9b\x66\x88\x05\x93\x75\x1c\x8c\xf9\xbf\x88\xd1\x1c\xd4\xac\x66\xb5\x71\x86\x5c\x63\x0c\x8f\x59\x76\xf3\xa5\x1f\x57\xbd\x5e\xb7\xe7\x17\x72\xfb\x03\x74\xd4\xf8\x66\x3b\xfc\x85\x35\xcc\xa2\x48\x6a\xca\x85\xca\x57\x28\x78\xc5\x42\xe5\xb7\x88\x0b\x4b\x37\x12\xf8\x0a\xdd\x58\xba\x07\x8e\xbe\x7f\x6f\xcc\xf5\xf8\xa6\xeb\x5f\xb7\x1d\x4e\x69\xc4\x8e\x9a\x83\x0f\x69\x3c\x6f\x51\x68\xba\x2b\x84\xba\xe0\xd6\xfb\x84\xd3\xe3\x71\x04\xf9\xee\x55\xdb\x85\x60\x0e\x6d\xf7\x31\x8c\xde\xfb\x46\x53\x67\x77\x5e\xa2\xae\xa3\x8c\xf6\xe6\x35\xdd\xe0\x1a\x11\xe9\x1e\xe6\x34\x1c\x88\x48\xf7\x30\xd5\xb0\x97\xd0\x1b\xe7\x15\x1c\x4a\x58\x7b\x0e\x15\xac\xbf\x74\xce\x27\x9c\x3e\xd2\x3d\x1c\x8f\x8d\xe1\xe3\x92\x2f\x57\xcb\xe5\x54\xa2\x37\x74\xc4\x57\x1a\xe4\x06\x0e\x43\x21\xda\x8c\x6a\x2d\x38\x1e\xfd\xd2\xf7\x10\x96\x58\xfa\x2d\x8c\xe6\x49\x4c\x6b\xe6\x37\x53\xd8\xe2\xfd\xbc\x0a\x72\xea\xc4\x1e\xd0\x0e\xac\xa5\x39\x0c\x7e\x15\xcd\x8a\x31\xa6\x97\xb3\xef\x01\xfd\x8a\x1a\xdb\xd1\xe9\x34\x99\xba\x1b\xf9\xbe\x1d\x8e\xa8\x73\xc7\xd5\x6e\x17\x0f\xb5\x03\x2e\x9c\x36\xe1\xbc\x49\x85\x02\x33\xff\x2f\xfb\x09\x4f\x53\x0d\xa1\x38\x3d\xc3\x25\x22\xa5\x81\xfe\x6c\x9d\x4f\xf0\xdb\x45\xa7\x2b\xb7\x9a\x74\xe7\x5b\x04\xc6\xac\x26\x9d\xf1\x16\x85\xfe\xb2\x7a\xd5\x95\x4e\x7e\xf6\xd2\xc0\x34\x7f\x92\x34\xe7\x76\x62\x99\x11\xa5\x43\xd6\xb0\x2b\x6e\x2b\x54\xe5\x95\xa4\x26\x7e\xb2\xc9\x7d\xfc\x4b\xfc\xa1\xfb\xe0\xef\x2a\x4f\xe1\x90\x5d\xe3\xbd\x1d\x99\x41\x72\x1f\x3f\xc4\x3f\xfb\x91\x87\x42\xac\xa0\xc6\x82\x5b\xe3\xca\x65\x1f\xe6\x91\xf7\x20\xf5\xcb\xc5\xb9\xfd\xfd\x68\x6c\x27\x89\xbf\xe8\xf8\x0b\x4f\x12\x2e\x83\xff\x05\x00\x00\xff\xff\xda\xb7\x50\x92\x1c\x0e\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 3612, mode: os.FileMode(420), modTime: time.Unix(1507178694, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"app.css": appCss,
	"app.js": appJs,
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"app.css": &bintree{appCss, map[string]*bintree{}},
	"app.js": &bintree{appJs, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

