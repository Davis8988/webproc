// Code generated by go-bindata.
// sources:
// static/app.css
// static/cm.js
// static/directives.js
// static/index.html
// static/run.js
// static/services.js
// DO NOT EDIT!

package agent

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _appCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x56\xdb\x6e\xdb\x38\x10\x7d\xf7\x57\x10\x28\x0a\xa4\x46\x24\xd3\xc9\x26\x48\x15\x6c\xb1\x40\x5f\xf6\x65\x3f\x62\x24\x8e\xad\x81\x29\x8e\x40\x52\xbe\x64\x91\x7f\x2f\xa8\x8b\x75\x75\x93\xe6\x21\x32\xc9\x33\xf7\xc3\x19\xe6\xbe\xd0\xf7\xab\x94\xd5\x45\xfc\xbf\x12\x62\xc7\xc6\x47\x3b\x28\x48\x5f\x12\xf1\x93\x2b\x4b\x68\xef\x45\xc1\x86\x5d\x09\x19\xbe\xae\x84\x28\x41\x29\x32\xfb\x44\xc8\xb0\x2a\xc0\xee\xc9\xb4\x8b\x91\xf4\xbf\xa8\x8f\xe8\x29\x83\x70\xc2\x47\xb4\x3b\xcd\xa7\xe8\x92\x88\x9c\x94\x42\xf3\xba\x7a\x5f\xf5\x76\x15\xb9\x52\xc3\x25\x11\x3b\x8d\xe7\x5a\x2f\x99\x28\x47\xda\xe7\x3e\x11\x5b\x29\x8f\x79\xad\xa5\x84\x8c\xfc\xa5\xb5\xe6\x2d\x18\x47\x9e\xd8\x24\xdd\x89\x40\x70\x18\x91\x11\x32\x7e\x76\x57\x0b\xb1\x66\x50\xa8\x6a\x43\x57\x15\xdb\xfa\xd8\xa1\xc6\xcc\xd7\x27\xd1\x09\xd3\x03\xf9\x08\xca\x12\xc1\x82\xc9\x30\x11\x86\x0d\xd6\xb8\xb8\xa2\x38\xad\xbc\x67\x53\x63\x4f\xa4\x7c\x9e\x88\x17\x59\x9e\x07\x29\x89\x34\xee\x82\xbb\x4f\x61\xf7\x7d\xb5\xda\xac\xff\xfe\xf8\x6f\xbd\x59\x15\x40\x66\x39\x0b\xe1\x1b\x29\xb2\x98\x35\x61\x5a\x3e\x5d\xb7\xf7\x96\x4f\x75\x18\xed\xda\xe5\x96\xcc\x61\xb8\x93\x82\x23\x97\x08\xf9\xb5\x09\x21\x63\xe3\xd1\x34\xc1\x6e\xd6\x35\x44\x90\xc7\x42\xac\x37\xad\x44\x22\x9e\x5f\x07\x87\x41\x00\xc8\xa0\x6d\x10\xcb\xde\x9d\x2c\x94\x21\x51\xe1\xbb\xe4\x72\xc6\xba\x2a\xea\x6a\x7f\x36\x1d\x8d\xa7\x96\xb5\xfb\x8d\xab\x6d\xf8\x72\x16\xbe\x9c\x86\xbf\x95\x58\xd4\x74\xc1\xb3\x8f\x40\xd3\x3e\x38\x85\xc6\xa3\x1d\xb1\x79\xdb\xd6\x32\x65\xab\xd0\x46\xb6\xa5\x5e\x79\x16\x8e\x35\x29\xf1\x05\x60\xc6\x64\xa8\x3c\x87\xc8\x7a\x87\xe3\x1d\x69\x6c\xfc\x6e\x6e\x46\x94\xb2\xf7\x5c\x24\xe2\x41\x36\xac\x18\x60\xb3\x1c\xb3\x43\x01\xf6\x10\x53\xd6\x12\x6b\x70\x9d\x46\x50\x32\x65\xe5\x5d\x8f\xbb\xd6\xa2\x63\xe8\x00\xeb\xc9\x6b\x8c\xc9\xec\x38\xde\x11\xea\x86\xf7\x75\xf4\x0a\x33\xb6\xd0\xd4\xa5\x32\x0a\xad\xa6\x99\xf4\x92\x5c\x9b\xb5\x40\xef\x09\xda\x79\xf0\x95\x1b\xe0\x4f\x39\x79\x8c\xea\x66\xd1\xb3\xe2\x96\x81\x70\xab\xea\x24\xa4\x7c\x1e\xde\xab\xad\x6c\x38\xdb\x4b\xb9\x12\x4c\xec\x0a\xd0\x1a\x6d\xdf\xa8\x1c\xbd\x61\x22\x64\xfc\x3d\x54\x78\x64\xc4\x56\x26\x0a\xbe\xb9\x1b\xe0\xe9\x9d\x5d\xa8\xce\x11\xad\xa3\x36\xdd\x19\x6b\xb6\x89\xf8\x92\x65\xd9\x94\x4a\x35\x51\x86\x9d\xf0\xe1\xa9\x3c\x0b\x59\xf3\x69\xd0\x15\x3b\xeb\x2f\x33\x57\x3b\x3b\x30\xb7\x14\x6e\x6d\x81\xce\xc1\xbe\xe5\x54\xe7\xb4\xe7\x32\x11\x8f\x9d\xcf\x15\x75\xa8\x59\xc9\x3a\xa2\x37\xa8\x6b\xae\x35\xa4\xa8\x1b\x7b\x95\x75\xc1\x60\xc9\xd4\x21\xff\xe0\xa2\xfe\x64\x85\xff\x91\xb5\xdc\x14\x65\xd0\xb0\xbf\xbe\xce\xcb\x39\xc2\xc7\x59\x11\x71\xe5\x47\x41\x4b\xb9\x55\xe9\x6e\x11\x8a\xd6\x8e\xa0\xf0\x24\xa5\x94\x8b\x50\xd8\x77\x5d\xae\x03\x3f\x3f\x3f\xcf\x91\xfd\xef\xe8\xe8\x32\xcb\x5a\xa7\x60\xef\x6f\x62\xf2\x2b\xa6\x49\xf2\x6f\x87\xcf\xa3\x9b\x8e\xab\xb1\xf5\x24\x0f\x6d\xe4\x33\x3e\x2c\x20\x27\x9e\x4c\x26\xda\x9f\x75\x59\x34\x3e\x2e\xc1\xb4\x64\x98\x75\xf8\xcd\x5a\x1c\xd1\x86\x21\xae\x85\x2b\x35\xf9\x41\x03\x5e\xec\xf1\x53\xad\x3f\x44\xec\xaa\xb4\xb7\xd0\x4c\x99\x7a\x44\x95\xdc\xe5\xcf\xa2\x06\x4f\x47\xfc\x48\xc1\x0f\xa1\xe8\x38\x55\xd3\xf5\xe3\xae\x1b\x0f\x15\x43\xea\x58\x57\x1e\x67\x5c\x9c\x52\x75\xd1\x2e\x2a\xf2\x6c\xc7\xfe\xdf\x48\x48\x3b\x34\xba\x5e\x3f\x9d\x1a\x75\x59\xdc\x09\x4a\xe1\x59\xe4\x6c\xe9\x2d\x4c\xd6\x56\xc3\x7a\xb3\xfa\xa7\x40\x45\x20\xee\x0a\x38\x5f\x1f\x3d\x8f\x52\x96\xe7\x6f\xf7\xe2\x2e\xbc\x84\x3a\xe7\xff\xaa\x37\x6b\x4f\x16\xca\x77\xf3\xbd\xf0\x3e\xc7\xdf\x88\x6f\x16\x4a\x33\x5f\x06\x07\x37\x07\xe3\xfb\x42\x16\x67\x36\xfa\x12\xa6\x90\x1d\xf6\x96\x2b\xa3\x12\x51\x92\x39\x5c\xbb\xe2\x40\x5a\xf3\xfe\x23\xd1\xec\x02\x2d\xf1\x76\xac\x35\x9f\xfa\x11\xb9\x4c\x03\xdb\x65\xb7\x9b\xf6\x4d\x98\xd7\xf5\x40\xb5\xdd\xa7\x70\xf7\xf0\xf8\x72\x2f\xfa\x7f\x32\xfe\xfe\x6d\xf4\x6c\x78\x6c\xe4\xba\xaa\x3d\xb4\xeb\xb6\x60\x0f\xdb\xf1\xa3\x02\x14\x55\x2e\x11\x4f\xcd\xee\x5b\x44\x46\x05\x22\x3f\x7d\xfe\x71\xdb\x36\x97\xf7\x3e\x5e\xb3\xef\x63\x1e\xf7\x82\x5f\x01\x00\x00\xff\xff\x9d\xd5\xe6\x81\xdc\x0b\x00\x00")

func appCssBytes() ([]byte, error) {
	return bindataRead(
		_appCss,
		"app.css",
	)
}

func appCss() (*asset, error) {
	bytes, err := appCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.css", size: 3036, mode: os.FileMode(420), modTime: time.Unix(1507990381, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xb1\x6a\xc3\x30\x10\x86\x77\x3d\xc5\x21\x08\xd8\x10\xa4\xd0\xd0\x0e\x31\x9e\xba\x36\x19\x0a\x9d\xda\x0e\x8a\x74\x4e\x14\xcb\x52\x91\xe4\x90\x50\xfc\xee\xc5\x8e\x12\xdb\x5d\x6c\xf3\xdf\xff\x7d\xf8\xee\x2c\x3c\x48\x23\x42\xc0\x00\x25\xfc\x12\x00\x71\x40\x1b\x37\x40\xbf\xda\xa7\xd5\xcb\x7a\xfa\xa4\x4b\x02\x80\xde\xff\x1b\x0e\xb1\x6b\x47\x86\x92\xae\x20\xe4\xd5\x29\xdc\x6a\xef\x9d\x67\x8d\x53\xf8\xf1\xfe\x06\x25\x01\xa0\x9c\x4b\x65\x4f\x81\x49\xe3\x5a\x55\x19\xe1\x91\x49\xd7\x70\x71\x12\x17\x6e\xf4\x3e\x70\xe9\x14\x36\x03\xc8\x9f\xd9\x7a\xc5\x56\xbc\xe7\xf9\x62\xc7\x17\x3b\xd6\x68\xcb\x4e\x81\xce\xfd\x0a\x2b\x6d\x71\xeb\x14\x66\xd4\xb8\x03\x5d\x42\xd5\x5a\x19\xb5\xb3\x59\x3e\xec\xe4\x31\xb6\xde\x0e\x9f\x00\xd1\xd5\x68\x37\x63\x25\x44\x8f\xa2\x59\x42\x88\x22\x62\x9e\x4a\x00\xfd\x65\x42\xbc\x1a\x84\x12\x6c\x6b\x4c\x91\xf2\xca\x79\xc8\xfa\x61\x0d\xda\xde\x6f\x37\x62\x00\xba\x82\xe4\x64\x8d\x88\xf2\x98\xa5\xce\x67\xfd\x9d\x4f\x7b\xf0\xd0\xd7\xc5\x24\xdc\x7b\x14\x93\xa0\x23\xf3\xf7\xcd\x7e\x35\x38\x55\xc5\xa3\x0e\xec\xc7\xe3\x19\xca\x9b\x74\xe4\xd3\xea\xb3\xf4\xee\x4a\x7f\x69\xf1\x12\xb3\xfc\x3e\x4c\xc0\x43\x79\xcb\x7b\xa4\x2b\x48\x97\x17\xe4\x2f\x00\x00\xff\xff\x8b\xfa\x43\xcc\x33\x02\x00\x00")

func cmJsBytes() ([]byte, error) {
	return bindataRead(
		_cmJs,
		"cm.js",
	)
}

func cmJs() (*asset, error) {
	bytes, err := cmJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cm.js", size: 563, mode: os.FileMode(420), modTime: time.Unix(1507975872, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _directivesJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x56\xcd\x8e\xdb\x36\x10\xbe\xfb\x29\x26\x42\x0e\x32\xac\xc8\xde\xf4\x07\xe8\xba\x2a\x10\x6c\x51\x34\x40\x16\x2d\x9a\xa2\x17\xc3\x07\x96\x1a\x4b\x4c\x28\x52\x4b\x8d\xed\x2c\x36\x7e\xf7\x62\x44\xc9\xa2\x64\x3b\xf5\xc5\xd4\xcc\x37\xbf\xfc\x66\x24\x51\xd7\x69\xae\x1c\x4a\x52\x07\x8c\x23\x51\xd8\x28\x81\xdd\xde\x48\x52\xd6\xc4\x73\x78\x99\x01\x1c\x84\x83\x46\x19\x89\x90\x41\x3c\xd1\x75\x5a\x29\x34\x6b\x37\xad\x04\x60\x13\x55\x4d\x94\xc0\xdd\x6a\xb5\xda\x26\x67\x19\x8b\x7e\x0c\x05\xd5\x54\x50\x46\x09\xbc\xfd\x3e\x10\xe4\x51\x02\xdf\xdd\x85\x26\xc4\x98\xbb\xb7\xdb\x56\xb2\x5d\xb7\x7f\x0e\x69\xef\xcc\x90\x76\x2e\x08\xfb\xf4\x7c\x82\x07\xc8\x60\x61\xf0\x08\xbf\x0a\xc2\x78\x0e\x6f\x80\x31\xeb\x0e\xb1\xb3\x0e\x62\x86\x29\xc8\x60\xb5\x06\x05\x3f\xfb\x92\x52\x8d\xa6\xa0\x72\x0d\x6a\xb1\x18\x1c\x76\x35\x43\xe6\x41\x1b\xb5\x5d\x9f\x35\x6a\x07\xf1\x81\xcd\x37\x77\xdb\x79\x9f\xd8\x01\x16\xd0\x6c\x56\x01\x8c\xf3\x79\x14\x54\xa6\xce\xee\x4d\x1e\x1f\x60\xe9\x2d\x7a\xc4\xa9\xfb\xef\x1c\x44\x6f\x22\xaf\x39\xf1\xdf\x69\x1e\xcf\xd7\xb3\xd9\x59\xfb\xd2\x35\xa1\x21\xa7\x24\xdd\x43\xf4\x2e\xf2\x0d\xd3\xca\x7c\xbe\x1f\xda\xd2\x24\x80\x09\x08\x22\xd7\x8c\xbb\x93\x27\x40\xeb\xe0\x59\x96\x28\x3f\x43\x36\xe5\x81\xff\x49\x8d\xc2\xfd\xad\x2a\xb4\x7b\x8a\x69\x3e\x2e\x3d\x9f\x03\xa6\x84\x5f\x28\x6e\x09\x13\xe7\xf3\x00\x40\xdc\x31\xa4\xde\xb6\x8d\xe2\x49\x32\xd4\xdd\x1f\x9a\xf4\xf5\x51\x90\x2c\xe3\x36\xdd\x54\x14\x36\xa0\x65\x13\xe6\x93\x43\x06\xe7\x9b\x6d\x82\x70\xad\xff\x78\x70\xdd\x9d\xb8\xb5\xa7\xf5\x8c\x1f\x67\x13\xf6\xcb\xea\xc1\x1a\x12\xca\xa0\x0b\xa7\xe0\xb5\xb3\x96\x3e\x4a\x5b\x77\xa4\xba\xd5\xf6\x87\x1b\x6d\x67\xcb\x04\x3e\x3d\x5d\xed\x3d\x6a\xac\x20\x83\x4f\x4f\x01\x3f\x58\x6e\x44\xc5\x13\xe5\xcb\xe7\x87\x5e\xc9\x6d\x7e\xc5\x82\xb0\x09\x54\x3a\x7b\x84\xc8\xd8\xd6\x2e\x9a\xd2\x88\x1d\x8a\x9a\xd9\x3d\xd4\xb2\x61\xe4\x76\xe4\x55\xd4\xea\x8a\x53\x36\x34\x96\x80\x4a\x74\xd7\x5d\xdb\x9a\x78\x1a\x84\x29\xf6\x5a\xb8\x14\xbf\x10\x9a\x3c\x7e\x39\x28\x3c\xd6\xd6\xd1\xa3\x70\x85\x32\xf7\xf0\xde\xec\x94\x51\xf4\x7c\x4a\x38\x99\x94\xad\xe6\x61\xc9\x98\x2b\xb2\x0e\x32\x78\xb0\x39\x3e\x2a\xe7\xac\x8b\xb9\x3d\x09\x8c\xa0\x47\x65\x72\x7b\xdc\x44\xb2\x8a\x60\xd1\xd6\xbb\xe5\xe0\xb5\xea\x01\xcb\xa5\xad\xb9\xf3\x42\x43\x29\x4c\xae\xd1\x05\x45\xb6\x91\x8d\x2c\x85\x29\x46\x1d\xf4\xc1\xd3\xdc\xca\xd4\x9a\x38\xf2\x80\xcb\x5d\xd8\xff\x42\x37\x71\x40\xba\xd3\xc5\x08\xb7\x7b\xc5\x28\x52\x42\x3f\xda\x1c\x7d\xaa\x69\xc5\xc7\xaf\x5f\xc1\xec\xb5\x1e\xf2\x96\x2c\xad\xda\xca\x19\x35\x1b\x62\x35\x48\xe1\x40\x1e\x84\x0e\xf3\xf1\x2d\x49\x1d\x3e\xed\xb1\xa1\x77\x46\x55\x82\x61\xbf\x39\x51\xe1\xe5\xc6\x1e\x15\xdc\x20\xfd\x23\xf4\x1e\xd9\x25\x27\x14\x45\x41\x35\x3e\xf6\xce\x6a\x6d\x8f\x1f\xa5\xb3\x5a\xdf\xa8\x75\x1d\xa4\x5a\x8c\x53\x0d\xa3\x76\x93\xd3\x85\x2e\xfa\xd0\xd7\xfd\x88\xba\x46\x93\x87\xae\xb4\x32\xd7\xee\xcc\x61\xad\x85\xc4\xbf\xda\xbb\x60\x4c\x12\x30\x28\xfd\xd3\x36\x71\x07\xd4\xa2\xa1\x0f\xca\x60\x3c\x0f\xd7\xd2\xed\x12\x47\xe9\x54\xfe\xf2\xce\xc9\xf0\xf3\x95\x64\x1a\xa4\x3f\x5a\xf6\xc5\x11\x23\xa2\x04\x5a\xe0\x10\x2e\x48\x4d\xec\xc9\x7e\xb0\x22\x67\x5e\x74\x39\x4e\xe0\xa7\x70\x3e\x03\x16\x85\x81\xfb\xe4\x46\xfa\x29\x0b\x7b\xea\xfb\x42\x3f\x58\xf9\x79\xea\xc2\x6b\x94\x29\x20\x03\x72\x7b\xbc\xdd\xa0\x5b\xb7\x3b\x8d\xa2\x4c\x31\x56\x03\xf0\xf6\x49\xb5\x2d\xd2\x60\xdc\x1a\xa4\x8f\xa8\xd1\xfb\x1b\xc3\xdb\x5d\x8a\xf7\x57\xcd\x58\xf3\x60\xf7\x86\xe2\x79\x32\x31\x92\xe5\x3d\xac\x46\xb2\xd3\x88\xd4\xa7\x81\xc2\xd7\xaa\x7c\xf8\xd6\xeb\xaf\x1f\xe8\x9d\x85\x2c\x20\xb2\xef\xcc\x7b\xb3\xb3\xf1\x28\x94\xff\x3a\x62\x5d\xc9\x78\x8d\x55\x2a\xb5\x42\x43\xbf\xa3\x2a\x4a\x82\x45\xeb\x2a\x25\x5b\x4f\xad\xea\xf6\xfb\xc2\x5b\x2e\x3d\xaa\x6c\x6d\xa6\xc0\xf0\xe2\x6a\xf8\x25\x83\x55\xfa\xd3\x0f\xeb\xc9\xad\x0c\xa0\x57\x59\x06\xdf\xbc\x23\x69\x4d\x63\xf9\xdb\xc7\x16\x71\xe4\x51\x51\xd2\xee\xd9\x64\x88\x75\xa3\x9f\x97\x54\x3a\x9f\x43\x83\xe1\x2d\x94\xbe\x16\x75\xad\x9f\xdf\x35\xcf\x46\x8e\x76\x4b\xfb\x81\xe3\x7f\x5d\x97\x79\xa4\x7c\x43\xa2\x64\x7a\x5b\x03\xdf\x01\x75\x83\x57\xa9\xfd\x7f\xe4\x5d\x2e\x8d\xb5\xf5\x25\x35\x4e\x7d\x26\x3e\x78\xf8\xc6\x1a\xa6\x89\xdd\x0a\xdd\x60\xb8\x31\xbc\x36\x0c\xb8\x0b\x23\x0e\xea\xa1\xec\xe5\xd2\x9a\x2e\x4e\x02\x39\x12\x4a\xe2\xeb\xfb\xd7\x12\xd9\x2a\xe1\x63\x63\x87\x96\x66\x3c\xa7\x63\x5b\xbf\x34\x5b\xe4\x19\x96\x74\x1e\x3b\x37\xd7\x96\xdb\xf9\xd5\xeb\x0f\x17\x5f\x4a\xff\x05\x00\x00\xff\xff\x44\x59\x56\x69\x27\x0c\x00\x00")

func directivesJsBytes() ([]byte, error) {
	return bindataRead(
		_directivesJs,
		"directives.js",
	)
}

func directivesJs() (*asset, error) {
	bytes, err := directivesJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "directives.js", size: 3111, mode: os.FileMode(420), modTime: time.Unix(1507975261, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x59\x7b\x73\xaa\x48\xb0\xff\xdb\x7c\x0a\x8e\xff\x64\xb7\xf6\x44\x14\x1f\x89\x59\xe3\x16\x0a\x1a\x5c\xc1\x88\x0f\xa2\xb7\x6e\xdd\x1a\x60\x84\xc1\x61\xe0\xf0\xf0\x95\xcd\x77\xbf\x35\xe0\x03\x93\x98\xcd\xa9\xdd\x3d\x55\x1e\x87\xe9\xee\xdf\xf4\x6b\xba\x1b\xd3\xf8\x26\x0c\xda\xe3\xd9\x93\xc8\xd8\x91\x8b\x9b\x57\x0d\xfa\xc5\x10\xeb\x06\xf8\xfe\x43\x7e\x0d\x75\x3f\xf0\x8c\x7c\xf3\xea\xaa\x61\x43\x60\x36\xaf\x72\x8d\x08\x45\x18\x52\x0e\x1d\x11\xf3\x21\x9f\x3c\xe6\x9b\x7b\xce\x06\x9b\x3c\x53\x3e\x8c\xc8\x92\x09\x20\x7e\xc8\x87\xb6\x17\x44\x46\x1c\x31\xc8\xf0\x48\x9e\x89\xb6\x3e\x7c\xc8\x23\x17\x58\x90\xdd\xdc\xa4\x7b\x76\x00\x17\x0f\x79\x13\x44\xe0\x3e\x25\xf8\xc4\xfa\x5d\x07\x21\xac\x55\xbe\xa3\x69\x6b\xa0\xae\x8b\x7f\x76\x2d\x8f\xe7\x79\x5e\x19\x4d\x6c\x71\x62\xf1\x3c\xff\x48\xff\x6b\x55\xda\xbc\x4c\xf7\x07\x71\xa8\xd3\x0d\xbe\xfb\xac\x76\xb4\x47\x75\xac\x73\xf3\xa2\xc9\x75\xb6\xf3\x61\xab\x35\xef\xd6\xd1\x7c\xd4\xea\xe9\x5a\x87\xcc\xa7\x3d\x3c\xd3\xd4\xaa\x61\x60\xfc\x44\x05\x38\xdb\x9f\x76\xec\xa2\x26\x96\xe4\x81\xab\xac\xf4\x51\xd5\x4e\xf9\xab\x15\xfd\x99\x4f\xff\x09\x6b\x16\x3e\xb6\xec\x19\x17\x61\xb3\xdd\x42\x73\xcd\xf4\x75\xa7\x88\x6e\x6f\x63\x56\x42\x2d\x7f\x2e\x14\xd1\x74\x37\x55\x64\xb1\xb4\x1e\x72\x53\x0f\x4c\xec\x9a\xe1\x4e\xc7\x70\x59\x9d\xcc\xca\x7e\x30\xdb\xe1\xa5\xe4\xdc\xfd\x26\x09\x9b\xca\x80\xd8\x91\xd1\x2d\x61\xb3\x2b\x5a\xb0\x5b\x0a\x75\x22\xd7\xa0\x50\x44\x33\x4d\x5d\xcd\xdc\x49\x8d\x3e\xeb\xda\xb4\x38\x1b\xdd\x21\xe9\xd1\xaa\xc1\x6e\x69\x6d\x76\xc3\xba\xb4\xec\x2c\x75\xae\x87\xa5\x8e\xad\x4c\xda\x2d\x41\x2f\xf7\xb0\x24\x4c\x62\x79\x5b\x72\x64\x41\xdc\x48\xc2\x8c\xeb\x3b\x62\x51\x19\xcf\x38\x79\xb4\xb6\x64\x87\xdf\xc8\xe8\x6e\x4d\x3f\x0a\x2a\x6e\x14\xc1\x2b\x29\x8e\xb7\x55\xb6\xbc\x25\xb5\xf7\x1f\xa7\x62\x3d\x3d\xf6\x96\x73\xc7\x1f\xa9\xe2\xec\xa8\x8f\xe1\xaa\xee\xd3\xa8\xe7\x99\x8f\xea\x7a\x80\xee\x56\x66\xd9\x2c\xf7\x89\xb1\xeb\xbb\xf5\xed\x7c\x7b\xb7\x19\x8c\x97\xd5\xfe\x8e\xdf\xf6\x77\xd2\xb6\xff\xdc\x5b\xce\x51\x69\x07\xb5\x6a\x71\xf6\x6c\x45\x3a\x91\x9d\x0c\xae\x38\x7f\x56\x1c\xc3\xc5\x6b\xb3\x8b\x57\x3a\x6a\x6d\xe7\xdd\x59\x6d\xa6\xf5\x56\xe6\xf3\xb0\x2e\x21\xe9\xe4\x83\x6e\x69\x3d\x9e\x14\xeb\x92\x6b\x17\xcd\x47\xbe\xd6\xdf\xd6\x63\x63\x7b\x8c\x85\xa3\x73\xc5\x15\xec\x76\xd6\xfd\x9d\x18\xcb\xed\x7a\xa4\x27\xfe\xb1\x23\xbd\x5b\xdd\x0d\x88\x52\x9c\xb8\xd3\x33\x9d\x75\x22\xc7\x7b\x9f\xc6\x33\xae\x1e\xf5\xcb\xb6\x6d\xb4\xef\x36\x7d\x87\x5f\x19\x25\xb5\x6a\x74\x27\xab\x89\x3b\xdd\xe9\xe5\xe9\x76\xc6\x4d\x47\x73\x6d\xe6\x48\xa8\x55\xd1\xb5\x4d\x6c\xec\x7c\x1a\xfb\x2f\xea\x92\xea\x61\x88\x25\x65\xb0\xac\x6f\x01\xcd\x0d\xb7\x13\xaa\xdd\xba\x63\x6a\x25\xac\x13\xb5\xa7\x0a\x45\x44\xed\xeb\xbb\xaa\x3f\x17\xbc\xb5\xec\x58\x6b\x79\x2c\x96\x15\x81\x2f\xcb\x0e\xcf\x0d\x04\x71\x33\x10\xa4\xed\x70\x8c\x45\x79\x32\x15\x65\x1a\x43\xc7\xd8\xaa\xed\xc4\x3f\xd4\x2f\xb5\x4f\xf0\xb8\xa1\x33\x6f\xcb\xc2\xac\x2c\x8b\x62\x55\x16\xa5\x8d\x3c\x99\x94\x87\x8e\x54\x51\x97\x73\x8a\x55\x55\xc6\x46\x55\xde\x49\x65\x65\x74\xc2\x1b\x69\xd5\x9d\xd9\xed\xc4\x33\x6e\x9a\xc1\xc3\x59\x3c\x4e\x5d\x7e\x0d\x6f\xb0\x54\xb6\x73\xad\x53\xd4\xcb\xbd\x89\xce\xd5\xc3\xa7\x51\xef\x70\xe7\x86\xa0\x5b\x2f\xea\x65\xc5\xd3\xcb\xbc\x35\x2c\xc9\x9c\xd4\xb6\x95\x99\xa6\xf8\x3a\x51\x57\x06\x67\xf9\x69\xae\x1c\xfc\xa7\x62\xc3\xc5\xdc\x5c\x53\xbb\x86\x5b\x8f\xa4\xc7\x34\xae\x03\x17\xc7\x46\x59\xb5\x75\x57\xc1\xa3\xc9\xb0\x2e\xd1\x3b\xd4\xae\xfa\x40\x1b\xd6\x64\x41\xaa\xd0\xfc\x57\x76\xc3\xb5\xb2\x93\xd6\x8a\x63\x6d\xe4\xb1\xb5\x95\x97\x62\x55\x15\x3a\x1d\x55\x10\x39\xc5\x91\xca\xf2\x72\x88\x4e\x78\xea\x6a\x56\x9e\x46\x73\xad\x5a\xcc\xe0\x2d\x7f\x16\xaf\xbf\xab\x58\x4f\xed\x7a\x92\xd3\x6a\x77\xba\x9b\x95\x7b\xbe\xf1\xa8\xfa\x3a\x57\xf9\x4d\x12\xd6\x2b\x7a\x8f\x06\xb8\x27\xaa\x4e\xc2\x97\xbd\xfb\x94\x9e\xad\x29\x58\x77\xa9\x1e\x12\x7a\xda\x55\x6e\x6b\xb7\xd1\x86\x96\x9d\x16\x6e\xc9\x53\x71\x12\xf7\xd1\x2d\xcb\xb2\xbf\xb9\xb3\xdb\xfe\x2e\xa9\x47\x44\x1d\x8d\xf1\x13\xcb\x0f\xb4\xb2\x2c\xd2\xba\xd8\x96\x47\x13\xb5\x35\x7d\x74\xc0\xad\x62\xaa\x6d\x8f\xb7\x44\xf1\x59\x85\x8b\xd5\xc2\x7c\xaa\xb7\xc5\xf9\x70\x50\x7d\x16\x85\xd6\xdd\x70\xbe\xea\x69\xee\x84\xe3\xd7\x5d\x7e\xdd\xb5\xee\x3a\x75\xe3\xcf\x62\x8d\x2f\x6d\x4b\x1a\x0f\x84\xa7\x75\x8d\xb4\x36\x35\x51\x64\x9d\x9e\x1c\x04\x46\xb7\xb3\x54\xe6\xa5\xbb\x4a\x40\x02\x6e\x30\x78\x86\x03\x99\x1b\xdd\x6a\xc1\xfa\x89\x08\x7a\xbd\xa4\xb7\x2d\x45\x43\x9a\x35\x12\x4a\xa0\x07\xa6\x52\xf4\x63\x32\x2a\x83\x92\xd6\x2e\xfd\x68\xe9\x2d\x80\xc5\xc8\x0a\x3b\x3f\x26\x23\xee\x87\x3a\x5d\xd4\x6b\x3f\x22\x0d\x71\xed\xb5\xe6\x0f\xd7\x33\x81\x9f\x09\xbc\xce\xb6\x76\x15\xb1\xcb\xf3\xd3\x3b\xbb\xbe\xf1\xa5\x56\xf7\x2e\x31\xae\xd5\x53\x27\x55\x31\x58\xf6\x2c\xcb\x7a\x78\xc8\xbf\xe9\x26\xd1\x16\xc3\xd0\x86\x30\x3a\xb4\x0d\x96\x35\x4c\xe2\x84\x05\x03\x7b\xb1\xb9\xc0\x20\x80\x05\xc3\x73\x59\xe0\x80\x0d\x8b\x91\x1e\xb2\x21\x74\x01\x89\x90\x71\x13\x23\x96\x2b\x70\x05\xee\xb8\x53\x70\x11\x29\x18\x61\xf8\xcf\xcf\x30\x3c\x13\xba\x28\x08\xbc\x80\xad\x16\xca\xc5\x42\x31\xb3\xf3\x5f\x9e\x12\xd9\xd0\x85\x2c\x34\x30\xf2\x43\xf8\xe5\x83\x80\xef\xef\xf9\x1a\x6c\xda\xd8\xaf\x1a\xba\x67\x6e\x69\x5f\x37\x30\x08\xc3\x87\xfc\x0b\xf6\x80\x09\xcd\xfb\x28\x88\xe1\x6b\x02\x88\x98\x3d\x09\x7b\xc6\x92\x59\x78\x18\x7b\xeb\x7d\x4f\xcf\x88\x21\x62\xdd\x33\xd8\xb3\x0a\x29\x03\x22\xd6\x6b\xbe\xd9\x60\x11\x45\x70\x01\x22\xcd\xab\x5c\xae\x11\x42\x23\x42\x1e\x39\x00\x1a\x1e\x89\x02\x0f\x87\x8c\x0f\x08\xc4\xcc\x02\xc3\xcd\x0d\x9d\x3a\x72\xb9\x5c\xe3\xdb\xcd\x0d\xd3\x17\x3b\x63\xa6\x3d\x50\xc6\xea\xa0\x3f\x62\x6e\x6e\x52\x8a\x5d\x3a\xc8\xef\x87\x10\xba\x9b\x6b\x84\x3e\x20\x97\xe7\x13\x4a\xdd\x33\x1e\xed\x41\xc4\x8f\xa3\x90\xa1\x5a\x40\x12\x65\x4d\x42\xc6\x32\x99\x5f\xd6\x52\xca\xf2\xc0\x7c\x3b\x3d\x1d\xcc\xca\xe5\x1a\xac\x5d\x4a\x17\x26\x5a\x1d\x50\x63\xc4\xec\x81\x17\x5e\xe0\x9e\xf9\x88\x62\x90\x7b\xe6\x04\xf5\x7a\x50\xfe\x5c\x3e\x9d\xb5\x10\x59\x78\xcc\x02\x41\x6c\xee\xb9\x72\xa3\x08\x44\x71\x98\x4a\xb0\x26\x5a\x7d\x28\x9c\x88\x85\x09\xe7\xb9\x74\x26\x90\xc8\xb2\x23\x82\x88\xf5\x2e\x8c\x86\x47\x08\x34\x22\x68\x32\x7f\x30\xd7\x56\x00\x21\xb9\x66\xee\x99\xeb\x00\x9a\xd7\x27\xb3\x33\xce\xfe\x48\xec\xf8\x90\x88\x9a\x28\x3c\x6d\x64\xdd\x1b\xc0\xfd\xfe\x2f\xbf\xe6\x9b\x2f\x2f\xcc\x19\x46\x3b\x91\x15\x50\x68\x5c\x33\xaf\xaf\x07\x4a\x36\x8c\xa9\xd9\xc4\xba\xa1\xde\xcc\x68\x70\xb0\x36\x63\xae\xef\xad\x61\xf0\xce\x54\x3a\x75\x16\xd4\x98\x24\x7e\xf8\xd4\xda\xb7\xb9\xf5\x56\x72\xbf\x4c\x64\xc5\x0d\x4a\x0c\x6d\xa6\x8b\x73\x8d\x4f\x31\x3b\x0b\x5a\x10\x93\x1b\x1a\xb0\x30\xff\xa9\x3d\x27\xe1\x5c\xae\xa1\x37\x17\x5e\xd0\x60\xf5\xd3\x4e\xa2\x23\xb0\xbc\xbd\x7e\x6d\x1b\x10\x0b\x9a\x7c\x44\x2d\xc9\x28\x71\xa6\xc5\x1b\x27\x66\x0d\xcb\x67\xcf\xf2\x91\x49\xcf\x62\x5e\x5e\x98\x84\xe7\x09\x99\xcc\xeb\xeb\x27\x48\xdf\x2e\x42\xd1\x52\x76\x86\x45\x1d\xd5\xf6\x4c\xf8\x06\x30\x9b\xe0\x1f\xe7\xfa\x02\x61\x98\x75\x59\xf2\x5c\xc0\x90\x58\x91\xcd\x34\x99\x52\xfe\x03\x57\x7f\x72\xb9\x72\x1d\x2a\xff\x79\xa4\x62\xf4\x46\xa6\x11\x42\x0c\x8d\x28\x43\xd7\xe3\x28\xda\x27\x9a\xe7\xd3\x62\x47\x35\xa5\xa5\x80\x59\x30\x88\x30\x27\xa5\x5d\xcf\xa4\x45\x3a\xad\x15\x05\xba\x9f\x44\x2a\xc1\xfb\xb2\x0f\x3e\xb1\xa7\xef\x59\x16\x22\xd6\x57\xaa\xc5\x79\x99\x38\x67\x30\x6c\x68\x2c\x75\x6f\x93\xb9\x57\x54\xe3\xfd\xeb\xdc\x91\xca\x20\x93\x36\x08\xcb\x8b\xa3\x0f\xac\xa3\x01\x2a\x50\xd2\x11\x04\x03\x9d\x56\x7c\x2f\x38\x4a\x35\xc3\xc8\xf4\xe2\xa8\xc1\x26\xa4\xbf\xb9\x32\x3f\xaf\x18\x0c\x82\x4b\x8a\x51\xd2\x05\xc5\x12\x52\x18\x99\x30\x08\xfe\x2b\xc5\x80\x05\xc9\x45\x9f\xa5\xc4\x0b\xca\xed\x89\xc9\xd7\x45\xed\x2e\x87\xfe\x3c\xea\x69\xde\x7e\x9c\xc8\x87\x86\x18\x81\x80\x56\xeb\x6c\x4b\x3b\xdc\xec\x1c\x1d\x1b\x92\x19\x20\xe1\x2a\x20\x62\x7d\x67\x4c\x14\x02\x1d\x43\xf3\x9e\xf9\x16\x82\x15\x34\x99\xbf\xfe\xda\x93\xd3\xf5\xb7\x63\x95\xfb\x7e\xc4\xf1\x03\xe4\x82\x60\x4b\x45\xf6\x9c\xdf\x99\xa4\x34\xdf\x33\xcc\x51\xf8\xc0\xfd\x9a\x74\x8e\x2c\xe4\x2f\xef\x8a\x33\x4c\xc8\x49\x71\x1e\x25\xab\x5f\x69\xa1\x49\xad\xfb\xd8\x45\xc7\x8a\x72\x76\x37\xbf\x52\x0d\xbe\xe2\x44\xb0\x82\x97\x7c\x98\x71\x22\x58\xc1\xb7\x3e\x3c\xb9\x90\x12\x2f\x7b\x30\xeb\xc2\x94\x33\xeb\xc1\x74\xe7\xc8\xfc\x9a\x6f\x8e\xc0\x0a\xbe\xbc\xec\x09\x7f\x5c\x9b\xd7\xf7\xd7\xd7\x6f\x5d\xf4\x13\x15\xf1\x9d\x0f\xac\x00\x6e\xb3\x8e\x38\x58\x94\xfa\xc2\x3c\x9f\x09\x56\x30\x49\xb1\xa6\x9a\xac\x2e\x2b\xf1\x36\x66\xf4\x32\x25\x57\xfc\x74\x2e\x81\x16\x88\xd0\x0a\x32\x2e\x0c\x43\x60\xc1\x4c\xab\xd8\x67\x4c\x10\x9c\xdc\x79\xaa\x01\xa7\x8c\x3a\xa7\x33\xaf\xaf\x9f\xdd\xa8\x15\x0c\x42\xe4\x91\x6c\xa2\x1c\x7d\x02\xf6\xf3\xb7\x1d\x45\x7e\x78\xcf\xb2\x16\x8a\xec\x58\x4f\x86\x7c\xc7\x47\x18\x7b\x01\x60\x0f\x3f\xba\x31\x11\x08\x2c\x18\x3d\xe4\xff\x4f\xc7\x80\x2c\x33\xcd\xf3\x38\xd0\xa4\xe2\xe9\x44\x93\x9d\x53\x72\x7b\x8c\x63\xa7\x07\x17\xa2\xd7\x3c\x34\xdf\x69\xaa\xf4\x79\xef\x3d\x2d\x8f\x2b\xda\x98\x92\xd1\x3d\x79\xa0\xb3\xb9\x28\x48\xe3\x81\xca\xf0\x8a\xc0\xf4\x07\x5d\x66\x2a\x89\x9a\xa8\xee\x67\xf4\x8f\xe6\x7c\x3a\x61\x27\x63\x7e\xfe\xdd\xc4\x0c\x4d\x14\x79\x01\x13\xc6\x7a\xca\x70\xb1\xa5\x17\x3f\x18\x97\xf7\xc2\x86\x7b\x43\x4f\x01\x88\x40\x5a\xe7\x81\x4b\x4b\xed\xc2\xa2\xee\x79\x67\xcc\x99\x3c\xf6\xac\xd3\xc9\xef\xe1\x29\xf9\x23\x6c\xec\x7d\x8c\x9d\x75\x54\x83\xdd\xbf\xf8\x34\x42\x23\x40\x7e\xc4\x84\x81\xf1\x85\x97\xbd\x05\x58\x21\xc3\x2b\x38\x21\x5b\x2c\x94\x0b\xa5\xe2\x61\x83\xbe\xe4\x39\xc9\xdb\x47\x0a\xf7\xd3\xc0\x80\x58\x31\x06\x01\x45\x2e\x15\x6a\x85\xea\x71\xe3\x1f\x23\xff\xed\x5b\xf0\xbf\x8c\x0e\x4c\xd3\x23\x2c\xed\x97\x2c\x2d\x99\x74\xf1\x6f\x1f\x91\x80\xbb\x30\x02\x9f\x02\x1b\xee\xa7\xe4\x15\xc4\xde\xe6\x02\x07\xcd\x96\x35\x22\x26\xed\xf2\xbe\xcf\x3c\x30\xc7\x68\x78\x66\x8c\xe1\x2f\xc7\x5f\xe1\xbf\x33\xff\xf3\xbf\xbf\xfe\x4e\xd3\xe9\xe3\x43\x42\x18\xac\x90\x01\xc3\x4f\x35\x31\x51\x40\xf3\x72\xf5\x37\x6c\x41\xfc\x36\x56\x0d\x56\xf7\xcc\x6d\xf3\xea\xaa\xc1\x26\x7f\x2a\xf8\xff\x00\x00\x00\xff\xff\x3b\x8d\x4d\xd8\x3a\x18\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 6202, mode: os.FileMode(420), modTime: time.Unix(1507990982, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _runJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x58\xeb\x6f\xdb\xba\x15\xff\x9e\xbf\xe2\x94\x37\x28\x24\xc4\x93\x92\x6e\xc3\x2e\x52\x68\x17\xb7\xbd\x37\xc0\x05\xda\x75\x68\x80\xed\x43\xd2\x01\xb4\x74\x24\x6b\xa5\x48\x81\xa4\xec\x78\xad\xff\xf7\xe1\x90\xd4\xcb\x96\xfb\x00\x9a\x0f\xb1\x44\x9e\xf7\xf9\x9d\x87\xcd\xdb\x36\xd1\x9d\x8c\xca\x4e\xe6\xb6\x56\x32\xba\xd4\x4a\xd9\xfb\x5c\xb5\xb8\x82\xcb\x8d\xb5\xed\x0a\x2e\x6d\xdd\xa0\xea\xec\x0a\x84\xca\xb9\x78\xd7\x5a\x13\xc3\xa7\x0b\x80\x2d\xd7\x60\x20\x83\x68\x57\xcb\x42\xed\x12\x62\x85\x0c\x46\x11\xf1\xcb\x0b\x00\x93\xd8\xda\x0a\x84\x0c\xd8\x0e\xd7\xad\x56\x39\xa3\xe3\x34\xc5\xa2\xb6\x4a\x83\xb1\xdc\xa2\x81\x5d\x2d\x04\xac\x11\x8c\x55\x1a\x0b\xd8\xa0\x46\xc7\x9c\x97\x15\x64\x4e\x1d\x80\x6a\xad\xb9\x0d\xcf\x00\x76\x83\x0d\xde\x02\xc3\x5c\xd4\xad\x41\xb6\x0a\xe7\xa2\x96\xf8\x8f\xae\x59\xa3\x36\xb7\x60\x75\x87\xee\xfc\x70\x01\x70\xf0\xf6\x08\x35\x8a\x6c\x54\x41\x32\x84\xaa\x02\x7f\xa9\x84\x50\xbb\x37\x2a\xff\xe8\x99\x57\xdf\xa1\x59\x23\x2f\xde\x49\xb1\x9f\x72\x7a\x7b\xfe\xad\x79\xdb\xd6\xb2\x5a\x32\x88\xc2\x58\xcb\xb6\xb3\x66\xb0\xca\x6c\xd4\xee\x76\x0c\x77\xc4\xe8\x40\xb2\xd5\x60\x81\xea\xec\x5c\x09\x6a\x3d\x3f\xe0\x15\x4a\x3b\x55\x17\x07\xff\x6a\x41\xa6\xb3\xf1\xcd\xdc\x82\xec\x84\x18\xe3\x33\x18\xe3\x1f\x7c\xb6\x0c\xea\x2d\x6a\x28\xb8\xe5\xc1\x66\x7a\xa4\xec\x9b\x24\x3c\x7d\x3a\xc4\x9e\x36\xfb\xfa\x5f\x90\x91\x77\x5a\xff\x51\x40\x06\xd7\x7d\x24\x34\xca\x02\xf5\x1b\x97\xa2\x01\x95\x05\x0a\xcb\xe3\xe0\x7d\x5d\x42\xf4\x8c\x54\x26\x6f\x54\x15\x0f\x21\xd1\x68\x3b\x2d\x81\x39\x74\xf9\xf0\xf6\xb4\x53\x6e\x38\xd2\xd9\x53\xa6\xe9\x5a\x75\xb2\x70\xb7\x28\x2d\xd4\xb2\xc0\x27\x58\xef\xa1\xa9\x25\x10\x62\x50\x5a\xbd\xbf\x98\x09\x78\xcb\xed\x26\x69\xf8\x53\xe4\x4f\x56\xd0\x5b\xf5\xae\x2c\x0d\x5a\xf8\xd3\x70\xf0\x96\x3f\xdd\xd7\xff\xf3\x05\x41\xba\x72\x25\x04\xe6\x16\x24\xee\x52\x83\xf4\x88\x85\x03\x8a\x71\x04\x14\x08\xf7\x06\x19\x3c\x7c\xf0\x4c\xbb\x4d\x2d\x10\x22\x4a\xe8\xe8\x0b\x11\x36\x90\x0d\x7a\x1e\xbc\x25\x81\x25\xf8\xdf\x8c\xf4\x00\x6b\x8d\xfc\x63\x7f\x7d\x98\x85\xe4\xea\x6a\xca\xe6\x93\x9f\x10\xf2\x1e\x9a\xa4\xfd\x30\x15\xe2\x6c\x4b\xda\xce\x6c\xa2\x5c\x70\x63\xd0\x38\x12\xb8\x82\x26\x59\xc7\x73\xe9\xfe\x7f\xae\xa4\x51\x02\xa9\xf6\x7c\x36\xe1\x17\x60\xee\x81\xc1\x2d\xb0\xb2\x13\x82\xad\x80\xf9\xec\xb3\x55\xd0\x20\x50\x56\x76\xb3\x0a\xf6\x05\xc1\x21\xd1\x9e\xe2\xbf\xaa\x96\x11\x63\xee\xea\x30\xc7\xd0\x5d\x27\xc4\x14\x44\xbd\x03\xae\x01\x24\x06\x6d\x34\x60\x2d\x2a\xb9\x30\x18\x27\x1a\x5b\xc1\x73\x8c\xd2\x47\x79\x99\xae\x80\xb1\x78\x49\xf0\x6f\xce\xfe\xb3\x92\x79\xdb\xa2\x2c\x22\xf6\x28\x19\x5c\x8d\x78\xf6\x99\xfb\xa2\x8a\xef\xa9\x9c\x4e\x93\x73\xd4\x22\xc8\x84\xa4\xe5\x76\x23\x79\x83\xa3\xfc\x87\xff\x3c\xa6\x1f\xae\x82\x0e\xb8\x02\x66\xf6\xd2\xb7\x5e\x62\xdf\xfa\xca\xa5\x8f\x2d\x0a\xf5\x94\x18\x83\x51\xa7\x85\xc7\x70\x1c\x3a\xb7\xc6\x5c\x49\x49\x40\x5d\xf0\x76\x9b\x68\xb4\x7a\x1f\xcd\x43\x54\x53\x61\xf8\x22\xdc\x26\x4a\x76\x6d\xc1\x2d\x2e\xb1\x13\xc6\xb6\x09\x91\x67\x19\xd4\xc5\xb4\x90\x87\x20\x47\x21\xe5\x07\x40\x61\xf0\x88\x82\xf2\x3b\x10\x78\x91\xa4\x9b\x64\xbe\x0c\xe9\xb8\xe4\x6d\x2b\x66\x16\x26\x4a\xe6\x1b\x2e\xab\x99\x49\xc1\x49\x2c\xc6\x44\x0e\x47\x90\xc1\xf0\x7c\x2a\x76\x6c\x32\x27\x32\x80\x8a\x1b\xee\xf8\xb6\xce\x55\x34\x96\x4e\xa9\xa4\xbd\xe3\x4d\x4d\x53\x82\xfd\x41\x65\x31\x8c\x0f\x80\x75\xf5\x5a\x09\xa5\x6f\x81\xfd\xf4\xdb\xab\x17\x3f\xbf\xf8\x99\xf5\xa5\x14\x27\x6b\x5e\x54\x18\xb1\xc7\xae\xbc\xc6\xbf\xb1\x89\xdf\x01\x3a\x2e\x61\x86\x6f\x9d\xc9\x84\xb5\x3e\x23\xf9\x06\xf3\x8f\xf7\xe1\x62\x31\x0d\xcf\x42\xad\xd3\x34\x80\xcf\x9f\x61\xfa\x6e\x46\x7f\x4e\xc5\x8f\xe5\x38\x4d\x83\x53\x2a\x6a\xea\xa2\xfd\x0c\xf1\xa2\xe0\xf9\xf3\xd9\xfb\xc3\xe4\x25\xb4\x2c\xb7\x53\xf8\x51\x13\xba\xda\xdd\x19\xca\xd1\x9a\x5e\x57\x96\x05\xd6\x49\x41\x85\x25\xc3\xe7\xdc\xf4\x1b\xc5\x22\x0a\x7a\x47\xd3\x34\xe7\xf9\x06\xfb\x49\xe0\xa3\x74\xce\x6a\xc8\x82\xc4\x0a\x6d\x0f\xc6\x31\xe0\xfd\xc9\x02\x12\xd3\x74\xc3\x65\x21\x70\x66\xda\xe5\x8e\xdb\x7c\x13\x31\xe7\xf8\x6b\x25\xcb\xba\x4a\xfe\xa9\x55\xa5\x79\xf3\xab\xae\x0c\x5b\x8d\xd6\x72\x5d\x99\x59\x0e\xa7\x07\xe7\xb2\xd2\x6a\x37\x57\x89\xf4\xe1\x3a\xc4\xd1\x31\xd3\xc5\x97\x98\x89\x28\x8d\x7c\x4b\x89\x2f\xd3\xc4\xa2\xb1\x91\x63\x1a\xb9\x82\xf0\xf7\x58\xfd\xfe\xd4\x26\x97\x37\x53\xfe\x71\x09\x24\x2a\x17\x04\x5f\x3d\x83\xcf\x8e\x6c\xe6\xb8\xff\xe8\xb4\x6b\x70\x0e\x05\xfd\xd2\xd2\xc7\xe0\x04\x9f\x1e\x65\x99\x5f\x6b\x08\xc9\x0f\xb3\x49\x18\x08\xc2\x58\x71\x80\xb9\x21\xaa\xe3\x8b\xbf\xd3\xf9\xf3\xe7\xb3\x3a\x88\xa7\xf3\x6f\x5a\x2f\x59\xaf\x77\x88\xe8\x30\xf9\xbc\xb9\x61\x05\x0b\x2d\xf5\xd4\xdd\x6f\x71\x2d\x4d\x1d\x7e\xa0\x96\xb6\xe6\xc2\xf9\x17\x8c\x98\xb8\x37\xd4\xd8\x51\xfd\xce\x4a\x30\x03\x2e\xab\x4e\x70\x9d\xe4\xaa\xdd\x07\x3d\xbd\xdd\xa7\xc8\xfd\x92\x0f\x6c\x22\x78\x0a\x4d\x17\xae\x29\x34\xfd\xc1\x14\x55\x69\x8a\x4f\x16\xa5\xa9\x95\x1c\x37\x1e\xda\xc5\x69\x78\xb4\x5a\xb5\xa8\x6d\x8d\x86\x8d\x10\x4d\x93\xab\xc7\x24\x4a\x46\xf4\x1d\x25\x85\x04\xe0\x93\x3d\x05\x60\xbf\x60\x97\x0a\x32\x78\xad\x0a\x7c\x5b\x6b\xad\x74\x52\xd6\xb2\x78\xab\x0a\x7c\xb5\xff\xbd\x37\x25\xc2\x27\x1b\xcf\x77\xa0\x52\xf9\xa6\x55\xaa\xc4\x99\xf7\x2c\xcb\x80\xd1\xba\xcc\xa6\x78\x08\x96\x0f\x64\x4b\x1b\x90\x6f\x13\x74\x1b\xd1\xbf\x61\x15\x14\x8a\x17\x3e\xa1\xa5\x56\x0d\xb8\xde\x33\x84\x64\x7b\xd4\x41\xe7\xbd\xe7\xf3\xe7\x61\xdd\xed\x97\xe9\xa5\x7e\x44\x9e\xb8\x3b\x32\x7e\x3b\xad\x17\x22\xa4\x45\x68\x1b\xcf\x57\x61\x87\x03\xe2\x73\x2d\x76\xb1\xa9\x2d\xd7\xef\x64\x69\x3c\x46\xf4\xa8\xd7\x97\xa2\x98\x76\x9c\xa5\x99\x7e\xb6\x8c\xce\xd4\xd1\xfb\x4e\xca\x5a\x56\xc7\x7a\xf5\x5c\xb1\xdd\xb7\xa8\x4a\xd0\xae\xfa\xd9\x5a\x29\x81\x5c\xce\x92\xb9\x38\xb6\xbf\x32\xb8\x27\xa3\x5b\xd3\x66\xfb\xd3\x8b\x9b\x57\xbf\xfe\xe5\xaf\x6e\xb7\x3d\x1a\xe5\xc7\xc3\xfc\xe6\x86\x7d\x83\xc3\x69\x6a\x2c\xd7\x36\xd5\xe8\x3e\xfd\xb0\xa7\xa7\xc5\xcd\x8c\x6b\xe0\x82\xbe\x8d\xee\x43\x50\xfa\x61\x1a\x5e\x87\x09\x4a\x12\x12\x7f\x3f\xce\xf4\xfe\x1c\x1d\x9c\x08\xec\xfe\xdc\xfd\x1e\x10\x2c\x4d\xda\xce\x46\x2c\x58\xc3\xe2\xfe\xd4\x6e\x50\x46\xe3\xae\x73\x9a\xfb\x99\x7c\x1a\xde\x47\x76\xfe\x02\xec\xbd\x17\x8a\x85\x8b\xde\x7d\x78\x7e\x39\x11\xd0\xff\x22\x11\x9d\x51\x70\xa4\xc2\x2d\xf7\x53\xfe\xc3\x0a\xfe\x7c\x7d\x7d\x1d\x8f\x67\x87\xd5\xa9\xd1\x1a\x4d\x7b\xc6\x70\x17\x18\xba\x77\x5f\x7d\x27\x62\xc2\xd3\x10\x8f\xb2\x96\x5c\x88\xfd\xb2\xa1\xf3\xf8\xcf\xac\x3c\x4c\x17\x85\x5c\x35\x4d\x6d\xc3\xa2\x30\xac\x79\xcb\x5f\x40\xe8\x66\x29\xa1\x74\x7c\x9c\xcf\xb0\xe0\xdc\xf9\x29\xf6\xe9\x70\x72\x7a\xbc\xe9\x7c\x65\x77\x9b\xe3\x43\x19\x1b\x31\xd2\xcb\x56\x53\x99\xdf\x0d\x15\x67\xf9\xf1\xd2\xf9\xcd\x28\x18\xb8\x7f\x24\x08\xc6\x60\xfe\x08\x0c\x8c\x19\x5b\x86\x40\xf8\x26\xb6\xc5\xe5\x62\xf7\x1b\xee\x3d\xda\x7f\x71\xd1\x61\x74\x66\x67\x3e\xb3\x9a\x1e\x5e\x5e\x90\x9e\xff\x07\x00\x00\xff\xff\x34\x3c\xaf\x67\x07\x14\x00\x00")

func runJsBytes() ([]byte, error) {
	return bindataRead(
		_runJs,
		"run.js",
	)
}

func runJs() (*asset, error) {
	bytes, err := runJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "run.js", size: 5127, mode: os.FileMode(420), modTime: time.Unix(1507990831, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _servicesJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x50\xc1\x6e\xea\x30\x10\xbc\xe7\x2b\xe6\x45\x1c\x8c\x84\x92\x0f\x40\x7c\xc0\x7b\x87\xc7\x81\x63\xd5\xc3\xd6\x6c\x82\x8b\x6b\x47\xf6\x26\x14\x41\xfe\xbd\x8a\x31\x58\xbd\x58\xeb\xdd\x9d\xd9\x99\xa1\x61\x68\x22\x87\xc9\x68\x56\xb5\xf5\x9a\xec\x7e\x90\x58\x6f\xd0\x8d\x4e\x8b\xf1\x4e\xad\x82\xf7\x72\xd0\x7e\xe0\x35\x6e\x15\x30\x51\x80\x26\x7d\x62\xec\x50\x66\xcd\xca\xf1\x45\x49\x18\x79\xbd\xad\x80\xc0\x32\x06\x57\x48\xce\x7c\xdd\xe0\xc8\x1d\x8d\x56\xe2\x83\xe7\xc1\x14\x25\x60\x87\x74\xf8\x20\x3e\x50\xcf\x4d\xcf\xf2\x57\xf8\x6b\xc1\x24\x2e\xc0\x74\x50\x7f\xa2\x84\x27\x10\x19\x56\xdf\xe6\xfa\xb1\x31\xa7\xb7\x6d\x23\x0b\x8c\x33\x62\xc8\x62\x22\x3b\x72\xea\x27\xb9\x6f\x67\xbe\xbe\x63\x07\x72\xfd\x68\x29\x34\xfc\x2d\xec\x8e\xea\x36\x17\x61\xb8\xdf\xb1\xfc\xff\x1d\xf6\xff\x9b\x81\x42\x64\xb5\x5c\xcd\x2a\xda\xf6\x42\xa2\x4f\xe8\x7c\x80\x3e\x91\xeb\x39\x16\xf6\x66\x95\x86\x2a\xeb\x5b\xfc\xe6\xf2\x95\xc1\x44\xb6\x18\xc0\x6f\xcf\xb1\x78\xce\xe7\xa3\x04\xe3\x7a\xd3\x5d\x13\x2e\x4b\x00\xe6\x27\xed\x12\x75\x2a\x5f\xea\x72\xe6\xfe\xe3\x93\xb5\xa4\x5e\xee\x14\xfb\xcb\xea\xbc\xad\xe6\xf5\xb6\xfa\x09\x00\x00\xff\xff\x26\x61\x2a\xba\xf9\x01\x00\x00")

func servicesJsBytes() ([]byte, error) {
	return bindataRead(
		_servicesJs,
		"services.js",
	)
}

func servicesJs() (*asset, error) {
	bytes, err := servicesJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "services.js", size: 505, mode: os.FileMode(420), modTime: time.Unix(1507957018, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"app.css": appCss,
	"cm.js": cmJs,
	"directives.js": directivesJs,
	"index.html": indexHtml,
	"run.js": runJs,
	"services.js": servicesJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"app.css": &bintree{appCss, map[string]*bintree{}},
	"cm.js": &bintree{cmJs, map[string]*bintree{}},
	"directives.js": &bintree{directivesJs, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"run.js": &bintree{runJs, map[string]*bintree{}},
	"services.js": &bintree{servicesJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

