// Code generated by go-bindata.
// sources:
// static/css/app.css
// static/index.html
// static/js/app.js
// DO NOT EDIT!

package agent

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cssAppCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x6d\x8b\xe3\x36\x10\xfe\x1c\xff\x0a\x95\xe3\xe0\x2e\xac\x1d\x65\xb3\xbb\x77\x75\x28\x74\x5b\x8e\x5e\xa1\xa5\x9f\xfa\x03\x14\x6b\xec\x88\xc8\x1a\x23\xc9\x9b\xa4\x25\xff\xbd\xe8\xc5\xaf\x49\xe8\x1e\x07\x6b\x47\x8f\xe6\xed\x79\x66\xc6\x7b\x5b\xcb\x07\xb2\x43\x7e\x26\xff\x26\x8b\x12\x95\x4d\x4b\x56\x0b\x79\xce\xc9\xaf\xd8\x6a\x01\xfa\x81\xd4\xa8\xd0\x34\xac\x80\x6d\xb2\x68\x18\xe7\x42\x55\x39\xa1\xdb\x64\x51\x33\x5d\x09\x15\x9e\x27\x57\xbf\x83\x7c\x03\x2b\x0a\xb6\x4d\x16\xf8\x06\xba\x94\x78\x4c\xcf\x39\xd9\x0b\xce\x41\x6d\x93\x4b\x92\x74\x2e\xb9\x30\x8d\x64\xe7\x9c\x94\x12\x4e\xce\xa6\x50\xe9\x1e\x44\xb5\xb7\x39\x59\x53\xfa\xb6\xf7\x68\x03\x12\x0a\xeb\xf0\xe9\x11\x76\x07\x61\x53\xd6\x34\xc0\x34\x53\x05\xe4\x44\xa1\x02\x87\xca\x5a\x91\xed\x5a\x6b\x51\x39\xe4\x51\x70\xbb\xcf\xc9\x57\xda\x9c\x86\xc0\x53\x09\xa5\xb3\xfc\xec\x7e\xbc\x24\xc9\x6a\xf9\xd3\xff\xff\x5b\xae\x92\x9a\x09\x75\x2b\x5c\xf7\x27\xe5\x42\x43\x61\x05\xaa\x9c\x68\x3c\x6e\x7b\xd7\x6b\x4a\x3f\x7a\x2f\x59\x81\xca\x82\xb2\xef\xb1\x50\xa0\x6c\x6b\x15\x0f\x72\xf2\x32\x98\x7b\x0e\xd6\xde\x1b\x72\xf0\xaa\x51\x1a\x4f\xad\xb7\xb6\x8e\x15\xee\x02\x5c\x87\xe2\x58\x38\xd9\x94\x49\x51\x39\xff\xa0\x2c\xe8\x31\xd5\x11\xb4\x43\xcd\x41\xa7\x3a\x72\xd3\x9c\x88\x41\x29\x38\xf9\xf0\xfa\xfa\x3a\xe3\x99\xb5\x16\x5d\xa8\x43\x04\x59\xb1\x87\xe2\x50\x33\x7d\xc8\x44\x11\xf8\x19\xa9\x67\x82\x14\xaa\x69\xad\xe9\x61\x7d\xbd\x1c\xcb\x21\xff\x01\x6c\x1a\xa6\xdc\x9b\x82\xc2\x02\xef\x25\x6c\xc4\x3f\xe0\xb2\x0b\x24\xcf\xe0\x5c\x98\xbb\x37\x7c\xa6\x97\xe5\x6a\x1c\x8f\x15\x56\x42\x26\x54\x89\x59\x29\x40\xfa\x3b\xbe\x60\x1c\x0a\xd4\x2c\xb0\xd6\x2a\x0e\x5a\x8a\x10\xe1\x24\x99\xab\x6b\xb1\xce\x4e\x88\xf7\xc1\x4e\xca\xbe\x64\x3b\x3c\x8d\xc4\xdc\x29\x6a\x96\x92\xa9\x99\x94\xa0\x67\xd9\xd0\xec\x47\xa8\x67\x2e\x74\xab\x52\x63\x99\x35\xb7\xb1\xb3\x36\x79\xa4\xb1\x4d\xb2\x12\xa5\xc4\x63\x4f\x8a\xd5\x4c\x19\x11\x52\xc7\x86\x15\xc2\x9e\x09\x30\x03\x84\x66\x1b\x13\x6e\xd4\x60\x0c\xab\xc0\x3b\xea\xac\x5a\x6c\x72\xb2\x89\x46\x5d\x8a\x11\x34\xaf\x4d\xa7\xc1\x00\xea\xeb\x20\xd9\x0e\xa4\xc3\x16\xad\x36\xa8\x73\xd2\xa0\xe8\x80\xef\x6e\x0b\x5f\x0c\x26\x54\x28\x57\x83\x5d\x1a\x1a\x24\xb3\xe2\x0d\xb6\xa3\x5e\xb9\x8c\xd0\x19\x70\x61\xd1\x5f\x1a\xcf\xa8\x47\x1a\xd3\xf9\x30\x9c\x4f\x66\x61\x3f\x3d\x7f\x10\x75\x83\xda\x32\x65\xb7\x63\xbf\x6c\x67\x50\xb6\xd6\xf9\xf5\xe5\x71\xc3\x34\xf6\x18\xf5\x5d\x67\x2d\xd6\xe1\x39\x90\xe2\x9e\x46\x13\xf2\xe3\x2c\x4c\x89\xd5\x95\x60\x26\x93\x7a\xde\xd7\x37\xb2\xe9\x7a\xdd\x07\x74\xb7\xd3\x67\x7d\x3e\xb8\x77\x9a\xbc\xd9\xba\x53\x5c\x86\xad\x0d\xfa\xc5\xd6\x3e\xcc\x0f\x41\xeb\x70\x08\x5a\x5f\x1d\xb2\xca\x4d\x53\x7f\x1c\x1e\xc7\xde\x84\x9a\x34\xe2\x34\x2e\xef\xd4\x49\x08\xa5\x53\xd0\x07\x4a\x1f\xe9\x17\x7e\x0f\xec\x82\x18\x81\xbf\xbe\xac\x9f\x28\xbd\x07\xee\x23\x89\xf0\x4a\xc3\xd9\x63\x67\xcd\x73\x93\xfb\x48\xf9\xa6\xab\x7f\x60\xbd\x7b\x65\xc5\xa1\xd2\xd8\x2a\x9e\x13\x5d\xed\xd8\x27\xfa\x40\xe2\xff\x6c\xfd\x79\xcc\xe9\xc6\xe3\x7b\x3a\xc3\x6b\xd4\xc2\xe3\x7a\x32\xc7\x19\x17\xad\xc9\xc9\xb0\x09\xff\xfc\xeb\x97\xdf\xff\xf8\x96\xfc\x5c\x03\x17\x8c\x7c\xaa\xd9\xa9\xdb\x13\x5f\x36\x2f\xcd\xe9\xb3\x8b\xbd\x5b\xdb\xf7\xd7\xd6\x25\x59\x4c\x16\xcf\x62\x64\x27\xaa\xf1\xf6\xbe\x99\x2d\x98\xa0\x99\xfe\xd7\xae\x22\x57\x6a\x9c\xf8\x0b\xc3\x3a\xba\x1d\x24\x3f\xc5\xcc\x16\xcc\x5c\x38\xe9\x4e\x62\x71\x70\xae\x27\xf3\xf1\xd9\xcf\xc7\xeb\xd1\x73\xdb\x78\x89\xba\x9e\x1a\x8f\xf9\x4c\xd1\x66\x8f\x47\x75\xff\x4e\x17\xc9\xdc\xc5\x78\xa7\xdc\x2e\xe6\x25\xb9\x24\xcb\x55\xb2\x5a\x7e\xff\xfb\xb7\x6f\xcb\xd5\x40\xea\x68\xf9\x3f\x3d\xd1\xc8\xea\xf8\xfb\xe4\xce\x27\x4d\x17\xc2\x64\xc8\x4c\xe6\xc4\x8c\xb0\xf8\xa1\x75\x4d\xd7\x25\xf9\x2f\x00\x00\xff\xff\x61\x86\x78\x18\x75\x0a\x00\x00")

func cssAppCssBytes() ([]byte, error) {
	return bindataRead(
		_cssAppCss,
		"css/app.css",
	)
}

func cssAppCss() (*asset, error) {
	bytes, err := cssAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "css/app.css", size: 2677, mode: os.FileMode(420), modTime: time.Unix(1474469783, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x4d\x8b\x1b\x39\x10\x3d\xf7\xfc\x0a\x8d\x2e\x4e\x60\xdc\x9d\x19\x76\x21\x98\x76\x87\x90\xcd\xc2\xc2\x42\x86\xcc\x5e\x96\x90\x83\x2c\x55\xcb\xb2\x65\xa9\x91\xd4\x9e\x31\x8e\xff\xfb\x22\xf5\x77\xfb\x63\x9c\xc0\x9e\x2c\xab\xea\x95\xaa\x9e\x4a\xaf\xa5\xf4\xf6\x8f\x2f\x9f\xfe\xf9\xf7\xf1\x33\x5a\xba\x8d\xcc\x6e\x52\xff\x83\x14\x9f\x92\xa2\x98\xe3\x67\x58\x14\x46\x53\x9c\xdd\x44\xe9\x12\x08\xcb\x6e\xa2\x28\x75\xc2\x49\xf0\x2e\x0b\xa1\xd8\x1c\x33\xe2\x48\xfc\x49\xab\x5c\xf0\xf8\xd1\x68\x6e\xc8\xe6\xa3\xe1\xf6\xdb\xbb\xef\x38\xab\xf1\x69\x12\x30\x01\x2d\x85\x5a\x23\x03\x72\x8e\xad\xdb\x49\xb0\x4b\x00\x87\xd1\xd2\x40\x3e\xc7\x49\x42\x99\x5a\xd9\x98\x4a\x5d\xb2\x5c\x12\x03\x31\xd5\x9b\x84\xac\xc8\x4b\x22\xc5\xc2\x26\x16\x36\x44\x39\x41\xa7\xa5\x48\x1e\xe2\x87\xf8\xa1\x9d\x89\x37\x42\xc5\xd4\x5a\xfc\xea\x22\xd4\xda\x84\x14\x45\xe7\x1c\x5c\x32\xf4\x4d\xf1\x29\x95\x9a\xac\xbf\xa3\x3d\x62\xc2\x16\x92\xec\x66\x48\x69\x05\xe8\x90\x26\x95\xd3\x4d\x94\x26\x35\x0f\xe9\x42\xb3\x1d\x6a\x30\x21\x90\x40\x54\x12\x6b\xe7\x58\x6a\xba\x46\xb9\x96\x52\x3f\x23\x41\xb5\xc2\x59\x9a\x88\xe0\xb2\x21\x42\xf9\x41\x94\x5a\xa0\x4e\x68\xd5\x40\xa8\x56\xce\x68\x59\xa5\x14\x45\xe9\xf2\xbe\xb1\x04\xea\xea\xe9\x28\xb5\x05\x51\x3f\xc9\xbd\x87\x34\xf0\x36\x45\xa1\x8a\xd2\x59\xe4\x97\x05\xe5\xaa\x2c\xab\x6a\x04\x5d\xcf\xb1\x5d\xea\xe7\xbf\x2a\x97\x39\xba\xed\xfe\xb5\x95\x44\x9e\x89\xfb\x7a\xc4\xc4\xb6\x89\x5b\x0a\x54\x87\xce\xb5\xd9\xd4\x21\x83\x65\xef\xa3\xa8\x19\xea\x82\x1d\xda\xaa\x86\x01\xaa\x06\x13\x2a\xd7\x28\x17\x20\x59\xe3\x16\x3d\x39\xe2\x4a\x5b\x63\x12\x26\xb6\xa7\xf1\x01\x69\x83\xef\x28\x40\x57\x3f\x5d\x02\x5d\x6f\x88\x59\xf7\x4b\x6f\x76\x42\x01\x75\xc0\xd0\x07\x34\xe1\x06\x40\x4d\xd0\x0c\x4d\x0c\xb0\x49\xaf\xfa\xde\x56\x9c\xc2\xb5\x7f\x02\x96\x09\xdb\x4d\xe0\x1a\x1f\xb5\xbb\x38\x40\x7e\x51\x52\x28\x08\xb0\x2f\x79\x1e\xc6\x7d\x44\xbd\x3f\x06\x6a\xd0\x9b\xb7\x38\xab\xfd\x06\x3b\x5d\x71\xa2\xf8\xd4\xd3\xdd\x5b\xa2\xa5\xe2\x2a\x2e\x42\x7f\x7d\x2d\x95\x12\x8a\xbf\x42\xc7\xc9\xd6\xec\x41\xeb\x61\x00\x7f\x7e\x11\x81\x89\xac\x1a\x8c\x12\xef\x6d\xec\x60\x67\x4d\xa9\xa6\x7e\x57\x2d\xbe\x5c\x97\x87\xa7\x8b\x2c\xd7\x26\x4d\x16\x19\xaa\xf2\x22\x5c\x37\xc7\x65\x49\x14\x07\xf6\xd1\xf9\xf4\xc3\xc2\x83\x15\x47\xc4\xf5\xcb\xc0\x3e\x6c\x21\x58\x08\xbb\xdf\xa3\x60\x7b\x14\x0c\x1d\x0e\x97\x42\xdc\x1e\xc5\xa0\x9a\xc1\x20\x88\xe7\xe1\x93\x66\x30\x8e\x34\x68\xf2\x71\xc3\xb7\x0b\xe4\x42\x82\x8d\x25\x28\xee\x96\x28\x43\xf7\xf8\x14\x7b\x97\xce\x55\xf4\xa7\x8f\xf0\x1a\xff\xa5\x18\xc3\x52\x0b\x12\xa8\xeb\x39\x2c\x4a\xe7\xea\x16\xd2\x85\xd7\x37\x3b\xc7\xb9\x97\x02\x94\x23\xa1\x50\xc8\x34\x58\x37\x9a\x79\x79\xae\xb4\x22\xf6\xf3\x61\x3b\x42\xbc\xab\xaa\xbf\xa2\xac\xbf\x35\xe7\x42\xf1\xeb\xf4\x62\x24\x14\x43\x8f\x70\x42\x16\xfa\xa5\x7f\x7a\x7c\xe6\xc8\xed\x0a\xa8\x0f\x90\x37\x23\xc1\xbc\xfa\x73\x5d\xba\x13\x55\xfa\xdd\x8a\xbd\xa9\x8b\x22\xc9\x02\xa4\xe7\xa7\x85\x65\xd6\x31\x5d\xba\x34\x09\xa6\x57\x0f\xc5\x2f\x24\x07\xc6\x9c\x4b\xce\x9b\xce\x25\x17\x6c\xd6\x31\x30\xe6\x7f\x4c\x8e\x70\x50\x67\xb9\xab\x8c\xe7\x12\xac\xad\xe1\xe7\x42\x86\x17\x1a\x61\xd4\x03\x55\x33\x9f\xee\xee\xe6\x3b\xe9\x88\xf1\x1a\x3c\x50\xe8\xea\x73\xd7\x4c\x45\x52\x13\x26\x14\x9f\xa1\xe0\x1c\x0b\xc5\xef\xfc\xfd\x82\x2c\x24\xb0\x19\xba\xb5\x64\x0b\x0c\xfd\xf8\x51\x9b\xab\xf1\x6d\x2b\x6c\x77\x6d\x9c\xc2\x88\x0d\x31\x3b\x0f\xa9\x3d\xef\x50\x10\xe4\x19\x42\x2d\xb8\xf1\x3e\xe0\x6c\xbf\x1f\x84\x7c\x73\xa4\xc8\x10\xcc\x41\x91\x9f\xc2\xe8\xad\x97\x9f\xaa\xc8\x57\x45\x67\x70\x72\xaf\x53\x8b\x6b\xf8\x24\x5b\x78\xf3\x76\x70\x6d\x68\xeb\xef\x11\x49\xb6\x30\xe6\xb1\xa3\xd1\x1b\xcf\xb3\xd8\xa7\xb1\xf2\xec\xb3\x58\xcd\xb4\xce\x07\x9c\x3d\x91\x2d\xec\xf7\xb5\xe1\xc3\x84\x4d\x66\x93\xc9\x11\x4d\x3f\x25\x9a\x47\x34\x70\x03\xbb\x86\x8b\x76\x69\xc5\xa7\x4d\x71\x15\x2d\x6c\x60\x6b\xef\x01\x5b\x08\x0d\x98\x7d\x0d\xa3\x4b\x79\x1d\xed\xa5\x3f\x72\x41\x0c\xba\x54\x14\x70\xe2\xc4\x16\xd0\x06\xac\x25\x1c\x7a\x9f\xda\xba\x97\x8c\xe9\x48\xee\xa9\x45\xd7\x6c\x43\x07\x74\x38\x1c\xad\xde\x0d\xbd\xe2\x87\x6b\xf0\xd9\x3b\x71\x77\xe0\xfb\xac\x02\x13\x4e\x9b\x70\x7b\x25\x42\x81\xc1\x67\x3f\x86\xef\xf0\x51\xc5\x01\x8b\xb3\x93\x09\x45\x69\x61\xa0\xbb\xc6\xf3\xd1\x12\x4d\x4f\xea\xd2\xcd\x46\xa2\x7e\x87\xc0\x98\xd9\x48\x4c\xef\x50\x50\xa3\xd9\x91\x88\x1d\xfc\xfa\x85\x81\x63\x16\xd2\xa4\x79\x23\xa4\x96\x1a\x51\x38\x64\x0d\xbd\xe2\x69\x44\x14\x2f\x25\x31\xf1\xca\x26\xf7\xf1\xef\xf1\xfb\x76\xc2\x3f\x8c\x56\xe1\xe2\x5e\xc5\xfb\x85\xd0\x14\x92\xfb\xf8\x21\xfe\xcd\x8f\x7c\x2c\x44\x97\xc4\x58\x70\x73\x5c\xba\xfc\xfd\x85\xd0\x2b\x9b\x6c\x41\xea\x97\xcb\x09\xac\xaa\x07\xd9\xc8\x27\x4d\xfc\x0b\x2b\xbb\x49\x93\xea\x65\xfa\x5f\x00\x00\x00\xff\xff\x7e\x9e\xaa\x74\xaa\x0e\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 3754, mode: os.FileMode(420), modTime: time.Unix(1474469864, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsAppJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x58\x6d\x6f\xdc\xb8\x11\xfe\xee\x5f\x31\x11\x8c\xac\x14\x2b\x94\x7d\x57\x14\xa8\xb7\x6a\x10\xe4\x52\x34\xc5\xe5\xae\x88\x83\xfb\xe2\x73\x01\x5a\x9a\x95\x18\x53\xa4\x4a\x52\x6b\xef\x65\xfd\xdf\x0b\xbe\x48\xa2\xd6\xeb\xdc\x9d\x3f\x78\x29\x72\x38\x7c\xe6\xe1\xbc\x49\xc5\x2b\x68\xb8\xbc\xa5\x1c\x4e\x73\x5a\x21\xbc\x2a\x4e\x4e\xb6\x54\x01\xd6\xcc\x48\x05\x25\xd0\x0a\x89\x7d\x48\x13\x3f\x95\x64\xeb\x13\x3f\x22\x1a\xcd\x55\x2b\xef\xff\xa3\x98\x30\x1f\xa9\x6a\x98\x48\x37\x94\x6b\x9c\x25\x4e\x6f\xb9\xac\xee\xae\x2a\x25\x39\x67\xa2\x81\x12\x3e\x88\x0d\x13\xcc\xec\x62\x25\x9f\x5b\xec\x30\x4d\x68\x85\x85\xb1\xc3\xa2\x61\xa6\x1d\x6e\x97\x27\xbd\x1d\x8c\xf4\x8a\xde\xbb\xb9\x0f\xc2\xc8\x5f\x18\xde\xa7\x46\x0d\xf6\xc4\x08\xf5\x15\x9a\x5f\x28\x1f\x10\x4a\xd8\x0c\xa2\x32\x4c\x8a\x74\x4b\x79\x06\x5f\x4f\x00\xac\x18\x83\x12\x26\xcd\x5a\x33\x29\x48\x2d\x2b\xd2\x4b\xcd\xac\xf0\x67\xf9\x41\xd4\xf8\x90\x4e\x22\x1c\x9d\x12\xd2\xa0\x79\x37\x28\x2d\x55\x9a\x65\xeb\x13\x98\x75\xf8\xf3\xec\x21\x39\x30\xd8\xef\xe1\xf5\x45\xb6\x3e\x79\xf4\xa0\x68\xdf\x5b\x1e\x45\x33\x70\xaa\x48\x27\xeb\x81\x63\xba\xba\xc7\xdb\x5e\xc9\x6a\x95\xc3\xf5\xcd\x08\x5f\x33\x51\x59\xd4\xe9\x04\x7b\xc6\xac\x2b\xca\xed\xda\xf5\x75\xd2\xe9\x24\xbf\x38\x3f\x3f\xbf\xc9\xe1\x3a\xd1\x49\xfe\x57\x3f\xea\xa6\x51\x9b\xe4\xdf\xfd\xc5\x8d\xea\x24\xff\xfe\xc2\xaf\x9a\x36\xc9\x2f\xbe\xbb\xb9\xb1\xc0\x15\x9a\x41\x89\x99\x9d\x9a\x1a\xf4\x47\xf9\xc3\xb6\x50\xc2\x99\xc0\x7b\xf8\x81\x1a\x4c\xb3\xd7\x76\x7d\xed\x56\x37\x52\xa5\x23\x85\xe7\x6b\x60\xf0\x77\x8f\x8c\x70\x14\x8d\x69\xd7\xc0\xce\xce\x46\x4d\x01\x38\x94\x5e\xe4\x9a\xdd\xac\xc3\x3c\xdb\xa4\x5b\xbb\xf3\xfa\xe2\x26\x1b\xc1\x6c\xe1\x0c\xf4\xf5\xf9\x24\x63\x31\x7c\xa4\xa6\x25\x4a\x0e\xa2\x4e\xb7\x85\x93\xf6\xab\x8f\xee\x7f\xd8\x98\xbc\x4e\xec\xec\xe3\xfa\xe4\xd1\xdd\xcb\x09\xed\x7b\x52\x33\x65\x2f\x6d\x6b\xfd\xaa\x91\x49\x0e\x07\x94\x86\xbd\x5f\x83\x22\x6d\x14\xab\xcc\x25\x24\x6f\x93\xdc\x4d\x71\x26\xee\x2e\xe7\x4d\x3a\x07\xcc\x81\x1a\xa3\xf4\xd2\xba\x3a\x07\xb3\x8e\x9e\xab\x16\xab\xbb\xd8\xf1\x66\x71\x80\x8a\x23\x55\x9f\x59\x87\x72\x30\xa9\xc9\xd6\xd3\x02\xdb\xa4\x75\x06\x48\x0c\x3e\x98\xd4\x79\x41\x5a\x67\xd1\xba\xb1\x1c\xa2\x19\xb7\xba\x43\x72\xb0\x3e\x30\x09\x3d\x86\x5f\x4d\x4e\xef\xa9\xa9\xda\xd4\x81\x25\xb4\x91\x91\xed\x3a\x46\x53\x43\x09\xd3\x1d\xeb\xe8\x34\xa7\x3e\x9d\x35\x47\xa4\x3f\x9e\x3c\x1e\x61\x98\xcb\xe6\x0f\x33\xbc\x7a\xb7\x3a\xce\x70\x25\x7b\xcc\x01\x39\x76\x47\x89\xb6\xbe\x7f\xcf\x44\x2d\xef\x89\x1d\x5a\xb9\xd8\x59\xa8\x02\xe1\x5c\x32\xf6\x3c\x97\x2e\xe2\x59\x77\x08\xd9\x48\xce\xe5\x3d\x94\x60\x53\xc7\xb8\x64\x15\x12\x29\xd2\x95\xdf\xb5\x8a\xec\xc1\x2d\x0a\x13\x33\x37\x2b\xff\x81\x6d\x36\x36\x60\x91\xf8\xe7\x7f\x21\x6b\x5a\x03\xaf\x01\x49\xc5\x19\x0a\xe3\x27\x22\x72\xed\xde\x1e\x55\x85\xc2\x5d\x6a\xa4\xa5\x84\x73\x78\x63\x2f\x15\x2e\x67\x85\x9f\x65\x5f\xcc\x42\xd9\xab\x8b\xf3\xf3\xa5\xae\xc9\x98\x49\x69\x59\xc2\x42\x8a\x6d\xd2\x51\xa8\x2c\x17\x14\x8c\xb1\x37\xcb\x1e\x10\xe4\x07\xf3\x72\x2d\xab\xa1\x43\x61\xc8\xff\x06\x54\xbb\x2b\x97\x18\xa5\x4a\x93\xb0\x83\xb0\x4a\x8a\x24\x23\xda\xec\x38\x12\xd9\xd3\x8a\x99\xdd\xa4\xc6\x1a\x07\x97\xf3\x65\x3c\x4e\xac\x8c\x4c\x07\xc1\x1f\x65\xb3\x08\x1b\xb6\x49\x97\xa8\x23\x72\xa0\x84\xbf\x85\xbf\xc3\x48\x18\x33\xae\xbd\x59\x14\x26\xf5\xde\x93\xb9\x4b\x56\xa8\xd9\x6f\x68\x2f\x79\x3c\x31\x5b\xfa\xc8\x69\x90\x42\xf3\xc4\x13\x72\xa8\xa9\xa1\x31\xc0\x85\xe7\x01\xe0\x92\x9e\xb7\x9c\xa7\x89\xee\xa9\x65\x66\x23\xd5\x7b\x5a\xb5\x73\x82\xb7\xf3\xb1\x2a\x00\x3b\x43\x14\x76\x72\x8b\x69\xe4\x37\x8f\x4f\xe2\x71\x01\x55\xd3\x2d\xfe\x01\xa4\x45\x71\x6b\xb3\x29\x54\x83\x52\xd6\x59\x98\x2d\x74\x70\xbb\x83\x8e\x09\xe0\xb2\x01\x14\x46\xed\x16\x86\xb9\x1c\xdc\xd1\x87\x54\x78\x75\xe4\x47\xd9\xfc\xbc\xd9\x68\x34\xaf\xc7\xc7\x8f\xf4\xe1\x8a\xfd\x86\x11\xda\xfb\x96\x71\xf4\xa5\x79\x61\x9c\xf5\xd8\x0e\xca\x49\xd1\xb5\xb8\x59\x47\xcb\x6c\x93\xbe\xe8\x32\xb8\x55\x48\xef\xe2\x79\x71\x76\xb6\x3e\xd0\x62\x69\xb2\x8a\x46\x8f\xac\x14\x52\x83\xef\xc3\x5d\x07\xbe\xd7\x87\xbc\xda\x04\xfb\x4e\x0a\xe3\xa3\xaf\x23\xb7\x4f\x24\x2a\x4e\xb5\xfe\x89\x76\xe8\xd6\xfb\x78\x1d\x09\xed\x7b\x14\xf5\xbb\x96\xf1\xda\xdf\x5c\x74\x3f\xd3\x28\x72\xe2\xdf\x49\xa1\x1a\xd5\x96\x55\x98\x26\x7a\x27\xaa\x67\x33\xe8\x61\x8a\xbc\xc3\xdd\xa2\x56\x53\x9b\xe2\xb8\xac\x28\xbf\x32\x52\xd1\x06\x6d\x9f\xf2\xc1\x60\x97\x5a\x49\x7f\xb0\x2d\xb8\x63\x07\x14\x79\x0e\x6e\x29\xb7\x52\x70\x06\x49\x99\xc0\x99\x55\x96\xad\xa1\x28\xa8\xd6\x43\x87\xf0\xef\xab\x9f\x7f\x8a\x0a\x6e\xd8\xe5\xeb\xcb\x1d\xee\xf2\x23\xfd\xd5\x74\x3f\xc6\x76\x8f\x56\x01\xb1\xa9\x5f\x34\x6c\xb3\x73\x52\x23\x27\x0b\xc4\x7a\x46\x9c\xdb\xad\x23\x5f\x39\x84\xf6\xce\xd7\xf7\x91\x38\x35\x88\x39\x84\x4e\x95\x94\xe6\xca\x73\x73\xda\x1a\xd3\xe7\x70\x6a\x7c\xa5\xcc\xc1\x32\x1b\x35\x51\x73\x11\xb1\x9b\xa0\x84\x79\xf3\x7a\x6c\x0e\x45\x3f\x18\xd7\xb4\x90\x69\xe8\x0d\xd3\xad\xbc\xbf\x9c\x8c\x94\x83\xb9\x74\xe8\xf2\xb1\x82\x28\xb5\x9c\xa0\x0d\x8a\x20\x13\xac\xf1\x2d\x14\xe3\x78\x09\xab\xd5\xfc\xa4\x2f\x41\x0c\x9c\x7b\x23\xc1\x61\x5e\x58\x95\x78\x20\xc4\x02\xf0\x4e\x5d\x14\xd6\x77\x50\xb9\x40\x0a\xc0\x07\x35\x3a\x82\x6b\x56\x7b\x6a\x5a\x41\x3b\x24\x0a\x7b\x4e\x2b\x4c\x8b\xeb\xff\xfe\x5a\xdc\x9c\x9d\x16\x79\x92\x64\xf6\xc6\x9d\xd7\x8d\x66\x5b\x45\xce\xe8\x30\xf8\xfa\x38\xae\x6c\xdd\xb4\xfd\xbf\x45\x2e\x1f\x88\xd6\x98\x0e\x8a\x87\xe4\xe2\x00\x13\x85\x95\x14\x02\x2b\x73\xac\xf5\xd9\x12\x85\x46\xed\xd2\xf1\x1a\x03\xcf\xb6\xff\x48\xfc\xf9\x44\x8a\xa1\xb7\x4d\xe6\xb1\xed\xd6\x77\x09\xab\xe1\x45\x59\x02\xab\x67\x2f\x73\x0a\xec\xca\x7a\x6e\x7d\xb0\x63\x66\xcc\xdb\x8b\x5e\x71\x5a\x0b\x89\x72\xc2\xee\x96\x68\xdf\xf3\x05\x3e\x22\x45\xd5\x52\xd1\x2c\x00\x05\x13\x71\xc2\xa0\xc9\x34\x05\x25\x4c\xe3\x67\xd5\x16\x85\x23\xcb\x42\xa8\xa3\xf6\x63\xea\x1b\xaf\xc2\xc2\x31\x0a\x5e\x04\x1f\xb0\xfe\x62\xdf\x30\xe2\xe7\xa8\x55\x7a\xaa\x1d\xa6\x4e\x39\xe6\xc3\x9d\xe9\x3a\x14\x28\x21\x56\x05\x2f\x5f\x2e\x9e\xaf\xa3\x87\x90\xab\x5d\x24\x79\xf7\x0b\x99\xfc\x9f\xcf\x48\xce\x68\xc6\xb3\x6c\x07\xe2\xb6\x46\xa4\x84\x77\x4d\x4f\xb8\x9e\xdf\xab\xa4\x48\xbd\xe7\x3f\x4d\x8d\x76\x5b\x45\xab\x16\xc7\x4a\xe6\x69\x7a\x0e\xf7\xfc\xbe\xd7\x8c\xef\x6a\xe1\xf2\x67\xde\xd3\xe3\xee\x90\x39\x88\x2d\x15\x35\xc7\x08\xe2\xd4\x66\x27\x8e\x80\x77\x52\x6c\x58\x13\x7e\x06\xe5\x22\xd0\x91\x12\x43\x5f\x5c\xd5\x48\x77\xe9\x33\x80\xbd\xd2\xeb\x9b\x29\x59\x87\xd5\xf0\x56\xe5\x7b\x3a\x2b\x72\xb8\xf0\x0f\x3b\xff\xf2\xe5\xc2\x1b\xb2\x28\x44\x22\x9f\x29\xc7\x23\xa7\xb6\xd9\x55\xa3\x28\xc3\x1e\xd8\xf4\x6d\xfc\x45\xe1\x58\x02\x26\x0c\xa3\xdc\x19\x11\x8e\x1b\x6d\x98\xdc\x69\xe9\xaa\x4f\xa1\xe9\xe8\xf5\xb8\x92\xfd\x2e\x1c\x74\xfc\x82\x8e\x03\x8e\xb4\x1d\x22\x8e\x63\xc8\x3f\xc7\xd1\x50\x14\xf8\x60\x50\x68\x26\x85\x86\xb4\x6a\xa5\xd4\x08\x1b\x25\x3b\xb0\x95\x44\x5f\x16\xe1\x63\x04\xa9\x64\x57\xd0\x2f\xf4\x41\xaa\xa6\x70\x5f\x2a\x14\x62\xd1\x51\x6d\x50\x15\x9c\xdd\xba\xb9\x4e\xd6\x98\x4d\x21\x62\x9f\xa0\x84\xe2\x57\x92\x1a\xd9\xf1\xfd\x17\x2d\xc5\xfe\x8b\xde\x57\x5a\xef\x5b\xd3\xf1\x7d\x23\xf7\x3b\xfa\xa6\xe3\x7b\xdd\xee\x1f\x3a\x9e\x9d\x16\xc4\xa0\x36\x01\xf5\x1b\xf8\x84\xcd\xfb\x87\x9e\x9c\xda\xae\x79\xc5\x04\x5b\x8d\x90\x2b\xa9\x94\xff\x24\x31\x91\xed\x0f\x2b\x4b\x58\xed\x3a\xbe\xca\xc6\xc3\x57\x3b\xda\xf1\xd5\xfa\xa9\x54\x23\x23\xa1\x46\x72\x2a\x9a\x20\x36\x07\xca\x95\xff\x36\x92\x66\xb6\x3c\x7f\x94\x75\xf8\x46\x63\x77\x15\xc9\x99\x33\x76\x44\xc4\x25\xad\xbd\x0f\x38\xee\x5c\x68\x2e\xbe\x26\x3c\x1f\x9a\xfb\x7d\xa8\x02\x21\x29\x0d\x4a\x3d\x1f\xae\x6c\x93\x3a\x01\x5b\x0b\xb6\xa3\x2b\x2d\xbf\xfa\xa4\xdb\x09\x95\x7f\x19\x67\x1b\x70\x59\xe8\xb8\x3b\x8d\xe5\xd4\x50\x65\x0a\xfb\x9a\x4a\x95\xf1\x59\xda\x8e\x8e\x96\x33\xaa\x80\x72\x85\xb4\xde\x7d\x1a\x84\xf0\xdf\xb5\x5c\xc4\x84\xc7\x29\xf7\x59\x0d\xc4\xaf\xcf\xd9\x78\x9c\x47\x67\xa7\xad\xfb\x7e\xde\xb5\x2e\xa4\x1f\x7c\xfd\xb2\x22\xab\x8c\x98\x16\xc5\xe1\xd7\xa0\x85\x12\x9b\x5b\x0f\xc0\xbc\x81\xd5\x27\xaf\x00\xeb\x95\x75\x9d\xab\x30\x1e\xab\xc1\xd8\x1d\x2d\x14\x2f\x55\xba\xef\x78\x6b\x1b\x6c\xdf\xcf\x1f\x19\x1e\xa3\xc8\x52\xa8\xfb\x23\x70\x9c\x4d\x76\xcd\xb5\x11\x61\x5b\x46\x36\x4c\x50\xce\x77\xdf\xb2\xc4\xd3\xe4\xcf\x3d\x99\x7b\xe6\x50\x22\x2a\xd9\x75\xcc\x84\xfc\x3b\x15\xd1\x63\xb7\xe3\x57\x8e\xb1\x6e\xa7\x9f\x21\x5d\xea\xb9\x33\x58\x24\xab\x6f\x5d\x80\xd3\x77\x58\x69\x9f\xe5\x76\x92\xfe\xf3\xd4\xce\xc0\xff\x2c\xb3\x33\x13\xc7\x88\x0d\x9d\xdb\x16\x8f\xfb\xf9\x41\x58\x3d\x53\xe8\x9f\x4b\xd3\xbe\x5b\xff\x7f\x00\x00\x00\xff\xff\x01\x20\x42\x6a\x5f\x16\x00\x00")

func jsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_jsAppJs,
		"js/app.js",
	)
}

func jsAppJs() (*asset, error) {
	bytes, err := jsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js/app.js", size: 5727, mode: os.FileMode(420), modTime: time.Unix(1476174881, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"css/app.css": cssAppCss,
	"index.html": indexHtml,
	"js/app.js": jsAppJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"css": &bintree{nil, map[string]*bintree{
		"app.css": &bintree{cssAppCss, map[string]*bintree{}},
	}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"js": &bintree{nil, map[string]*bintree{
		"app.js": &bintree{jsAppJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

